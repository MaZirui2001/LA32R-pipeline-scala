// Generated by CIRCT firtool-1.56.1
module Unorder_Issue_Queue(
  input         clock,
                reset,
  input  [1:0]  io_insts_disp_index_0,
                io_insts_disp_index_1,
                io_insts_disp_index_2,
                io_insts_disp_index_3,
  input         io_insts_disp_valid_0,
                io_insts_disp_valid_1,
                io_insts_disp_valid_2,
                io_insts_disp_valid_3,
  input  [6:0]  io_insts_dispatch_0_prj,
                io_insts_dispatch_0_prk,
  input         io_insts_dispatch_0_rd_valid,
  input  [6:0]  io_insts_dispatch_0_prd,
  input  [31:0] io_insts_dispatch_0_imm,
  input  [4:0]  io_insts_dispatch_0_alu_op,
  input  [1:0]  io_insts_dispatch_0_alu_rs1_sel,
                io_insts_dispatch_0_alu_rs2_sel,
  input  [3:0]  io_insts_dispatch_0_br_type,
  input  [4:0]  io_insts_dispatch_0_mem_type,
  input  [31:0] io_insts_dispatch_0_pc,
  input  [5:0]  io_insts_dispatch_0_rob_index,
  input         io_insts_dispatch_0_predict_jump,
  input  [31:0] io_insts_dispatch_0_pred_npc,
  input  [6:0]  io_insts_dispatch_1_prj,
                io_insts_dispatch_1_prk,
  input         io_insts_dispatch_1_rd_valid,
  input  [6:0]  io_insts_dispatch_1_prd,
  input  [31:0] io_insts_dispatch_1_imm,
  input  [4:0]  io_insts_dispatch_1_alu_op,
  input  [1:0]  io_insts_dispatch_1_alu_rs1_sel,
                io_insts_dispatch_1_alu_rs2_sel,
  input  [3:0]  io_insts_dispatch_1_br_type,
  input  [4:0]  io_insts_dispatch_1_mem_type,
  input  [31:0] io_insts_dispatch_1_pc,
  input  [5:0]  io_insts_dispatch_1_rob_index,
  input         io_insts_dispatch_1_predict_jump,
  input  [31:0] io_insts_dispatch_1_pred_npc,
  input  [6:0]  io_insts_dispatch_2_prj,
                io_insts_dispatch_2_prk,
  input         io_insts_dispatch_2_rd_valid,
  input  [6:0]  io_insts_dispatch_2_prd,
  input  [31:0] io_insts_dispatch_2_imm,
  input  [4:0]  io_insts_dispatch_2_alu_op,
  input  [1:0]  io_insts_dispatch_2_alu_rs1_sel,
                io_insts_dispatch_2_alu_rs2_sel,
  input  [3:0]  io_insts_dispatch_2_br_type,
  input  [4:0]  io_insts_dispatch_2_mem_type,
  input  [31:0] io_insts_dispatch_2_pc,
  input  [5:0]  io_insts_dispatch_2_rob_index,
  input         io_insts_dispatch_2_predict_jump,
  input  [31:0] io_insts_dispatch_2_pred_npc,
  input  [6:0]  io_insts_dispatch_3_prj,
                io_insts_dispatch_3_prk,
  input         io_insts_dispatch_3_rd_valid,
  input  [6:0]  io_insts_dispatch_3_prd,
  input  [31:0] io_insts_dispatch_3_imm,
  input  [4:0]  io_insts_dispatch_3_alu_op,
  input  [1:0]  io_insts_dispatch_3_alu_rs1_sel,
                io_insts_dispatch_3_alu_rs2_sel,
  input  [3:0]  io_insts_dispatch_3_br_type,
  input  [4:0]  io_insts_dispatch_3_mem_type,
  input  [31:0] io_insts_dispatch_3_pc,
  input  [5:0]  io_insts_dispatch_3_rob_index,
  input         io_insts_dispatch_3_predict_jump,
  input  [31:0] io_insts_dispatch_3_pred_npc,
  input  [2:0]  io_insert_num,
  input         io_prj_ready_0,
                io_prj_ready_1,
                io_prj_ready_2,
                io_prj_ready_3,
                io_prk_ready_0,
                io_prk_ready_1,
                io_prk_ready_2,
                io_prk_ready_3,
  input  [6:0]  io_wake_preg_0,
                io_wake_preg_1,
                io_wake_preg_2,
                io_wake_preg_3,
  input         io_issue_ack_0,
                io_issue_ack_1,
                io_issue_ack_2,
                io_issue_ack_3,
                io_issue_ack_4,
                io_issue_ack_5,
                io_issue_ack_6,
                io_issue_ack_7,
                io_stall,
                io_flush,
  output [6:0]  io_insts_issue_0_inst_prj,
                io_insts_issue_0_inst_prk,
  output        io_insts_issue_0_inst_rd_valid,
  output [6:0]  io_insts_issue_0_inst_prd,
  output [31:0] io_insts_issue_0_inst_imm,
  output [4:0]  io_insts_issue_0_inst_alu_op,
  output [1:0]  io_insts_issue_0_inst_alu_rs1_sel,
                io_insts_issue_0_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_0_inst_br_type,
  output [4:0]  io_insts_issue_0_inst_mem_type,
  output [31:0] io_insts_issue_0_inst_pc,
  output [5:0]  io_insts_issue_0_inst_rob_index,
  output        io_insts_issue_0_inst_predict_jump,
  output [31:0] io_insts_issue_0_inst_pred_npc,
  output [6:0]  io_insts_issue_1_inst_prj,
                io_insts_issue_1_inst_prk,
  output        io_insts_issue_1_inst_rd_valid,
  output [6:0]  io_insts_issue_1_inst_prd,
  output [31:0] io_insts_issue_1_inst_imm,
  output [4:0]  io_insts_issue_1_inst_alu_op,
  output [1:0]  io_insts_issue_1_inst_alu_rs1_sel,
                io_insts_issue_1_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_1_inst_br_type,
  output [4:0]  io_insts_issue_1_inst_mem_type,
  output [31:0] io_insts_issue_1_inst_pc,
  output [5:0]  io_insts_issue_1_inst_rob_index,
  output        io_insts_issue_1_inst_predict_jump,
  output [31:0] io_insts_issue_1_inst_pred_npc,
  output [6:0]  io_insts_issue_2_inst_prj,
                io_insts_issue_2_inst_prk,
  output        io_insts_issue_2_inst_rd_valid,
  output [6:0]  io_insts_issue_2_inst_prd,
  output [31:0] io_insts_issue_2_inst_imm,
  output [4:0]  io_insts_issue_2_inst_alu_op,
  output [1:0]  io_insts_issue_2_inst_alu_rs1_sel,
                io_insts_issue_2_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_2_inst_br_type,
  output [4:0]  io_insts_issue_2_inst_mem_type,
  output [31:0] io_insts_issue_2_inst_pc,
  output [5:0]  io_insts_issue_2_inst_rob_index,
  output        io_insts_issue_2_inst_predict_jump,
  output [31:0] io_insts_issue_2_inst_pred_npc,
  output [6:0]  io_insts_issue_3_inst_prj,
                io_insts_issue_3_inst_prk,
  output        io_insts_issue_3_inst_rd_valid,
  output [6:0]  io_insts_issue_3_inst_prd,
  output [31:0] io_insts_issue_3_inst_imm,
  output [4:0]  io_insts_issue_3_inst_alu_op,
  output [1:0]  io_insts_issue_3_inst_alu_rs1_sel,
                io_insts_issue_3_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_3_inst_br_type,
  output [4:0]  io_insts_issue_3_inst_mem_type,
  output [31:0] io_insts_issue_3_inst_pc,
  output [5:0]  io_insts_issue_3_inst_rob_index,
  output        io_insts_issue_3_inst_predict_jump,
  output [31:0] io_insts_issue_3_inst_pred_npc,
  output [6:0]  io_insts_issue_4_inst_prj,
                io_insts_issue_4_inst_prk,
  output        io_insts_issue_4_inst_rd_valid,
  output [6:0]  io_insts_issue_4_inst_prd,
  output [31:0] io_insts_issue_4_inst_imm,
  output [4:0]  io_insts_issue_4_inst_alu_op,
  output [1:0]  io_insts_issue_4_inst_alu_rs1_sel,
                io_insts_issue_4_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_4_inst_br_type,
  output [4:0]  io_insts_issue_4_inst_mem_type,
  output [31:0] io_insts_issue_4_inst_pc,
  output [5:0]  io_insts_issue_4_inst_rob_index,
  output        io_insts_issue_4_inst_predict_jump,
  output [31:0] io_insts_issue_4_inst_pred_npc,
  output [6:0]  io_insts_issue_5_inst_prj,
                io_insts_issue_5_inst_prk,
  output        io_insts_issue_5_inst_rd_valid,
  output [6:0]  io_insts_issue_5_inst_prd,
  output [31:0] io_insts_issue_5_inst_imm,
  output [4:0]  io_insts_issue_5_inst_alu_op,
  output [1:0]  io_insts_issue_5_inst_alu_rs1_sel,
                io_insts_issue_5_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_5_inst_br_type,
  output [4:0]  io_insts_issue_5_inst_mem_type,
  output [31:0] io_insts_issue_5_inst_pc,
  output [5:0]  io_insts_issue_5_inst_rob_index,
  output        io_insts_issue_5_inst_predict_jump,
  output [31:0] io_insts_issue_5_inst_pred_npc,
  output [6:0]  io_insts_issue_6_inst_prj,
                io_insts_issue_6_inst_prk,
  output        io_insts_issue_6_inst_rd_valid,
  output [6:0]  io_insts_issue_6_inst_prd,
  output [31:0] io_insts_issue_6_inst_imm,
  output [4:0]  io_insts_issue_6_inst_alu_op,
  output [1:0]  io_insts_issue_6_inst_alu_rs1_sel,
                io_insts_issue_6_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_6_inst_br_type,
  output [4:0]  io_insts_issue_6_inst_mem_type,
  output [31:0] io_insts_issue_6_inst_pc,
  output [5:0]  io_insts_issue_6_inst_rob_index,
  output        io_insts_issue_6_inst_predict_jump,
  output [31:0] io_insts_issue_6_inst_pred_npc,
  output [6:0]  io_insts_issue_7_inst_prj,
                io_insts_issue_7_inst_prk,
  output        io_insts_issue_7_inst_rd_valid,
  output [6:0]  io_insts_issue_7_inst_prd,
  output [31:0] io_insts_issue_7_inst_imm,
  output [4:0]  io_insts_issue_7_inst_alu_op,
  output [1:0]  io_insts_issue_7_inst_alu_rs1_sel,
                io_insts_issue_7_inst_alu_rs2_sel,
  output [3:0]  io_insts_issue_7_inst_br_type,
  output [4:0]  io_insts_issue_7_inst_mem_type,
  output [31:0] io_insts_issue_7_inst_pc,
  output [5:0]  io_insts_issue_7_inst_rob_index,
  output        io_insts_issue_7_inst_predict_jump,
  output [31:0] io_insts_issue_7_inst_pred_npc,
  output        io_issue_req_0,
                io_issue_req_1,
                io_issue_req_2,
                io_issue_req_3,
                io_issue_req_4,
                io_issue_req_5,
                io_issue_req_6,
                io_issue_req_7,
  output [6:0]  io_prd_queue_0,
                io_prd_queue_1,
                io_prd_queue_2,
                io_prd_queue_3,
                io_prd_queue_4,
                io_prd_queue_5,
                io_prd_queue_6,
                io_prd_queue_7,
                io_prd_queue_8,
  output [3:0]  io_elem_num,
  output        io_full
);

  wire [3:0]  _tail_pop_T_16;
  reg         casez_tmp;
  reg  [6:0]  casez_tmp_0;
  reg         casez_tmp_1;
  reg  [1:0]  casez_tmp_2;
  reg  [6:0]  casez_tmp_3;
  reg  [6:0]  casez_tmp_4;
  reg         casez_tmp_5;
  reg  [6:0]  casez_tmp_6;
  reg  [31:0] casez_tmp_7;
  reg  [4:0]  casez_tmp_8;
  reg  [1:0]  casez_tmp_9;
  reg  [1:0]  casez_tmp_10;
  reg  [3:0]  casez_tmp_11;
  reg  [4:0]  casez_tmp_12;
  reg  [31:0] casez_tmp_13;
  reg  [5:0]  casez_tmp_14;
  reg         casez_tmp_15;
  reg  [31:0] casez_tmp_16;
  reg         casez_tmp_17;
  reg         casez_tmp_18;
  reg         casez_tmp_19;
  reg  [1:0]  casez_tmp_20;
  reg  [6:0]  casez_tmp_21;
  reg  [6:0]  casez_tmp_22;
  reg         casez_tmp_23;
  reg  [6:0]  casez_tmp_24;
  reg  [31:0] casez_tmp_25;
  reg  [4:0]  casez_tmp_26;
  reg  [1:0]  casez_tmp_27;
  reg  [1:0]  casez_tmp_28;
  reg  [3:0]  casez_tmp_29;
  reg  [4:0]  casez_tmp_30;
  reg  [31:0] casez_tmp_31;
  reg  [5:0]  casez_tmp_32;
  reg         casez_tmp_33;
  reg  [31:0] casez_tmp_34;
  reg         casez_tmp_35;
  reg         casez_tmp_36;
  reg         casez_tmp_37;
  reg  [1:0]  casez_tmp_38;
  reg  [6:0]  casez_tmp_39;
  reg  [6:0]  casez_tmp_40;
  reg         casez_tmp_41;
  reg  [6:0]  casez_tmp_42;
  reg  [31:0] casez_tmp_43;
  reg  [4:0]  casez_tmp_44;
  reg  [1:0]  casez_tmp_45;
  reg  [1:0]  casez_tmp_46;
  reg  [3:0]  casez_tmp_47;
  reg  [4:0]  casez_tmp_48;
  reg  [31:0] casez_tmp_49;
  reg  [5:0]  casez_tmp_50;
  reg         casez_tmp_51;
  reg  [31:0] casez_tmp_52;
  reg         casez_tmp_53;
  reg         casez_tmp_54;
  reg         casez_tmp_55;
  reg  [1:0]  casez_tmp_56;
  reg  [6:0]  casez_tmp_57;
  reg  [6:0]  casez_tmp_58;
  reg         casez_tmp_59;
  reg  [6:0]  casez_tmp_60;
  reg  [31:0] casez_tmp_61;
  reg  [4:0]  casez_tmp_62;
  reg  [1:0]  casez_tmp_63;
  reg  [1:0]  casez_tmp_64;
  reg  [3:0]  casez_tmp_65;
  reg  [4:0]  casez_tmp_66;
  reg  [31:0] casez_tmp_67;
  reg  [5:0]  casez_tmp_68;
  reg         casez_tmp_69;
  reg  [31:0] casez_tmp_70;
  reg         casez_tmp_71;
  reg         casez_tmp_72;
  reg         casez_tmp_73;
  reg  [1:0]  casez_tmp_74;
  reg  [6:0]  casez_tmp_75;
  reg  [6:0]  casez_tmp_76;
  reg         casez_tmp_77;
  reg  [6:0]  casez_tmp_78;
  reg  [31:0] casez_tmp_79;
  reg  [4:0]  casez_tmp_80;
  reg  [1:0]  casez_tmp_81;
  reg  [1:0]  casez_tmp_82;
  reg  [3:0]  casez_tmp_83;
  reg  [4:0]  casez_tmp_84;
  reg  [31:0] casez_tmp_85;
  reg  [5:0]  casez_tmp_86;
  reg         casez_tmp_87;
  reg  [31:0] casez_tmp_88;
  reg         casez_tmp_89;
  reg         casez_tmp_90;
  reg         casez_tmp_91;
  reg  [1:0]  casez_tmp_92;
  reg  [6:0]  casez_tmp_93;
  reg  [6:0]  casez_tmp_94;
  reg         casez_tmp_95;
  reg  [6:0]  casez_tmp_96;
  reg  [31:0] casez_tmp_97;
  reg  [4:0]  casez_tmp_98;
  reg  [1:0]  casez_tmp_99;
  reg  [1:0]  casez_tmp_100;
  reg  [3:0]  casez_tmp_101;
  reg  [4:0]  casez_tmp_102;
  reg  [31:0] casez_tmp_103;
  reg  [5:0]  casez_tmp_104;
  reg         casez_tmp_105;
  reg  [31:0] casez_tmp_106;
  reg         casez_tmp_107;
  reg         casez_tmp_108;
  reg         casez_tmp_109;
  reg  [1:0]  casez_tmp_110;
  reg  [6:0]  casez_tmp_111;
  reg  [6:0]  casez_tmp_112;
  reg         casez_tmp_113;
  reg  [6:0]  casez_tmp_114;
  reg  [31:0] casez_tmp_115;
  reg  [4:0]  casez_tmp_116;
  reg  [1:0]  casez_tmp_117;
  reg  [1:0]  casez_tmp_118;
  reg  [3:0]  casez_tmp_119;
  reg  [4:0]  casez_tmp_120;
  reg  [31:0] casez_tmp_121;
  reg  [5:0]  casez_tmp_122;
  reg         casez_tmp_123;
  reg  [31:0] casez_tmp_124;
  reg         casez_tmp_125;
  reg         casez_tmp_126;
  reg         casez_tmp_127;
  reg  [1:0]  casez_tmp_128;
  reg  [6:0]  casez_tmp_129;
  reg  [6:0]  casez_tmp_130;
  reg         casez_tmp_131;
  reg  [6:0]  casez_tmp_132;
  reg  [31:0] casez_tmp_133;
  reg  [4:0]  casez_tmp_134;
  reg  [1:0]  casez_tmp_135;
  reg  [1:0]  casez_tmp_136;
  reg  [3:0]  casez_tmp_137;
  reg  [4:0]  casez_tmp_138;
  reg  [31:0] casez_tmp_139;
  reg  [5:0]  casez_tmp_140;
  reg         casez_tmp_141;
  reg  [31:0] casez_tmp_142;
  reg         casez_tmp_143;
  reg         casez_tmp_144;
  reg  [6:0]  queue_0_inst_prj;
  reg  [6:0]  queue_0_inst_prk;
  reg         queue_0_inst_rd_valid;
  reg  [6:0]  queue_0_inst_prd;
  reg  [31:0] queue_0_inst_imm;
  reg  [4:0]  queue_0_inst_alu_op;
  reg  [1:0]  queue_0_inst_alu_rs1_sel;
  reg  [1:0]  queue_0_inst_alu_rs2_sel;
  reg  [3:0]  queue_0_inst_br_type;
  reg  [4:0]  queue_0_inst_mem_type;
  reg  [31:0] queue_0_inst_pc;
  reg  [5:0]  queue_0_inst_rob_index;
  reg         queue_0_inst_predict_jump;
  reg  [31:0] queue_0_inst_pred_npc;
  reg         queue_0_prj_waked;
  reg         queue_0_prk_waked;
  reg  [6:0]  queue_1_inst_prj;
  reg  [6:0]  queue_1_inst_prk;
  reg         queue_1_inst_rd_valid;
  reg  [6:0]  queue_1_inst_prd;
  reg  [31:0] queue_1_inst_imm;
  reg  [4:0]  queue_1_inst_alu_op;
  reg  [1:0]  queue_1_inst_alu_rs1_sel;
  reg  [1:0]  queue_1_inst_alu_rs2_sel;
  reg  [3:0]  queue_1_inst_br_type;
  reg  [4:0]  queue_1_inst_mem_type;
  reg  [31:0] queue_1_inst_pc;
  reg  [5:0]  queue_1_inst_rob_index;
  reg         queue_1_inst_predict_jump;
  reg  [31:0] queue_1_inst_pred_npc;
  reg         queue_1_prj_waked;
  reg         queue_1_prk_waked;
  reg  [6:0]  queue_2_inst_prj;
  reg  [6:0]  queue_2_inst_prk;
  reg         queue_2_inst_rd_valid;
  reg  [6:0]  queue_2_inst_prd;
  reg  [31:0] queue_2_inst_imm;
  reg  [4:0]  queue_2_inst_alu_op;
  reg  [1:0]  queue_2_inst_alu_rs1_sel;
  reg  [1:0]  queue_2_inst_alu_rs2_sel;
  reg  [3:0]  queue_2_inst_br_type;
  reg  [4:0]  queue_2_inst_mem_type;
  reg  [31:0] queue_2_inst_pc;
  reg  [5:0]  queue_2_inst_rob_index;
  reg         queue_2_inst_predict_jump;
  reg  [31:0] queue_2_inst_pred_npc;
  reg         queue_2_prj_waked;
  reg         queue_2_prk_waked;
  reg  [6:0]  queue_3_inst_prj;
  reg  [6:0]  queue_3_inst_prk;
  reg         queue_3_inst_rd_valid;
  reg  [6:0]  queue_3_inst_prd;
  reg  [31:0] queue_3_inst_imm;
  reg  [4:0]  queue_3_inst_alu_op;
  reg  [1:0]  queue_3_inst_alu_rs1_sel;
  reg  [1:0]  queue_3_inst_alu_rs2_sel;
  reg  [3:0]  queue_3_inst_br_type;
  reg  [4:0]  queue_3_inst_mem_type;
  reg  [31:0] queue_3_inst_pc;
  reg  [5:0]  queue_3_inst_rob_index;
  reg         queue_3_inst_predict_jump;
  reg  [31:0] queue_3_inst_pred_npc;
  reg         queue_3_prj_waked;
  reg         queue_3_prk_waked;
  reg  [6:0]  queue_4_inst_prj;
  reg  [6:0]  queue_4_inst_prk;
  reg         queue_4_inst_rd_valid;
  reg  [6:0]  queue_4_inst_prd;
  reg  [31:0] queue_4_inst_imm;
  reg  [4:0]  queue_4_inst_alu_op;
  reg  [1:0]  queue_4_inst_alu_rs1_sel;
  reg  [1:0]  queue_4_inst_alu_rs2_sel;
  reg  [3:0]  queue_4_inst_br_type;
  reg  [4:0]  queue_4_inst_mem_type;
  reg  [31:0] queue_4_inst_pc;
  reg  [5:0]  queue_4_inst_rob_index;
  reg         queue_4_inst_predict_jump;
  reg  [31:0] queue_4_inst_pred_npc;
  reg         queue_4_prj_waked;
  reg         queue_4_prk_waked;
  reg  [6:0]  queue_5_inst_prj;
  reg  [6:0]  queue_5_inst_prk;
  reg         queue_5_inst_rd_valid;
  reg  [6:0]  queue_5_inst_prd;
  reg  [31:0] queue_5_inst_imm;
  reg  [4:0]  queue_5_inst_alu_op;
  reg  [1:0]  queue_5_inst_alu_rs1_sel;
  reg  [1:0]  queue_5_inst_alu_rs2_sel;
  reg  [3:0]  queue_5_inst_br_type;
  reg  [4:0]  queue_5_inst_mem_type;
  reg  [31:0] queue_5_inst_pc;
  reg  [5:0]  queue_5_inst_rob_index;
  reg         queue_5_inst_predict_jump;
  reg  [31:0] queue_5_inst_pred_npc;
  reg         queue_5_prj_waked;
  reg         queue_5_prk_waked;
  reg  [6:0]  queue_6_inst_prj;
  reg  [6:0]  queue_6_inst_prk;
  reg         queue_6_inst_rd_valid;
  reg  [6:0]  queue_6_inst_prd;
  reg  [31:0] queue_6_inst_imm;
  reg  [4:0]  queue_6_inst_alu_op;
  reg  [1:0]  queue_6_inst_alu_rs1_sel;
  reg  [1:0]  queue_6_inst_alu_rs2_sel;
  reg  [3:0]  queue_6_inst_br_type;
  reg  [4:0]  queue_6_inst_mem_type;
  reg  [31:0] queue_6_inst_pc;
  reg  [5:0]  queue_6_inst_rob_index;
  reg         queue_6_inst_predict_jump;
  reg  [31:0] queue_6_inst_pred_npc;
  reg         queue_6_prj_waked;
  reg         queue_6_prk_waked;
  reg  [6:0]  queue_7_inst_prj;
  reg  [6:0]  queue_7_inst_prk;
  reg         queue_7_inst_rd_valid;
  reg  [6:0]  queue_7_inst_prd;
  reg  [31:0] queue_7_inst_imm;
  reg  [4:0]  queue_7_inst_alu_op;
  reg  [1:0]  queue_7_inst_alu_rs1_sel;
  reg  [1:0]  queue_7_inst_alu_rs2_sel;
  reg  [3:0]  queue_7_inst_br_type;
  reg  [4:0]  queue_7_inst_mem_type;
  reg  [31:0] queue_7_inst_pc;
  reg  [5:0]  queue_7_inst_rob_index;
  reg         queue_7_inst_predict_jump;
  reg  [31:0] queue_7_inst_pred_npc;
  reg         queue_7_prj_waked;
  reg         queue_7_prk_waked;
  reg  [3:0]  tail;
  wire        full = _tail_pop_T_16 >= 4'h8 - {1'h0, io_insert_num};
  wire [7:0]  next_mask =
    ~({io_issue_ack_7,
       io_issue_ack_6,
       io_issue_ack_5,
       io_issue_ack_4,
       io_issue_ack_3,
       io_issue_ack_2,
       io_issue_ack_1,
       io_issue_ack_0} - 8'h1);
  assign _tail_pop_T_16 =
    tail
    - {3'h0,
       io_issue_ack_0 | io_issue_ack_1 | io_issue_ack_2 | io_issue_ack_3 | io_issue_ack_4
         | io_issue_ack_5 | io_issue_ack_6 | io_issue_ack_7};
  wire        queue_next_0_inst_rd_valid =
    (|_tail_pop_T_16) & (next_mask[0] ? queue_1_inst_rd_valid : queue_0_inst_rd_valid);
  wire        queue_next_1_inst_rd_valid =
    (|(_tail_pop_T_16[3:1]))
    & (next_mask[1] ? queue_2_inst_rd_valid : queue_1_inst_rd_valid);
  wire        _queue_2_prk_waked_T = _tail_pop_T_16 > 4'h2;
  wire        queue_next_2_inst_rd_valid =
    _queue_2_prk_waked_T & (next_mask[2] ? queue_3_inst_rd_valid : queue_2_inst_rd_valid);
  wire        queue_next_3_inst_rd_valid =
    (|(_tail_pop_T_16[3:2]))
    & (next_mask[3] ? queue_4_inst_rd_valid : queue_3_inst_rd_valid);
  wire        _queue_4_prk_waked_T = _tail_pop_T_16 > 4'h4;
  wire        queue_next_4_inst_rd_valid =
    _queue_4_prk_waked_T & (next_mask[4] ? queue_5_inst_rd_valid : queue_4_inst_rd_valid);
  wire        _queue_5_prk_waked_T = _tail_pop_T_16 > 4'h5;
  wire        queue_next_5_inst_rd_valid =
    _queue_5_prk_waked_T & (next_mask[5] ? queue_6_inst_rd_valid : queue_5_inst_rd_valid);
  wire        _queue_6_prk_waked_T = _tail_pop_T_16 > 4'h6;
  wire        queue_next_6_inst_rd_valid =
    _queue_6_prk_waked_T & (next_mask[6] ? queue_7_inst_rd_valid : queue_6_inst_rd_valid);
  wire        _GEN = ~(_tail_pop_T_16[3]) | next_mask[7];
  wire        queue_next_7_inst_rd_valid =
    _tail_pop_T_16[3] & ~(next_mask[7]) & queue_7_inst_rd_valid;
  wire [2:0]  _GEN_0 = {io_issue_ack_7, io_issue_ack_6, io_issue_ack_5};
  wire [2:0]  _GEN_1 = {io_issue_ack_3, io_issue_ack_2, io_issue_ack_1};
  wire [2:0]  _io_prd_queue_8_T_2 = _GEN_0 | _GEN_1;
  always_comb begin
    casez ({|{io_issue_ack_7, io_issue_ack_6, io_issue_ack_5, io_issue_ack_4},
            |(_io_prd_queue_8_T_2[2:1]),
            _io_prd_queue_8_T_2[2] | _io_prd_queue_8_T_2[0]})
      3'b000:
        casez_tmp = queue_0_inst_rd_valid;
      3'b001:
        casez_tmp = queue_1_inst_rd_valid;
      3'b010:
        casez_tmp = queue_2_inst_rd_valid;
      3'b011:
        casez_tmp = queue_3_inst_rd_valid;
      3'b100:
        casez_tmp = queue_4_inst_rd_valid;
      3'b101:
        casez_tmp = queue_5_inst_rd_valid;
      3'b110:
        casez_tmp = queue_6_inst_rd_valid;
      default:
        casez_tmp = queue_7_inst_rd_valid;
    endcase
  end // always_comb
  wire [2:0]  _io_prd_queue_8_T_10 = _GEN_0 | _GEN_1;
  always_comb begin
    casez ({|{io_issue_ack_7, io_issue_ack_6, io_issue_ack_5, io_issue_ack_4},
            |(_io_prd_queue_8_T_10[2:1]),
            _io_prd_queue_8_T_10[2] | _io_prd_queue_8_T_10[0]})
      3'b000:
        casez_tmp_0 = queue_0_inst_prd;
      3'b001:
        casez_tmp_0 = queue_1_inst_prd;
      3'b010:
        casez_tmp_0 = queue_2_inst_prd;
      3'b011:
        casez_tmp_0 = queue_3_inst_prd;
      3'b100:
        casez_tmp_0 = queue_4_inst_prd;
      3'b101:
        casez_tmp_0 = queue_5_inst_prd;
      3'b110:
        casez_tmp_0 = queue_6_inst_prd;
      default:
        casez_tmp_0 = queue_7_inst_prd;
    endcase
  end // always_comb
  wire [1:0]  _queue_0_inst_T_3 = 2'h0 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_0_inst_T_3)
      2'b00:
        casez_tmp_1 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_1 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_1 = io_insts_disp_valid_2;
      default:
        casez_tmp_1 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_0_inst_T_3)
      2'b00:
        casez_tmp_2 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_2 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_2 = io_insts_disp_index_2;
      default:
        casez_tmp_2 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_3 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_3 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_3 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_3 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_4 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_4 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_4 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_4 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_5 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_5 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_5 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_5 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_6 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_6 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_6 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_6 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_7 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_7 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_7 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_7 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_8 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_8 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_8 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_8 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_9 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_9 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_9 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_9 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_10 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_10 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_10 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_10 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_11 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_11 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_11 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_11 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_12 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_12 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_12 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_12 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_13 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_13 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_13 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_13 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_14 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_14 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_14 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_14 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_15 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_15 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_15 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_15 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_16 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_16 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_16 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_16 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_17 = io_prj_ready_0;
      2'b01:
        casez_tmp_17 = io_prj_ready_1;
      2'b10:
        casez_tmp_17 = io_prj_ready_2;
      default:
        casez_tmp_17 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_2)
      2'b00:
        casez_tmp_18 = io_prk_ready_0;
      2'b01:
        casez_tmp_18 = io_prk_ready_1;
      2'b10:
        casez_tmp_18 = io_prk_ready_2;
      default:
        casez_tmp_18 = io_prk_ready_3;
    endcase
  end // always_comb
  wire [1:0]  _queue_1_prk_waked_T_1 = 2'h1 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_1_prk_waked_T_1)
      2'b00:
        casez_tmp_19 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_19 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_19 = io_insts_disp_valid_2;
      default:
        casez_tmp_19 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_1_prk_waked_T_1)
      2'b00:
        casez_tmp_20 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_20 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_20 = io_insts_disp_index_2;
      default:
        casez_tmp_20 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_21 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_21 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_21 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_21 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_22 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_22 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_22 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_22 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_23 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_23 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_23 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_23 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_24 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_24 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_24 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_24 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_25 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_25 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_25 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_25 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_26 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_26 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_26 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_26 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_27 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_27 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_27 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_27 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_28 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_28 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_28 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_28 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_29 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_29 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_29 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_29 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_30 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_30 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_30 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_30 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_31 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_31 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_31 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_31 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_32 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_32 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_32 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_32 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_33 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_33 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_33 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_33 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_34 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_34 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_34 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_34 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_35 = io_prj_ready_0;
      2'b01:
        casez_tmp_35 = io_prj_ready_1;
      2'b10:
        casez_tmp_35 = io_prj_ready_2;
      default:
        casez_tmp_35 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_20)
      2'b00:
        casez_tmp_36 = io_prk_ready_0;
      2'b01:
        casez_tmp_36 = io_prk_ready_1;
      2'b10:
        casez_tmp_36 = io_prk_ready_2;
      default:
        casez_tmp_36 = io_prk_ready_3;
    endcase
  end // always_comb
  wire [1:0]  _queue_2_prk_waked_T_1 = 2'h2 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_2_prk_waked_T_1)
      2'b00:
        casez_tmp_37 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_37 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_37 = io_insts_disp_valid_2;
      default:
        casez_tmp_37 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_2_prk_waked_T_1)
      2'b00:
        casez_tmp_38 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_38 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_38 = io_insts_disp_index_2;
      default:
        casez_tmp_38 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_39 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_39 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_39 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_39 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_40 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_40 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_40 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_40 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_41 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_41 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_41 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_41 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_42 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_42 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_42 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_42 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_43 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_43 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_43 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_43 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_44 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_44 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_44 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_44 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_45 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_45 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_45 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_45 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_46 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_46 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_46 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_46 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_47 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_47 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_47 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_47 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_48 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_48 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_48 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_48 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_49 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_49 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_49 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_49 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_50 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_50 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_50 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_50 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_51 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_51 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_51 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_51 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_52 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_52 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_52 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_52 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_53 = io_prj_ready_0;
      2'b01:
        casez_tmp_53 = io_prj_ready_1;
      2'b10:
        casez_tmp_53 = io_prj_ready_2;
      default:
        casez_tmp_53 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_38)
      2'b00:
        casez_tmp_54 = io_prk_ready_0;
      2'b01:
        casez_tmp_54 = io_prk_ready_1;
      2'b10:
        casez_tmp_54 = io_prk_ready_2;
      default:
        casez_tmp_54 = io_prk_ready_3;
    endcase
  end // always_comb
  wire [1:0]  _queue_3_prk_waked_T_1 = 2'h3 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_3_prk_waked_T_1)
      2'b00:
        casez_tmp_55 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_55 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_55 = io_insts_disp_valid_2;
      default:
        casez_tmp_55 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_3_prk_waked_T_1)
      2'b00:
        casez_tmp_56 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_56 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_56 = io_insts_disp_index_2;
      default:
        casez_tmp_56 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_57 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_57 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_57 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_57 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_58 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_58 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_58 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_58 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_59 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_59 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_59 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_59 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_60 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_60 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_60 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_60 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_61 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_61 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_61 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_61 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_62 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_62 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_62 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_62 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_63 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_63 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_63 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_63 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_64 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_64 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_64 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_64 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_65 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_65 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_65 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_65 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_66 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_66 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_66 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_66 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_67 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_67 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_67 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_67 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_68 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_68 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_68 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_68 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_69 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_69 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_69 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_69 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_70 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_70 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_70 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_70 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_71 = io_prj_ready_0;
      2'b01:
        casez_tmp_71 = io_prj_ready_1;
      2'b10:
        casez_tmp_71 = io_prj_ready_2;
      default:
        casez_tmp_71 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_56)
      2'b00:
        casez_tmp_72 = io_prk_ready_0;
      2'b01:
        casez_tmp_72 = io_prk_ready_1;
      2'b10:
        casez_tmp_72 = io_prk_ready_2;
      default:
        casez_tmp_72 = io_prk_ready_3;
    endcase
  end // always_comb
  wire [1:0]  _queue_4_prk_waked_T_1 = 2'h0 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_4_prk_waked_T_1)
      2'b00:
        casez_tmp_73 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_73 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_73 = io_insts_disp_valid_2;
      default:
        casez_tmp_73 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_4_prk_waked_T_1)
      2'b00:
        casez_tmp_74 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_74 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_74 = io_insts_disp_index_2;
      default:
        casez_tmp_74 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_75 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_75 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_75 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_75 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_76 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_76 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_76 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_76 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_77 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_77 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_77 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_77 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_78 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_78 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_78 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_78 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_79 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_79 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_79 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_79 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_80 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_80 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_80 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_80 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_81 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_81 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_81 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_81 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_82 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_82 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_82 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_82 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_83 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_83 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_83 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_83 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_84 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_84 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_84 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_84 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_85 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_85 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_85 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_85 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_86 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_86 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_86 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_86 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_87 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_87 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_87 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_87 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_88 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_88 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_88 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_88 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_89 = io_prj_ready_0;
      2'b01:
        casez_tmp_89 = io_prj_ready_1;
      2'b10:
        casez_tmp_89 = io_prj_ready_2;
      default:
        casez_tmp_89 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_74)
      2'b00:
        casez_tmp_90 = io_prk_ready_0;
      2'b01:
        casez_tmp_90 = io_prk_ready_1;
      2'b10:
        casez_tmp_90 = io_prk_ready_2;
      default:
        casez_tmp_90 = io_prk_ready_3;
    endcase
  end // always_comb
  wire [1:0]  _queue_5_prk_waked_T_1 = 2'h1 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_5_prk_waked_T_1)
      2'b00:
        casez_tmp_91 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_91 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_91 = io_insts_disp_valid_2;
      default:
        casez_tmp_91 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_5_prk_waked_T_1)
      2'b00:
        casez_tmp_92 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_92 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_92 = io_insts_disp_index_2;
      default:
        casez_tmp_92 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_93 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_93 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_93 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_93 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_94 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_94 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_94 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_94 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_95 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_95 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_95 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_95 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_96 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_96 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_96 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_96 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_97 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_97 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_97 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_97 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_98 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_98 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_98 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_98 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_99 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_99 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_99 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_99 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_100 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_100 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_100 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_100 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_101 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_101 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_101 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_101 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_102 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_102 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_102 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_102 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_103 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_103 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_103 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_103 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_104 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_104 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_104 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_104 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_105 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_105 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_105 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_105 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_106 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_106 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_106 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_106 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_107 = io_prj_ready_0;
      2'b01:
        casez_tmp_107 = io_prj_ready_1;
      2'b10:
        casez_tmp_107 = io_prj_ready_2;
      default:
        casez_tmp_107 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_92)
      2'b00:
        casez_tmp_108 = io_prk_ready_0;
      2'b01:
        casez_tmp_108 = io_prk_ready_1;
      2'b10:
        casez_tmp_108 = io_prk_ready_2;
      default:
        casez_tmp_108 = io_prk_ready_3;
    endcase
  end // always_comb
  wire [1:0]  _queue_6_prk_waked_T_1 = 2'h2 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_6_prk_waked_T_1)
      2'b00:
        casez_tmp_109 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_109 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_109 = io_insts_disp_valid_2;
      default:
        casez_tmp_109 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_6_prk_waked_T_1)
      2'b00:
        casez_tmp_110 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_110 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_110 = io_insts_disp_index_2;
      default:
        casez_tmp_110 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_111 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_111 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_111 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_111 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_112 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_112 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_112 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_112 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_113 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_113 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_113 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_113 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_114 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_114 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_114 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_114 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_115 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_115 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_115 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_115 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_116 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_116 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_116 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_116 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_117 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_117 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_117 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_117 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_118 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_118 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_118 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_118 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_119 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_119 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_119 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_119 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_120 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_120 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_120 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_120 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_121 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_121 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_121 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_121 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_122 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_122 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_122 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_122 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_123 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_123 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_123 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_123 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_124 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_124 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_124 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_124 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_125 = io_prj_ready_0;
      2'b01:
        casez_tmp_125 = io_prj_ready_1;
      2'b10:
        casez_tmp_125 = io_prj_ready_2;
      default:
        casez_tmp_125 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_110)
      2'b00:
        casez_tmp_126 = io_prk_ready_0;
      2'b01:
        casez_tmp_126 = io_prk_ready_1;
      2'b10:
        casez_tmp_126 = io_prk_ready_2;
      default:
        casez_tmp_126 = io_prk_ready_3;
    endcase
  end // always_comb
  wire [1:0]  _queue_7_prk_waked_T_1 = 2'h3 - _tail_pop_T_16[1:0];
  always_comb begin
    casez (_queue_7_prk_waked_T_1)
      2'b00:
        casez_tmp_127 = io_insts_disp_valid_0;
      2'b01:
        casez_tmp_127 = io_insts_disp_valid_1;
      2'b10:
        casez_tmp_127 = io_insts_disp_valid_2;
      default:
        casez_tmp_127 = io_insts_disp_valid_3;
    endcase
  end // always_comb
  always_comb begin
    casez (_queue_7_prk_waked_T_1)
      2'b00:
        casez_tmp_128 = io_insts_disp_index_0;
      2'b01:
        casez_tmp_128 = io_insts_disp_index_1;
      2'b10:
        casez_tmp_128 = io_insts_disp_index_2;
      default:
        casez_tmp_128 = io_insts_disp_index_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_129 = io_insts_dispatch_0_prj;
      2'b01:
        casez_tmp_129 = io_insts_dispatch_1_prj;
      2'b10:
        casez_tmp_129 = io_insts_dispatch_2_prj;
      default:
        casez_tmp_129 = io_insts_dispatch_3_prj;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_130 = io_insts_dispatch_0_prk;
      2'b01:
        casez_tmp_130 = io_insts_dispatch_1_prk;
      2'b10:
        casez_tmp_130 = io_insts_dispatch_2_prk;
      default:
        casez_tmp_130 = io_insts_dispatch_3_prk;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_131 = io_insts_dispatch_0_rd_valid;
      2'b01:
        casez_tmp_131 = io_insts_dispatch_1_rd_valid;
      2'b10:
        casez_tmp_131 = io_insts_dispatch_2_rd_valid;
      default:
        casez_tmp_131 = io_insts_dispatch_3_rd_valid;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_132 = io_insts_dispatch_0_prd;
      2'b01:
        casez_tmp_132 = io_insts_dispatch_1_prd;
      2'b10:
        casez_tmp_132 = io_insts_dispatch_2_prd;
      default:
        casez_tmp_132 = io_insts_dispatch_3_prd;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_133 = io_insts_dispatch_0_imm;
      2'b01:
        casez_tmp_133 = io_insts_dispatch_1_imm;
      2'b10:
        casez_tmp_133 = io_insts_dispatch_2_imm;
      default:
        casez_tmp_133 = io_insts_dispatch_3_imm;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_134 = io_insts_dispatch_0_alu_op;
      2'b01:
        casez_tmp_134 = io_insts_dispatch_1_alu_op;
      2'b10:
        casez_tmp_134 = io_insts_dispatch_2_alu_op;
      default:
        casez_tmp_134 = io_insts_dispatch_3_alu_op;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_135 = io_insts_dispatch_0_alu_rs1_sel;
      2'b01:
        casez_tmp_135 = io_insts_dispatch_1_alu_rs1_sel;
      2'b10:
        casez_tmp_135 = io_insts_dispatch_2_alu_rs1_sel;
      default:
        casez_tmp_135 = io_insts_dispatch_3_alu_rs1_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_136 = io_insts_dispatch_0_alu_rs2_sel;
      2'b01:
        casez_tmp_136 = io_insts_dispatch_1_alu_rs2_sel;
      2'b10:
        casez_tmp_136 = io_insts_dispatch_2_alu_rs2_sel;
      default:
        casez_tmp_136 = io_insts_dispatch_3_alu_rs2_sel;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_137 = io_insts_dispatch_0_br_type;
      2'b01:
        casez_tmp_137 = io_insts_dispatch_1_br_type;
      2'b10:
        casez_tmp_137 = io_insts_dispatch_2_br_type;
      default:
        casez_tmp_137 = io_insts_dispatch_3_br_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_138 = io_insts_dispatch_0_mem_type;
      2'b01:
        casez_tmp_138 = io_insts_dispatch_1_mem_type;
      2'b10:
        casez_tmp_138 = io_insts_dispatch_2_mem_type;
      default:
        casez_tmp_138 = io_insts_dispatch_3_mem_type;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_139 = io_insts_dispatch_0_pc;
      2'b01:
        casez_tmp_139 = io_insts_dispatch_1_pc;
      2'b10:
        casez_tmp_139 = io_insts_dispatch_2_pc;
      default:
        casez_tmp_139 = io_insts_dispatch_3_pc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_140 = io_insts_dispatch_0_rob_index;
      2'b01:
        casez_tmp_140 = io_insts_dispatch_1_rob_index;
      2'b10:
        casez_tmp_140 = io_insts_dispatch_2_rob_index;
      default:
        casez_tmp_140 = io_insts_dispatch_3_rob_index;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_141 = io_insts_dispatch_0_predict_jump;
      2'b01:
        casez_tmp_141 = io_insts_dispatch_1_predict_jump;
      2'b10:
        casez_tmp_141 = io_insts_dispatch_2_predict_jump;
      default:
        casez_tmp_141 = io_insts_dispatch_3_predict_jump;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_142 = io_insts_dispatch_0_pred_npc;
      2'b01:
        casez_tmp_142 = io_insts_dispatch_1_pred_npc;
      2'b10:
        casez_tmp_142 = io_insts_dispatch_2_pred_npc;
      default:
        casez_tmp_142 = io_insts_dispatch_3_pred_npc;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_143 = io_prj_ready_0;
      2'b01:
        casez_tmp_143 = io_prj_ready_1;
      2'b10:
        casez_tmp_143 = io_prj_ready_2;
      default:
        casez_tmp_143 = io_prj_ready_3;
    endcase
  end // always_comb
  always_comb begin
    casez (casez_tmp_128)
      2'b00:
        casez_tmp_144 = io_prk_ready_0;
      2'b01:
        casez_tmp_144 = io_prk_ready_1;
      2'b10:
        casez_tmp_144 = io_prk_ready_2;
      default:
        casez_tmp_144 = io_prk_ready_3;
    endcase
  end // always_comb
  wire        queue_temp_1_prj_waked =
    queue_1_prj_waked
    | (|{queue_1_inst_prj == io_wake_preg_3,
         queue_1_inst_prj == io_wake_preg_2,
         queue_1_inst_prj == io_wake_preg_1,
         queue_1_inst_prj == io_wake_preg_0});
  wire        queue_temp_1_prk_waked =
    queue_1_prk_waked
    | (|{queue_1_inst_prk == io_wake_preg_3,
         queue_1_inst_prk == io_wake_preg_2,
         queue_1_inst_prk == io_wake_preg_1,
         queue_1_inst_prk == io_wake_preg_0});
  wire        queue_temp_2_prj_waked =
    queue_2_prj_waked
    | (|{queue_2_inst_prj == io_wake_preg_3,
         queue_2_inst_prj == io_wake_preg_2,
         queue_2_inst_prj == io_wake_preg_1,
         queue_2_inst_prj == io_wake_preg_0});
  wire        queue_temp_2_prk_waked =
    queue_2_prk_waked
    | (|{queue_2_inst_prk == io_wake_preg_3,
         queue_2_inst_prk == io_wake_preg_2,
         queue_2_inst_prk == io_wake_preg_1,
         queue_2_inst_prk == io_wake_preg_0});
  wire        queue_temp_3_prj_waked =
    queue_3_prj_waked
    | (|{queue_3_inst_prj == io_wake_preg_3,
         queue_3_inst_prj == io_wake_preg_2,
         queue_3_inst_prj == io_wake_preg_1,
         queue_3_inst_prj == io_wake_preg_0});
  wire        queue_temp_3_prk_waked =
    queue_3_prk_waked
    | (|{queue_3_inst_prk == io_wake_preg_3,
         queue_3_inst_prk == io_wake_preg_2,
         queue_3_inst_prk == io_wake_preg_1,
         queue_3_inst_prk == io_wake_preg_0});
  wire        queue_temp_4_prj_waked =
    queue_4_prj_waked
    | (|{queue_4_inst_prj == io_wake_preg_3,
         queue_4_inst_prj == io_wake_preg_2,
         queue_4_inst_prj == io_wake_preg_1,
         queue_4_inst_prj == io_wake_preg_0});
  wire        queue_temp_4_prk_waked =
    queue_4_prk_waked
    | (|{queue_4_inst_prk == io_wake_preg_3,
         queue_4_inst_prk == io_wake_preg_2,
         queue_4_inst_prk == io_wake_preg_1,
         queue_4_inst_prk == io_wake_preg_0});
  wire        queue_temp_5_prj_waked =
    queue_5_prj_waked
    | (|{queue_5_inst_prj == io_wake_preg_3,
         queue_5_inst_prj == io_wake_preg_2,
         queue_5_inst_prj == io_wake_preg_1,
         queue_5_inst_prj == io_wake_preg_0});
  wire        queue_temp_5_prk_waked =
    queue_5_prk_waked
    | (|{queue_5_inst_prk == io_wake_preg_3,
         queue_5_inst_prk == io_wake_preg_2,
         queue_5_inst_prk == io_wake_preg_1,
         queue_5_inst_prk == io_wake_preg_0});
  wire        queue_temp_6_prj_waked =
    queue_6_prj_waked
    | (|{queue_6_inst_prj == io_wake_preg_3,
         queue_6_inst_prj == io_wake_preg_2,
         queue_6_inst_prj == io_wake_preg_1,
         queue_6_inst_prj == io_wake_preg_0});
  wire        queue_temp_6_prk_waked =
    queue_6_prk_waked
    | (|{queue_6_inst_prk == io_wake_preg_3,
         queue_6_inst_prk == io_wake_preg_2,
         queue_6_inst_prk == io_wake_preg_1,
         queue_6_inst_prk == io_wake_preg_0});
  wire        queue_temp_7_prj_waked =
    queue_7_prj_waked
    | (|{queue_7_inst_prj == io_wake_preg_3,
         queue_7_inst_prj == io_wake_preg_2,
         queue_7_inst_prj == io_wake_preg_1,
         queue_7_inst_prj == io_wake_preg_0});
  wire        queue_temp_7_prk_waked =
    queue_7_prk_waked
    | (|{queue_7_inst_prk == io_wake_preg_3,
         queue_7_inst_prk == io_wake_preg_2,
         queue_7_inst_prk == io_wake_preg_1,
         queue_7_inst_prk == io_wake_preg_0});
  always @(posedge clock) begin
    if (reset) begin
      queue_0_inst_prj <= 7'h0;
      queue_0_inst_prk <= 7'h0;
      queue_0_inst_rd_valid <= 1'h0;
      queue_0_inst_prd <= 7'h0;
      queue_0_inst_imm <= 32'h0;
      queue_0_inst_alu_op <= 5'h0;
      queue_0_inst_alu_rs1_sel <= 2'h0;
      queue_0_inst_alu_rs2_sel <= 2'h0;
      queue_0_inst_br_type <= 4'h0;
      queue_0_inst_mem_type <= 5'h0;
      queue_0_inst_pc <= 32'h0;
      queue_0_inst_rob_index <= 6'h0;
      queue_0_inst_predict_jump <= 1'h0;
      queue_0_inst_pred_npc <= 32'h0;
      queue_0_prj_waked <= 1'h0;
      queue_0_prk_waked <= 1'h0;
      queue_1_inst_prj <= 7'h0;
      queue_1_inst_prk <= 7'h0;
      queue_1_inst_rd_valid <= 1'h0;
      queue_1_inst_prd <= 7'h0;
      queue_1_inst_imm <= 32'h0;
      queue_1_inst_alu_op <= 5'h0;
      queue_1_inst_alu_rs1_sel <= 2'h0;
      queue_1_inst_alu_rs2_sel <= 2'h0;
      queue_1_inst_br_type <= 4'h0;
      queue_1_inst_mem_type <= 5'h0;
      queue_1_inst_pc <= 32'h0;
      queue_1_inst_rob_index <= 6'h0;
      queue_1_inst_predict_jump <= 1'h0;
      queue_1_inst_pred_npc <= 32'h0;
      queue_1_prj_waked <= 1'h0;
      queue_1_prk_waked <= 1'h0;
      queue_2_inst_prj <= 7'h0;
      queue_2_inst_prk <= 7'h0;
      queue_2_inst_rd_valid <= 1'h0;
      queue_2_inst_prd <= 7'h0;
      queue_2_inst_imm <= 32'h0;
      queue_2_inst_alu_op <= 5'h0;
      queue_2_inst_alu_rs1_sel <= 2'h0;
      queue_2_inst_alu_rs2_sel <= 2'h0;
      queue_2_inst_br_type <= 4'h0;
      queue_2_inst_mem_type <= 5'h0;
      queue_2_inst_pc <= 32'h0;
      queue_2_inst_rob_index <= 6'h0;
      queue_2_inst_predict_jump <= 1'h0;
      queue_2_inst_pred_npc <= 32'h0;
      queue_2_prj_waked <= 1'h0;
      queue_2_prk_waked <= 1'h0;
      queue_3_inst_prj <= 7'h0;
      queue_3_inst_prk <= 7'h0;
      queue_3_inst_rd_valid <= 1'h0;
      queue_3_inst_prd <= 7'h0;
      queue_3_inst_imm <= 32'h0;
      queue_3_inst_alu_op <= 5'h0;
      queue_3_inst_alu_rs1_sel <= 2'h0;
      queue_3_inst_alu_rs2_sel <= 2'h0;
      queue_3_inst_br_type <= 4'h0;
      queue_3_inst_mem_type <= 5'h0;
      queue_3_inst_pc <= 32'h0;
      queue_3_inst_rob_index <= 6'h0;
      queue_3_inst_predict_jump <= 1'h0;
      queue_3_inst_pred_npc <= 32'h0;
      queue_3_prj_waked <= 1'h0;
      queue_3_prk_waked <= 1'h0;
      queue_4_inst_prj <= 7'h0;
      queue_4_inst_prk <= 7'h0;
      queue_4_inst_rd_valid <= 1'h0;
      queue_4_inst_prd <= 7'h0;
      queue_4_inst_imm <= 32'h0;
      queue_4_inst_alu_op <= 5'h0;
      queue_4_inst_alu_rs1_sel <= 2'h0;
      queue_4_inst_alu_rs2_sel <= 2'h0;
      queue_4_inst_br_type <= 4'h0;
      queue_4_inst_mem_type <= 5'h0;
      queue_4_inst_pc <= 32'h0;
      queue_4_inst_rob_index <= 6'h0;
      queue_4_inst_predict_jump <= 1'h0;
      queue_4_inst_pred_npc <= 32'h0;
      queue_4_prj_waked <= 1'h0;
      queue_4_prk_waked <= 1'h0;
      queue_5_inst_prj <= 7'h0;
      queue_5_inst_prk <= 7'h0;
      queue_5_inst_rd_valid <= 1'h0;
      queue_5_inst_prd <= 7'h0;
      queue_5_inst_imm <= 32'h0;
      queue_5_inst_alu_op <= 5'h0;
      queue_5_inst_alu_rs1_sel <= 2'h0;
      queue_5_inst_alu_rs2_sel <= 2'h0;
      queue_5_inst_br_type <= 4'h0;
      queue_5_inst_mem_type <= 5'h0;
      queue_5_inst_pc <= 32'h0;
      queue_5_inst_rob_index <= 6'h0;
      queue_5_inst_predict_jump <= 1'h0;
      queue_5_inst_pred_npc <= 32'h0;
      queue_5_prj_waked <= 1'h0;
      queue_5_prk_waked <= 1'h0;
      queue_6_inst_prj <= 7'h0;
      queue_6_inst_prk <= 7'h0;
      queue_6_inst_rd_valid <= 1'h0;
      queue_6_inst_prd <= 7'h0;
      queue_6_inst_imm <= 32'h0;
      queue_6_inst_alu_op <= 5'h0;
      queue_6_inst_alu_rs1_sel <= 2'h0;
      queue_6_inst_alu_rs2_sel <= 2'h0;
      queue_6_inst_br_type <= 4'h0;
      queue_6_inst_mem_type <= 5'h0;
      queue_6_inst_pc <= 32'h0;
      queue_6_inst_rob_index <= 6'h0;
      queue_6_inst_predict_jump <= 1'h0;
      queue_6_inst_pred_npc <= 32'h0;
      queue_6_prj_waked <= 1'h0;
      queue_6_prk_waked <= 1'h0;
      queue_7_inst_prj <= 7'h0;
      queue_7_inst_prk <= 7'h0;
      queue_7_inst_rd_valid <= 1'h0;
      queue_7_inst_prd <= 7'h0;
      queue_7_inst_imm <= 32'h0;
      queue_7_inst_alu_op <= 5'h0;
      queue_7_inst_alu_rs1_sel <= 2'h0;
      queue_7_inst_alu_rs2_sel <= 2'h0;
      queue_7_inst_br_type <= 4'h0;
      queue_7_inst_mem_type <= 5'h0;
      queue_7_inst_pc <= 32'h0;
      queue_7_inst_rob_index <= 6'h0;
      queue_7_inst_predict_jump <= 1'h0;
      queue_7_inst_pred_npc <= 32'h0;
      queue_7_prj_waked <= 1'h0;
      queue_7_prk_waked <= 1'h0;
      tail <= 4'h0;
    end
    else begin
      if (|_tail_pop_T_16) begin
        if (next_mask[0]) begin
          queue_0_inst_prj <= queue_1_inst_prj;
          queue_0_inst_prk <= queue_1_inst_prk;
          queue_0_inst_prd <= queue_1_inst_prd;
          queue_0_inst_imm <= queue_1_inst_imm;
          queue_0_inst_alu_op <= queue_1_inst_alu_op;
          queue_0_inst_alu_rs1_sel <= queue_1_inst_alu_rs1_sel;
          queue_0_inst_alu_rs2_sel <= queue_1_inst_alu_rs2_sel;
          queue_0_inst_br_type <= queue_1_inst_br_type;
          queue_0_inst_mem_type <= queue_1_inst_mem_type;
          queue_0_inst_pc <= queue_1_inst_pc;
          queue_0_inst_rob_index <= queue_1_inst_rob_index;
          queue_0_inst_pred_npc <= queue_1_inst_pred_npc;
        end
        queue_0_inst_rd_valid <= queue_next_0_inst_rd_valid;
        queue_0_inst_predict_jump <=
          (|_tail_pop_T_16)
          & (next_mask[0] ? queue_1_inst_predict_jump : queue_0_inst_predict_jump);
        queue_0_prj_waked <=
          (|_tail_pop_T_16)
          & (next_mask[0]
               ? queue_temp_1_prj_waked
               : queue_0_prj_waked
                 | (|{queue_0_inst_prj == io_wake_preg_3,
                      queue_0_inst_prj == io_wake_preg_2,
                      queue_0_inst_prj == io_wake_preg_1,
                      queue_0_inst_prj == io_wake_preg_0}));
        queue_0_prk_waked <=
          (|_tail_pop_T_16)
          & (next_mask[0]
               ? queue_temp_1_prk_waked
               : queue_0_prk_waked
                 | (|{queue_0_inst_prk == io_wake_preg_3,
                      queue_0_inst_prk == io_wake_preg_2,
                      queue_0_inst_prk == io_wake_preg_1,
                      queue_0_inst_prk == io_wake_preg_0}));
      end
      else begin
        if (casez_tmp_1) begin
          queue_0_inst_prj <= casez_tmp_3;
          queue_0_inst_prk <= casez_tmp_4;
          queue_0_inst_prd <= casez_tmp_6;
          queue_0_inst_imm <= casez_tmp_7;
          queue_0_inst_alu_op <= casez_tmp_8;
          queue_0_inst_alu_rs1_sel <= casez_tmp_9;
          queue_0_inst_alu_rs2_sel <= casez_tmp_10;
          queue_0_inst_br_type <= casez_tmp_11;
          queue_0_inst_mem_type <= casez_tmp_12;
          queue_0_inst_pc <= casez_tmp_13;
          queue_0_inst_rob_index <= casez_tmp_14;
          queue_0_inst_pred_npc <= casez_tmp_16;
        end
        else begin
          queue_0_inst_prj <= 7'h0;
          queue_0_inst_prk <= 7'h0;
          queue_0_inst_prd <= 7'h0;
          queue_0_inst_imm <= 32'h0;
          queue_0_inst_alu_op <= 5'h0;
          queue_0_inst_alu_rs1_sel <= 2'h0;
          queue_0_inst_alu_rs2_sel <= 2'h0;
          queue_0_inst_br_type <= 4'h0;
          queue_0_inst_mem_type <= 5'h0;
          queue_0_inst_pc <= 32'h0;
          queue_0_inst_rob_index <= 6'h0;
          queue_0_inst_pred_npc <= 32'h0;
        end
        queue_0_inst_rd_valid <= casez_tmp_1 & casez_tmp_5;
        queue_0_inst_predict_jump <= casez_tmp_1 & casez_tmp_15;
        queue_0_prj_waked <= casez_tmp_17;
        queue_0_prk_waked <= casez_tmp_18;
      end
      if (|(_tail_pop_T_16[3:1])) begin
        if (next_mask[1]) begin
          queue_1_inst_prj <= queue_2_inst_prj;
          queue_1_inst_prk <= queue_2_inst_prk;
          queue_1_inst_prd <= queue_2_inst_prd;
          queue_1_inst_imm <= queue_2_inst_imm;
          queue_1_inst_alu_op <= queue_2_inst_alu_op;
          queue_1_inst_alu_rs1_sel <= queue_2_inst_alu_rs1_sel;
          queue_1_inst_alu_rs2_sel <= queue_2_inst_alu_rs2_sel;
          queue_1_inst_br_type <= queue_2_inst_br_type;
          queue_1_inst_mem_type <= queue_2_inst_mem_type;
          queue_1_inst_pc <= queue_2_inst_pc;
          queue_1_inst_rob_index <= queue_2_inst_rob_index;
          queue_1_inst_pred_npc <= queue_2_inst_pred_npc;
        end
        queue_1_inst_rd_valid <= queue_next_1_inst_rd_valid;
        queue_1_inst_predict_jump <=
          (|(_tail_pop_T_16[3:1]))
          & (next_mask[1] ? queue_2_inst_predict_jump : queue_1_inst_predict_jump);
        queue_1_prj_waked <=
          (|(_tail_pop_T_16[3:1]))
          & (next_mask[1] ? queue_temp_2_prj_waked : queue_temp_1_prj_waked);
        queue_1_prk_waked <=
          (|(_tail_pop_T_16[3:1]))
          & (next_mask[1] ? queue_temp_2_prk_waked : queue_temp_1_prk_waked);
      end
      else begin
        if (casez_tmp_19) begin
          queue_1_inst_prj <= casez_tmp_21;
          queue_1_inst_prk <= casez_tmp_22;
          queue_1_inst_prd <= casez_tmp_24;
          queue_1_inst_imm <= casez_tmp_25;
          queue_1_inst_alu_op <= casez_tmp_26;
          queue_1_inst_alu_rs1_sel <= casez_tmp_27;
          queue_1_inst_alu_rs2_sel <= casez_tmp_28;
          queue_1_inst_br_type <= casez_tmp_29;
          queue_1_inst_mem_type <= casez_tmp_30;
          queue_1_inst_pc <= casez_tmp_31;
          queue_1_inst_rob_index <= casez_tmp_32;
          queue_1_inst_pred_npc <= casez_tmp_34;
        end
        else begin
          queue_1_inst_prj <= 7'h0;
          queue_1_inst_prk <= 7'h0;
          queue_1_inst_prd <= 7'h0;
          queue_1_inst_imm <= 32'h0;
          queue_1_inst_alu_op <= 5'h0;
          queue_1_inst_alu_rs1_sel <= 2'h0;
          queue_1_inst_alu_rs2_sel <= 2'h0;
          queue_1_inst_br_type <= 4'h0;
          queue_1_inst_mem_type <= 5'h0;
          queue_1_inst_pc <= 32'h0;
          queue_1_inst_rob_index <= 6'h0;
          queue_1_inst_pred_npc <= 32'h0;
        end
        queue_1_inst_rd_valid <= casez_tmp_19 & casez_tmp_23;
        queue_1_inst_predict_jump <= casez_tmp_19 & casez_tmp_33;
        queue_1_prj_waked <= casez_tmp_35;
        queue_1_prk_waked <= casez_tmp_36;
      end
      if (_queue_2_prk_waked_T) begin
        if (next_mask[2]) begin
          queue_2_inst_prj <= queue_3_inst_prj;
          queue_2_inst_prk <= queue_3_inst_prk;
          queue_2_inst_prd <= queue_3_inst_prd;
          queue_2_inst_imm <= queue_3_inst_imm;
          queue_2_inst_alu_op <= queue_3_inst_alu_op;
          queue_2_inst_alu_rs1_sel <= queue_3_inst_alu_rs1_sel;
          queue_2_inst_alu_rs2_sel <= queue_3_inst_alu_rs2_sel;
          queue_2_inst_br_type <= queue_3_inst_br_type;
          queue_2_inst_mem_type <= queue_3_inst_mem_type;
          queue_2_inst_pc <= queue_3_inst_pc;
          queue_2_inst_rob_index <= queue_3_inst_rob_index;
          queue_2_inst_pred_npc <= queue_3_inst_pred_npc;
        end
        queue_2_inst_rd_valid <= queue_next_2_inst_rd_valid;
        queue_2_inst_predict_jump <=
          _queue_2_prk_waked_T
          & (next_mask[2] ? queue_3_inst_predict_jump : queue_2_inst_predict_jump);
        queue_2_prj_waked <=
          _queue_2_prk_waked_T
          & (next_mask[2] ? queue_temp_3_prj_waked : queue_temp_2_prj_waked);
        queue_2_prk_waked <=
          _queue_2_prk_waked_T
          & (next_mask[2] ? queue_temp_3_prk_waked : queue_temp_2_prk_waked);
      end
      else begin
        if (casez_tmp_37) begin
          queue_2_inst_prj <= casez_tmp_39;
          queue_2_inst_prk <= casez_tmp_40;
          queue_2_inst_prd <= casez_tmp_42;
          queue_2_inst_imm <= casez_tmp_43;
          queue_2_inst_alu_op <= casez_tmp_44;
          queue_2_inst_alu_rs1_sel <= casez_tmp_45;
          queue_2_inst_alu_rs2_sel <= casez_tmp_46;
          queue_2_inst_br_type <= casez_tmp_47;
          queue_2_inst_mem_type <= casez_tmp_48;
          queue_2_inst_pc <= casez_tmp_49;
          queue_2_inst_rob_index <= casez_tmp_50;
          queue_2_inst_pred_npc <= casez_tmp_52;
        end
        else begin
          queue_2_inst_prj <= 7'h0;
          queue_2_inst_prk <= 7'h0;
          queue_2_inst_prd <= 7'h0;
          queue_2_inst_imm <= 32'h0;
          queue_2_inst_alu_op <= 5'h0;
          queue_2_inst_alu_rs1_sel <= 2'h0;
          queue_2_inst_alu_rs2_sel <= 2'h0;
          queue_2_inst_br_type <= 4'h0;
          queue_2_inst_mem_type <= 5'h0;
          queue_2_inst_pc <= 32'h0;
          queue_2_inst_rob_index <= 6'h0;
          queue_2_inst_pred_npc <= 32'h0;
        end
        queue_2_inst_rd_valid <= casez_tmp_37 & casez_tmp_41;
        queue_2_inst_predict_jump <= casez_tmp_37 & casez_tmp_51;
        queue_2_prj_waked <= casez_tmp_53;
        queue_2_prk_waked <= casez_tmp_54;
      end
      if (|(_tail_pop_T_16[3:2])) begin
        if (next_mask[3]) begin
          queue_3_inst_prj <= queue_4_inst_prj;
          queue_3_inst_prk <= queue_4_inst_prk;
          queue_3_inst_prd <= queue_4_inst_prd;
          queue_3_inst_imm <= queue_4_inst_imm;
          queue_3_inst_alu_op <= queue_4_inst_alu_op;
          queue_3_inst_alu_rs1_sel <= queue_4_inst_alu_rs1_sel;
          queue_3_inst_alu_rs2_sel <= queue_4_inst_alu_rs2_sel;
          queue_3_inst_br_type <= queue_4_inst_br_type;
          queue_3_inst_mem_type <= queue_4_inst_mem_type;
          queue_3_inst_pc <= queue_4_inst_pc;
          queue_3_inst_rob_index <= queue_4_inst_rob_index;
          queue_3_inst_pred_npc <= queue_4_inst_pred_npc;
        end
        queue_3_inst_rd_valid <= queue_next_3_inst_rd_valid;
        queue_3_inst_predict_jump <=
          (|(_tail_pop_T_16[3:2]))
          & (next_mask[3] ? queue_4_inst_predict_jump : queue_3_inst_predict_jump);
        queue_3_prj_waked <=
          (|(_tail_pop_T_16[3:2]))
          & (next_mask[3] ? queue_temp_4_prj_waked : queue_temp_3_prj_waked);
        queue_3_prk_waked <=
          (|(_tail_pop_T_16[3:2]))
          & (next_mask[3] ? queue_temp_4_prk_waked : queue_temp_3_prk_waked);
      end
      else begin
        if (casez_tmp_55) begin
          queue_3_inst_prj <= casez_tmp_57;
          queue_3_inst_prk <= casez_tmp_58;
          queue_3_inst_prd <= casez_tmp_60;
          queue_3_inst_imm <= casez_tmp_61;
          queue_3_inst_alu_op <= casez_tmp_62;
          queue_3_inst_alu_rs1_sel <= casez_tmp_63;
          queue_3_inst_alu_rs2_sel <= casez_tmp_64;
          queue_3_inst_br_type <= casez_tmp_65;
          queue_3_inst_mem_type <= casez_tmp_66;
          queue_3_inst_pc <= casez_tmp_67;
          queue_3_inst_rob_index <= casez_tmp_68;
          queue_3_inst_pred_npc <= casez_tmp_70;
        end
        else begin
          queue_3_inst_prj <= 7'h0;
          queue_3_inst_prk <= 7'h0;
          queue_3_inst_prd <= 7'h0;
          queue_3_inst_imm <= 32'h0;
          queue_3_inst_alu_op <= 5'h0;
          queue_3_inst_alu_rs1_sel <= 2'h0;
          queue_3_inst_alu_rs2_sel <= 2'h0;
          queue_3_inst_br_type <= 4'h0;
          queue_3_inst_mem_type <= 5'h0;
          queue_3_inst_pc <= 32'h0;
          queue_3_inst_rob_index <= 6'h0;
          queue_3_inst_pred_npc <= 32'h0;
        end
        queue_3_inst_rd_valid <= casez_tmp_55 & casez_tmp_59;
        queue_3_inst_predict_jump <= casez_tmp_55 & casez_tmp_69;
        queue_3_prj_waked <= casez_tmp_71;
        queue_3_prk_waked <= casez_tmp_72;
      end
      if (_queue_4_prk_waked_T) begin
        if (next_mask[4]) begin
          queue_4_inst_prj <= queue_5_inst_prj;
          queue_4_inst_prk <= queue_5_inst_prk;
          queue_4_inst_prd <= queue_5_inst_prd;
          queue_4_inst_imm <= queue_5_inst_imm;
          queue_4_inst_alu_op <= queue_5_inst_alu_op;
          queue_4_inst_alu_rs1_sel <= queue_5_inst_alu_rs1_sel;
          queue_4_inst_alu_rs2_sel <= queue_5_inst_alu_rs2_sel;
          queue_4_inst_br_type <= queue_5_inst_br_type;
          queue_4_inst_mem_type <= queue_5_inst_mem_type;
          queue_4_inst_pc <= queue_5_inst_pc;
          queue_4_inst_rob_index <= queue_5_inst_rob_index;
          queue_4_inst_pred_npc <= queue_5_inst_pred_npc;
        end
        queue_4_inst_rd_valid <= queue_next_4_inst_rd_valid;
        queue_4_inst_predict_jump <=
          _queue_4_prk_waked_T
          & (next_mask[4] ? queue_5_inst_predict_jump : queue_4_inst_predict_jump);
        queue_4_prj_waked <=
          _queue_4_prk_waked_T
          & (next_mask[4] ? queue_temp_5_prj_waked : queue_temp_4_prj_waked);
        queue_4_prk_waked <=
          _queue_4_prk_waked_T
          & (next_mask[4] ? queue_temp_5_prk_waked : queue_temp_4_prk_waked);
      end
      else begin
        if (casez_tmp_73) begin
          queue_4_inst_prj <= casez_tmp_75;
          queue_4_inst_prk <= casez_tmp_76;
          queue_4_inst_prd <= casez_tmp_78;
          queue_4_inst_imm <= casez_tmp_79;
          queue_4_inst_alu_op <= casez_tmp_80;
          queue_4_inst_alu_rs1_sel <= casez_tmp_81;
          queue_4_inst_alu_rs2_sel <= casez_tmp_82;
          queue_4_inst_br_type <= casez_tmp_83;
          queue_4_inst_mem_type <= casez_tmp_84;
          queue_4_inst_pc <= casez_tmp_85;
          queue_4_inst_rob_index <= casez_tmp_86;
          queue_4_inst_pred_npc <= casez_tmp_88;
        end
        else begin
          queue_4_inst_prj <= 7'h0;
          queue_4_inst_prk <= 7'h0;
          queue_4_inst_prd <= 7'h0;
          queue_4_inst_imm <= 32'h0;
          queue_4_inst_alu_op <= 5'h0;
          queue_4_inst_alu_rs1_sel <= 2'h0;
          queue_4_inst_alu_rs2_sel <= 2'h0;
          queue_4_inst_br_type <= 4'h0;
          queue_4_inst_mem_type <= 5'h0;
          queue_4_inst_pc <= 32'h0;
          queue_4_inst_rob_index <= 6'h0;
          queue_4_inst_pred_npc <= 32'h0;
        end
        queue_4_inst_rd_valid <= casez_tmp_73 & casez_tmp_77;
        queue_4_inst_predict_jump <= casez_tmp_73 & casez_tmp_87;
        queue_4_prj_waked <= casez_tmp_89;
        queue_4_prk_waked <= casez_tmp_90;
      end
      if (_queue_5_prk_waked_T) begin
        if (next_mask[5]) begin
          queue_5_inst_prj <= queue_6_inst_prj;
          queue_5_inst_prk <= queue_6_inst_prk;
          queue_5_inst_prd <= queue_6_inst_prd;
          queue_5_inst_imm <= queue_6_inst_imm;
          queue_5_inst_alu_op <= queue_6_inst_alu_op;
          queue_5_inst_alu_rs1_sel <= queue_6_inst_alu_rs1_sel;
          queue_5_inst_alu_rs2_sel <= queue_6_inst_alu_rs2_sel;
          queue_5_inst_br_type <= queue_6_inst_br_type;
          queue_5_inst_mem_type <= queue_6_inst_mem_type;
          queue_5_inst_pc <= queue_6_inst_pc;
          queue_5_inst_rob_index <= queue_6_inst_rob_index;
          queue_5_inst_pred_npc <= queue_6_inst_pred_npc;
        end
        queue_5_inst_rd_valid <= queue_next_5_inst_rd_valid;
        queue_5_inst_predict_jump <=
          _queue_5_prk_waked_T
          & (next_mask[5] ? queue_6_inst_predict_jump : queue_5_inst_predict_jump);
        queue_5_prj_waked <=
          _queue_5_prk_waked_T
          & (next_mask[5] ? queue_temp_6_prj_waked : queue_temp_5_prj_waked);
        queue_5_prk_waked <=
          _queue_5_prk_waked_T
          & (next_mask[5] ? queue_temp_6_prk_waked : queue_temp_5_prk_waked);
      end
      else begin
        if (casez_tmp_91) begin
          queue_5_inst_prj <= casez_tmp_93;
          queue_5_inst_prk <= casez_tmp_94;
          queue_5_inst_prd <= casez_tmp_96;
          queue_5_inst_imm <= casez_tmp_97;
          queue_5_inst_alu_op <= casez_tmp_98;
          queue_5_inst_alu_rs1_sel <= casez_tmp_99;
          queue_5_inst_alu_rs2_sel <= casez_tmp_100;
          queue_5_inst_br_type <= casez_tmp_101;
          queue_5_inst_mem_type <= casez_tmp_102;
          queue_5_inst_pc <= casez_tmp_103;
          queue_5_inst_rob_index <= casez_tmp_104;
          queue_5_inst_pred_npc <= casez_tmp_106;
        end
        else begin
          queue_5_inst_prj <= 7'h0;
          queue_5_inst_prk <= 7'h0;
          queue_5_inst_prd <= 7'h0;
          queue_5_inst_imm <= 32'h0;
          queue_5_inst_alu_op <= 5'h0;
          queue_5_inst_alu_rs1_sel <= 2'h0;
          queue_5_inst_alu_rs2_sel <= 2'h0;
          queue_5_inst_br_type <= 4'h0;
          queue_5_inst_mem_type <= 5'h0;
          queue_5_inst_pc <= 32'h0;
          queue_5_inst_rob_index <= 6'h0;
          queue_5_inst_pred_npc <= 32'h0;
        end
        queue_5_inst_rd_valid <= casez_tmp_91 & casez_tmp_95;
        queue_5_inst_predict_jump <= casez_tmp_91 & casez_tmp_105;
        queue_5_prj_waked <= casez_tmp_107;
        queue_5_prk_waked <= casez_tmp_108;
      end
      if (_queue_6_prk_waked_T) begin
        if (next_mask[6]) begin
          queue_6_inst_prj <= queue_7_inst_prj;
          queue_6_inst_prk <= queue_7_inst_prk;
          queue_6_inst_prd <= queue_7_inst_prd;
          queue_6_inst_imm <= queue_7_inst_imm;
          queue_6_inst_alu_op <= queue_7_inst_alu_op;
          queue_6_inst_alu_rs1_sel <= queue_7_inst_alu_rs1_sel;
          queue_6_inst_alu_rs2_sel <= queue_7_inst_alu_rs2_sel;
          queue_6_inst_br_type <= queue_7_inst_br_type;
          queue_6_inst_mem_type <= queue_7_inst_mem_type;
          queue_6_inst_pc <= queue_7_inst_pc;
          queue_6_inst_rob_index <= queue_7_inst_rob_index;
          queue_6_inst_pred_npc <= queue_7_inst_pred_npc;
        end
        queue_6_inst_rd_valid <= queue_next_6_inst_rd_valid;
        queue_6_inst_predict_jump <=
          _queue_6_prk_waked_T
          & (next_mask[6] ? queue_7_inst_predict_jump : queue_6_inst_predict_jump);
        queue_6_prj_waked <=
          _queue_6_prk_waked_T
          & (next_mask[6] ? queue_temp_7_prj_waked : queue_temp_6_prj_waked);
        queue_6_prk_waked <=
          _queue_6_prk_waked_T
          & (next_mask[6] ? queue_temp_7_prk_waked : queue_temp_6_prk_waked);
      end
      else begin
        if (casez_tmp_109) begin
          queue_6_inst_prj <= casez_tmp_111;
          queue_6_inst_prk <= casez_tmp_112;
          queue_6_inst_prd <= casez_tmp_114;
          queue_6_inst_imm <= casez_tmp_115;
          queue_6_inst_alu_op <= casez_tmp_116;
          queue_6_inst_alu_rs1_sel <= casez_tmp_117;
          queue_6_inst_alu_rs2_sel <= casez_tmp_118;
          queue_6_inst_br_type <= casez_tmp_119;
          queue_6_inst_mem_type <= casez_tmp_120;
          queue_6_inst_pc <= casez_tmp_121;
          queue_6_inst_rob_index <= casez_tmp_122;
          queue_6_inst_pred_npc <= casez_tmp_124;
        end
        else begin
          queue_6_inst_prj <= 7'h0;
          queue_6_inst_prk <= 7'h0;
          queue_6_inst_prd <= 7'h0;
          queue_6_inst_imm <= 32'h0;
          queue_6_inst_alu_op <= 5'h0;
          queue_6_inst_alu_rs1_sel <= 2'h0;
          queue_6_inst_alu_rs2_sel <= 2'h0;
          queue_6_inst_br_type <= 4'h0;
          queue_6_inst_mem_type <= 5'h0;
          queue_6_inst_pc <= 32'h0;
          queue_6_inst_rob_index <= 6'h0;
          queue_6_inst_pred_npc <= 32'h0;
        end
        queue_6_inst_rd_valid <= casez_tmp_109 & casez_tmp_113;
        queue_6_inst_predict_jump <= casez_tmp_109 & casez_tmp_123;
        queue_6_prj_waked <= casez_tmp_125;
        queue_6_prk_waked <= casez_tmp_126;
      end
      if (_tail_pop_T_16[3]) begin
        if (_GEN) begin
          queue_7_inst_prj <= 7'h0;
          queue_7_inst_prk <= 7'h0;
        end
        queue_7_inst_rd_valid <= queue_next_7_inst_rd_valid;
        if (_GEN) begin
          queue_7_inst_prd <= 7'h0;
          queue_7_inst_imm <= 32'h0;
          queue_7_inst_alu_op <= 5'h0;
          queue_7_inst_alu_rs1_sel <= 2'h0;
          queue_7_inst_alu_rs2_sel <= 2'h0;
          queue_7_inst_br_type <= 4'h0;
          queue_7_inst_mem_type <= 5'h0;
          queue_7_inst_pc <= 32'h0;
          queue_7_inst_rob_index <= 6'h0;
        end
        queue_7_inst_predict_jump <=
          _tail_pop_T_16[3] & ~(next_mask[7]) & queue_7_inst_predict_jump;
        if (_GEN)
          queue_7_inst_pred_npc <= 32'h0;
        queue_7_prj_waked <= _tail_pop_T_16[3] & ~(next_mask[7]) & queue_temp_7_prj_waked;
        queue_7_prk_waked <= _tail_pop_T_16[3] & ~(next_mask[7]) & queue_temp_7_prk_waked;
      end
      else begin
        if (casez_tmp_127) begin
          queue_7_inst_prj <= casez_tmp_129;
          queue_7_inst_prk <= casez_tmp_130;
          queue_7_inst_prd <= casez_tmp_132;
          queue_7_inst_imm <= casez_tmp_133;
          queue_7_inst_alu_op <= casez_tmp_134;
          queue_7_inst_alu_rs1_sel <= casez_tmp_135;
          queue_7_inst_alu_rs2_sel <= casez_tmp_136;
          queue_7_inst_br_type <= casez_tmp_137;
          queue_7_inst_mem_type <= casez_tmp_138;
          queue_7_inst_pc <= casez_tmp_139;
          queue_7_inst_rob_index <= casez_tmp_140;
          queue_7_inst_pred_npc <= casez_tmp_142;
        end
        else begin
          queue_7_inst_prj <= 7'h0;
          queue_7_inst_prk <= 7'h0;
          queue_7_inst_prd <= 7'h0;
          queue_7_inst_imm <= 32'h0;
          queue_7_inst_alu_op <= 5'h0;
          queue_7_inst_alu_rs1_sel <= 2'h0;
          queue_7_inst_alu_rs2_sel <= 2'h0;
          queue_7_inst_br_type <= 4'h0;
          queue_7_inst_mem_type <= 5'h0;
          queue_7_inst_pc <= 32'h0;
          queue_7_inst_rob_index <= 6'h0;
          queue_7_inst_pred_npc <= 32'h0;
        end
        queue_7_inst_rd_valid <= casez_tmp_127 & casez_tmp_131;
        queue_7_inst_predict_jump <= casez_tmp_127 & casez_tmp_141;
        queue_7_prj_waked <= casez_tmp_143;
        queue_7_prk_waked <= casez_tmp_144;
      end
      if (io_flush)
        tail <= 4'h0;
      else if (io_stall)
        tail <= _tail_pop_T_16;
      else
        tail <= _tail_pop_T_16 + {1'h0, full ? 3'h0 : io_insert_num};
    end
  end // always @(posedge)
  assign io_insts_issue_0_inst_prj = queue_0_inst_prj;
  assign io_insts_issue_0_inst_prk = queue_0_inst_prk;
  assign io_insts_issue_0_inst_rd_valid = queue_0_inst_rd_valid;
  assign io_insts_issue_0_inst_prd = queue_0_inst_prd;
  assign io_insts_issue_0_inst_imm = queue_0_inst_imm;
  assign io_insts_issue_0_inst_alu_op = queue_0_inst_alu_op;
  assign io_insts_issue_0_inst_alu_rs1_sel = queue_0_inst_alu_rs1_sel;
  assign io_insts_issue_0_inst_alu_rs2_sel = queue_0_inst_alu_rs2_sel;
  assign io_insts_issue_0_inst_br_type = queue_0_inst_br_type;
  assign io_insts_issue_0_inst_mem_type = queue_0_inst_mem_type;
  assign io_insts_issue_0_inst_pc = queue_0_inst_pc;
  assign io_insts_issue_0_inst_rob_index = queue_0_inst_rob_index;
  assign io_insts_issue_0_inst_predict_jump = queue_0_inst_predict_jump;
  assign io_insts_issue_0_inst_pred_npc = queue_0_inst_pred_npc;
  assign io_insts_issue_1_inst_prj = queue_1_inst_prj;
  assign io_insts_issue_1_inst_prk = queue_1_inst_prk;
  assign io_insts_issue_1_inst_rd_valid = queue_1_inst_rd_valid;
  assign io_insts_issue_1_inst_prd = queue_1_inst_prd;
  assign io_insts_issue_1_inst_imm = queue_1_inst_imm;
  assign io_insts_issue_1_inst_alu_op = queue_1_inst_alu_op;
  assign io_insts_issue_1_inst_alu_rs1_sel = queue_1_inst_alu_rs1_sel;
  assign io_insts_issue_1_inst_alu_rs2_sel = queue_1_inst_alu_rs2_sel;
  assign io_insts_issue_1_inst_br_type = queue_1_inst_br_type;
  assign io_insts_issue_1_inst_mem_type = queue_1_inst_mem_type;
  assign io_insts_issue_1_inst_pc = queue_1_inst_pc;
  assign io_insts_issue_1_inst_rob_index = queue_1_inst_rob_index;
  assign io_insts_issue_1_inst_predict_jump = queue_1_inst_predict_jump;
  assign io_insts_issue_1_inst_pred_npc = queue_1_inst_pred_npc;
  assign io_insts_issue_2_inst_prj = queue_2_inst_prj;
  assign io_insts_issue_2_inst_prk = queue_2_inst_prk;
  assign io_insts_issue_2_inst_rd_valid = queue_2_inst_rd_valid;
  assign io_insts_issue_2_inst_prd = queue_2_inst_prd;
  assign io_insts_issue_2_inst_imm = queue_2_inst_imm;
  assign io_insts_issue_2_inst_alu_op = queue_2_inst_alu_op;
  assign io_insts_issue_2_inst_alu_rs1_sel = queue_2_inst_alu_rs1_sel;
  assign io_insts_issue_2_inst_alu_rs2_sel = queue_2_inst_alu_rs2_sel;
  assign io_insts_issue_2_inst_br_type = queue_2_inst_br_type;
  assign io_insts_issue_2_inst_mem_type = queue_2_inst_mem_type;
  assign io_insts_issue_2_inst_pc = queue_2_inst_pc;
  assign io_insts_issue_2_inst_rob_index = queue_2_inst_rob_index;
  assign io_insts_issue_2_inst_predict_jump = queue_2_inst_predict_jump;
  assign io_insts_issue_2_inst_pred_npc = queue_2_inst_pred_npc;
  assign io_insts_issue_3_inst_prj = queue_3_inst_prj;
  assign io_insts_issue_3_inst_prk = queue_3_inst_prk;
  assign io_insts_issue_3_inst_rd_valid = queue_3_inst_rd_valid;
  assign io_insts_issue_3_inst_prd = queue_3_inst_prd;
  assign io_insts_issue_3_inst_imm = queue_3_inst_imm;
  assign io_insts_issue_3_inst_alu_op = queue_3_inst_alu_op;
  assign io_insts_issue_3_inst_alu_rs1_sel = queue_3_inst_alu_rs1_sel;
  assign io_insts_issue_3_inst_alu_rs2_sel = queue_3_inst_alu_rs2_sel;
  assign io_insts_issue_3_inst_br_type = queue_3_inst_br_type;
  assign io_insts_issue_3_inst_mem_type = queue_3_inst_mem_type;
  assign io_insts_issue_3_inst_pc = queue_3_inst_pc;
  assign io_insts_issue_3_inst_rob_index = queue_3_inst_rob_index;
  assign io_insts_issue_3_inst_predict_jump = queue_3_inst_predict_jump;
  assign io_insts_issue_3_inst_pred_npc = queue_3_inst_pred_npc;
  assign io_insts_issue_4_inst_prj = queue_4_inst_prj;
  assign io_insts_issue_4_inst_prk = queue_4_inst_prk;
  assign io_insts_issue_4_inst_rd_valid = queue_4_inst_rd_valid;
  assign io_insts_issue_4_inst_prd = queue_4_inst_prd;
  assign io_insts_issue_4_inst_imm = queue_4_inst_imm;
  assign io_insts_issue_4_inst_alu_op = queue_4_inst_alu_op;
  assign io_insts_issue_4_inst_alu_rs1_sel = queue_4_inst_alu_rs1_sel;
  assign io_insts_issue_4_inst_alu_rs2_sel = queue_4_inst_alu_rs2_sel;
  assign io_insts_issue_4_inst_br_type = queue_4_inst_br_type;
  assign io_insts_issue_4_inst_mem_type = queue_4_inst_mem_type;
  assign io_insts_issue_4_inst_pc = queue_4_inst_pc;
  assign io_insts_issue_4_inst_rob_index = queue_4_inst_rob_index;
  assign io_insts_issue_4_inst_predict_jump = queue_4_inst_predict_jump;
  assign io_insts_issue_4_inst_pred_npc = queue_4_inst_pred_npc;
  assign io_insts_issue_5_inst_prj = queue_5_inst_prj;
  assign io_insts_issue_5_inst_prk = queue_5_inst_prk;
  assign io_insts_issue_5_inst_rd_valid = queue_5_inst_rd_valid;
  assign io_insts_issue_5_inst_prd = queue_5_inst_prd;
  assign io_insts_issue_5_inst_imm = queue_5_inst_imm;
  assign io_insts_issue_5_inst_alu_op = queue_5_inst_alu_op;
  assign io_insts_issue_5_inst_alu_rs1_sel = queue_5_inst_alu_rs1_sel;
  assign io_insts_issue_5_inst_alu_rs2_sel = queue_5_inst_alu_rs2_sel;
  assign io_insts_issue_5_inst_br_type = queue_5_inst_br_type;
  assign io_insts_issue_5_inst_mem_type = queue_5_inst_mem_type;
  assign io_insts_issue_5_inst_pc = queue_5_inst_pc;
  assign io_insts_issue_5_inst_rob_index = queue_5_inst_rob_index;
  assign io_insts_issue_5_inst_predict_jump = queue_5_inst_predict_jump;
  assign io_insts_issue_5_inst_pred_npc = queue_5_inst_pred_npc;
  assign io_insts_issue_6_inst_prj = queue_6_inst_prj;
  assign io_insts_issue_6_inst_prk = queue_6_inst_prk;
  assign io_insts_issue_6_inst_rd_valid = queue_6_inst_rd_valid;
  assign io_insts_issue_6_inst_prd = queue_6_inst_prd;
  assign io_insts_issue_6_inst_imm = queue_6_inst_imm;
  assign io_insts_issue_6_inst_alu_op = queue_6_inst_alu_op;
  assign io_insts_issue_6_inst_alu_rs1_sel = queue_6_inst_alu_rs1_sel;
  assign io_insts_issue_6_inst_alu_rs2_sel = queue_6_inst_alu_rs2_sel;
  assign io_insts_issue_6_inst_br_type = queue_6_inst_br_type;
  assign io_insts_issue_6_inst_mem_type = queue_6_inst_mem_type;
  assign io_insts_issue_6_inst_pc = queue_6_inst_pc;
  assign io_insts_issue_6_inst_rob_index = queue_6_inst_rob_index;
  assign io_insts_issue_6_inst_predict_jump = queue_6_inst_predict_jump;
  assign io_insts_issue_6_inst_pred_npc = queue_6_inst_pred_npc;
  assign io_insts_issue_7_inst_prj = queue_7_inst_prj;
  assign io_insts_issue_7_inst_prk = queue_7_inst_prk;
  assign io_insts_issue_7_inst_rd_valid = queue_7_inst_rd_valid;
  assign io_insts_issue_7_inst_prd = queue_7_inst_prd;
  assign io_insts_issue_7_inst_imm = queue_7_inst_imm;
  assign io_insts_issue_7_inst_alu_op = queue_7_inst_alu_op;
  assign io_insts_issue_7_inst_alu_rs1_sel = queue_7_inst_alu_rs1_sel;
  assign io_insts_issue_7_inst_alu_rs2_sel = queue_7_inst_alu_rs2_sel;
  assign io_insts_issue_7_inst_br_type = queue_7_inst_br_type;
  assign io_insts_issue_7_inst_mem_type = queue_7_inst_mem_type;
  assign io_insts_issue_7_inst_pc = queue_7_inst_pc;
  assign io_insts_issue_7_inst_rob_index = queue_7_inst_rob_index;
  assign io_insts_issue_7_inst_predict_jump = queue_7_inst_predict_jump;
  assign io_insts_issue_7_inst_pred_npc = queue_7_inst_pred_npc;
  assign io_issue_req_0 = (|tail) & queue_0_prj_waked & queue_0_prk_waked;
  assign io_issue_req_1 = (|(tail[3:1])) & queue_1_prj_waked & queue_1_prk_waked;
  assign io_issue_req_2 = tail > 4'h2 & queue_2_prj_waked & queue_2_prk_waked;
  assign io_issue_req_3 = (|(tail[3:2])) & queue_3_prj_waked & queue_3_prk_waked;
  assign io_issue_req_4 = tail > 4'h4 & queue_4_prj_waked & queue_4_prk_waked;
  assign io_issue_req_5 = tail > 4'h5 & queue_5_prj_waked & queue_5_prk_waked;
  assign io_issue_req_6 = tail > 4'h6 & queue_6_prj_waked & queue_6_prk_waked;
  assign io_issue_req_7 = tail[3] & queue_7_prj_waked & queue_7_prk_waked;
  assign io_prd_queue_0 =
    queue_next_0_inst_rd_valid & (|_tail_pop_T_16)
      ? (next_mask[0] ? queue_1_inst_prd : queue_0_inst_prd)
      : 7'h0;
  assign io_prd_queue_1 =
    queue_next_1_inst_rd_valid & (|(_tail_pop_T_16[3:1]))
      ? (next_mask[1] ? queue_2_inst_prd : queue_1_inst_prd)
      : 7'h0;
  assign io_prd_queue_2 =
    queue_next_2_inst_rd_valid & _queue_2_prk_waked_T
      ? (next_mask[2] ? queue_3_inst_prd : queue_2_inst_prd)
      : 7'h0;
  assign io_prd_queue_3 =
    queue_next_3_inst_rd_valid & (|(_tail_pop_T_16[3:2]))
      ? (next_mask[3] ? queue_4_inst_prd : queue_3_inst_prd)
      : 7'h0;
  assign io_prd_queue_4 =
    queue_next_4_inst_rd_valid & _queue_4_prk_waked_T
      ? (next_mask[4] ? queue_5_inst_prd : queue_4_inst_prd)
      : 7'h0;
  assign io_prd_queue_5 =
    queue_next_5_inst_rd_valid & _queue_5_prk_waked_T
      ? (next_mask[5] ? queue_6_inst_prd : queue_5_inst_prd)
      : 7'h0;
  assign io_prd_queue_6 =
    queue_next_6_inst_rd_valid & _queue_6_prk_waked_T
      ? (next_mask[6] ? queue_7_inst_prd : queue_6_inst_prd)
      : 7'h0;
  assign io_prd_queue_7 = ~queue_next_7_inst_rd_valid | _GEN ? 7'h0 : queue_7_inst_prd;
  assign io_prd_queue_8 = casez_tmp ? casez_tmp_0 : 7'h0;
  assign io_elem_num = _tail_pop_T_16;
  assign io_full = full;
endmodule

