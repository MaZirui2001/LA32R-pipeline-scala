// Generated by CIRCT firtool-1.58.0
module ICache(
  input          clock,
                 reset,
  input  [31:0]  io_addr_IF,
  input          io_rvalid_IF,
  output         io_cache_miss_RM,
  output [127:0] io_rdata_RM,
  output [31:0]  io_i_araddr,
  output         io_i_rvalid,
  input          io_i_rready,
  input  [31:0]  io_i_rdata,
  input          io_i_rlast
);

  wire         lru_miss_upd;
  wire         _GEN;
  wire [511:0] _xilinx_single_port_ram_write_first_3_douta;
  wire [511:0] _xilinx_single_port_ram_write_first_2_douta;
  wire [20:0]  _xilinx_single_port_ram_write_first_1_douta;
  wire [20:0]  _xilinx_single_port_ram_write_first_douta;
  reg          casez_tmp;
  reg  [1:0]   casez_tmp_0;
  reg  [31:0]  addr_reg_IF_RM;
  reg          rvalid_reg_IF_RM;
  reg          lru_mem_0;
  reg          lru_mem_1;
  reg          lru_mem_2;
  reg          lru_mem_3;
  reg          lru_mem_4;
  reg          lru_mem_5;
  reg          lru_mem_6;
  reg          lru_mem_7;
  reg          lru_mem_8;
  reg          lru_mem_9;
  reg          lru_mem_10;
  reg          lru_mem_11;
  reg          lru_mem_12;
  reg          lru_mem_13;
  reg          lru_mem_14;
  reg          lru_mem_15;
  reg          lru_mem_16;
  reg          lru_mem_17;
  reg          lru_mem_18;
  reg          lru_mem_19;
  reg          lru_mem_20;
  reg          lru_mem_21;
  reg          lru_mem_22;
  reg          lru_mem_23;
  reg          lru_mem_24;
  reg          lru_mem_25;
  reg          lru_mem_26;
  reg          lru_mem_27;
  reg          lru_mem_28;
  reg          lru_mem_29;
  reg          lru_mem_30;
  reg          lru_mem_31;
  reg          lru_mem_32;
  reg          lru_mem_33;
  reg          lru_mem_34;
  reg          lru_mem_35;
  reg          lru_mem_36;
  reg          lru_mem_37;
  reg          lru_mem_38;
  reg          lru_mem_39;
  reg          lru_mem_40;
  reg          lru_mem_41;
  reg          lru_mem_42;
  reg          lru_mem_43;
  reg          lru_mem_44;
  reg          lru_mem_45;
  reg          lru_mem_46;
  reg          lru_mem_47;
  reg          lru_mem_48;
  reg          lru_mem_49;
  reg          lru_mem_50;
  reg          lru_mem_51;
  reg          lru_mem_52;
  reg          lru_mem_53;
  reg          lru_mem_54;
  reg          lru_mem_55;
  reg          lru_mem_56;
  reg          lru_mem_57;
  reg          lru_mem_58;
  reg          lru_mem_59;
  reg          lru_mem_60;
  reg          lru_mem_61;
  reg          lru_mem_62;
  reg          lru_mem_63;
  reg  [511:0] ret_buf;
  wire [20:0]  tagv_1_dina = {1'h1, io_addr_IF[31:12]};
  wire         hit_RM_1 =
    _xilinx_single_port_ram_write_first_1_douta[20]
    & _xilinx_single_port_ram_write_first_1_douta[19:0] == addr_reg_IF_RM[31:12];
  wire         cache_hit_RM =
    _xilinx_single_port_ram_write_first_douta[20]
    & _xilinx_single_port_ram_write_first_douta[19:0] == addr_reg_IF_RM[31:12] | hit_RM_1;
  wire [511:0] _GEN_0 = {503'h0, addr_reg_IF_RM[5:4], 7'h0};
  wire [511:0] _cmem_rdata_RM_T =
    (hit_RM_1
       ? _xilinx_single_port_ram_write_first_3_douta
       : _xilinx_single_port_ram_write_first_2_douta) >> _GEN_0;
  wire [511:0] _rbuf_rdata_RM_T = ret_buf >> _GEN_0;
  always_comb begin
    casez (addr_reg_IF_RM[11:6])
      6'b000000:
        casez_tmp = lru_mem_0;
      6'b000001:
        casez_tmp = lru_mem_1;
      6'b000010:
        casez_tmp = lru_mem_2;
      6'b000011:
        casez_tmp = lru_mem_3;
      6'b000100:
        casez_tmp = lru_mem_4;
      6'b000101:
        casez_tmp = lru_mem_5;
      6'b000110:
        casez_tmp = lru_mem_6;
      6'b000111:
        casez_tmp = lru_mem_7;
      6'b001000:
        casez_tmp = lru_mem_8;
      6'b001001:
        casez_tmp = lru_mem_9;
      6'b001010:
        casez_tmp = lru_mem_10;
      6'b001011:
        casez_tmp = lru_mem_11;
      6'b001100:
        casez_tmp = lru_mem_12;
      6'b001101:
        casez_tmp = lru_mem_13;
      6'b001110:
        casez_tmp = lru_mem_14;
      6'b001111:
        casez_tmp = lru_mem_15;
      6'b010000:
        casez_tmp = lru_mem_16;
      6'b010001:
        casez_tmp = lru_mem_17;
      6'b010010:
        casez_tmp = lru_mem_18;
      6'b010011:
        casez_tmp = lru_mem_19;
      6'b010100:
        casez_tmp = lru_mem_20;
      6'b010101:
        casez_tmp = lru_mem_21;
      6'b010110:
        casez_tmp = lru_mem_22;
      6'b010111:
        casez_tmp = lru_mem_23;
      6'b011000:
        casez_tmp = lru_mem_24;
      6'b011001:
        casez_tmp = lru_mem_25;
      6'b011010:
        casez_tmp = lru_mem_26;
      6'b011011:
        casez_tmp = lru_mem_27;
      6'b011100:
        casez_tmp = lru_mem_28;
      6'b011101:
        casez_tmp = lru_mem_29;
      6'b011110:
        casez_tmp = lru_mem_30;
      6'b011111:
        casez_tmp = lru_mem_31;
      6'b100000:
        casez_tmp = lru_mem_32;
      6'b100001:
        casez_tmp = lru_mem_33;
      6'b100010:
        casez_tmp = lru_mem_34;
      6'b100011:
        casez_tmp = lru_mem_35;
      6'b100100:
        casez_tmp = lru_mem_36;
      6'b100101:
        casez_tmp = lru_mem_37;
      6'b100110:
        casez_tmp = lru_mem_38;
      6'b100111:
        casez_tmp = lru_mem_39;
      6'b101000:
        casez_tmp = lru_mem_40;
      6'b101001:
        casez_tmp = lru_mem_41;
      6'b101010:
        casez_tmp = lru_mem_42;
      6'b101011:
        casez_tmp = lru_mem_43;
      6'b101100:
        casez_tmp = lru_mem_44;
      6'b101101:
        casez_tmp = lru_mem_45;
      6'b101110:
        casez_tmp = lru_mem_46;
      6'b101111:
        casez_tmp = lru_mem_47;
      6'b110000:
        casez_tmp = lru_mem_48;
      6'b110001:
        casez_tmp = lru_mem_49;
      6'b110010:
        casez_tmp = lru_mem_50;
      6'b110011:
        casez_tmp = lru_mem_51;
      6'b110100:
        casez_tmp = lru_mem_52;
      6'b110101:
        casez_tmp = lru_mem_53;
      6'b110110:
        casez_tmp = lru_mem_54;
      6'b110111:
        casez_tmp = lru_mem_55;
      6'b111000:
        casez_tmp = lru_mem_56;
      6'b111001:
        casez_tmp = lru_mem_57;
      6'b111010:
        casez_tmp = lru_mem_58;
      6'b111011:
        casez_tmp = lru_mem_59;
      6'b111100:
        casez_tmp = lru_mem_60;
      6'b111101:
        casez_tmp = lru_mem_61;
      6'b111110:
        casez_tmp = lru_mem_62;
      default:
        casez_tmp = lru_mem_63;
    endcase
  end // always_comb
  reg  [1:0]   state;
  assign _GEN = state == 2'h0;
  wire         _GEN_1 = state == 2'h1;
  wire         _GEN_2 = state == 2'h2;
  wire         _GEN_3 = _GEN | _GEN_1;
  assign lru_miss_upd = ~_GEN_3 & _GEN_2;
  wire         cmem_we_RM_0 = ~_GEN_3 & _GEN_2 & ~casez_tmp;
  wire         cmem_we_RM_1 = ~_GEN_3 & _GEN_2 & casez_tmp;
  always_comb begin
    casez (state)
      2'b00:
        casez_tmp_0 = rvalid_reg_IF_RM ? {1'h0, ~cache_hit_RM} : state;
      2'b01:
        casez_tmp_0 = io_i_rready & io_i_rlast ? 2'h2 : 2'h1;
      2'b10:
        casez_tmp_0 = 2'h3;
      default:
        casez_tmp_0 = 2'h0;
    endcase
  end // always_comb
  wire         cache_miss_RM = _GEN ? rvalid_reg_IF_RM & ~cache_hit_RM : _GEN_1 | _GEN_2;
  wire         _lru_mem_T_4 =
    lru_miss_upd & ~casez_tmp | _GEN & rvalid_reg_IF_RM & cache_hit_RM & ~hit_RM_1;
  always @(posedge clock) begin
    if (reset) begin
      addr_reg_IF_RM <= 32'h0;
      rvalid_reg_IF_RM <= 1'h0;
      lru_mem_0 <= 1'h0;
      lru_mem_1 <= 1'h0;
      lru_mem_2 <= 1'h0;
      lru_mem_3 <= 1'h0;
      lru_mem_4 <= 1'h0;
      lru_mem_5 <= 1'h0;
      lru_mem_6 <= 1'h0;
      lru_mem_7 <= 1'h0;
      lru_mem_8 <= 1'h0;
      lru_mem_9 <= 1'h0;
      lru_mem_10 <= 1'h0;
      lru_mem_11 <= 1'h0;
      lru_mem_12 <= 1'h0;
      lru_mem_13 <= 1'h0;
      lru_mem_14 <= 1'h0;
      lru_mem_15 <= 1'h0;
      lru_mem_16 <= 1'h0;
      lru_mem_17 <= 1'h0;
      lru_mem_18 <= 1'h0;
      lru_mem_19 <= 1'h0;
      lru_mem_20 <= 1'h0;
      lru_mem_21 <= 1'h0;
      lru_mem_22 <= 1'h0;
      lru_mem_23 <= 1'h0;
      lru_mem_24 <= 1'h0;
      lru_mem_25 <= 1'h0;
      lru_mem_26 <= 1'h0;
      lru_mem_27 <= 1'h0;
      lru_mem_28 <= 1'h0;
      lru_mem_29 <= 1'h0;
      lru_mem_30 <= 1'h0;
      lru_mem_31 <= 1'h0;
      lru_mem_32 <= 1'h0;
      lru_mem_33 <= 1'h0;
      lru_mem_34 <= 1'h0;
      lru_mem_35 <= 1'h0;
      lru_mem_36 <= 1'h0;
      lru_mem_37 <= 1'h0;
      lru_mem_38 <= 1'h0;
      lru_mem_39 <= 1'h0;
      lru_mem_40 <= 1'h0;
      lru_mem_41 <= 1'h0;
      lru_mem_42 <= 1'h0;
      lru_mem_43 <= 1'h0;
      lru_mem_44 <= 1'h0;
      lru_mem_45 <= 1'h0;
      lru_mem_46 <= 1'h0;
      lru_mem_47 <= 1'h0;
      lru_mem_48 <= 1'h0;
      lru_mem_49 <= 1'h0;
      lru_mem_50 <= 1'h0;
      lru_mem_51 <= 1'h0;
      lru_mem_52 <= 1'h0;
      lru_mem_53 <= 1'h0;
      lru_mem_54 <= 1'h0;
      lru_mem_55 <= 1'h0;
      lru_mem_56 <= 1'h0;
      lru_mem_57 <= 1'h0;
      lru_mem_58 <= 1'h0;
      lru_mem_59 <= 1'h0;
      lru_mem_60 <= 1'h0;
      lru_mem_61 <= 1'h0;
      lru_mem_62 <= 1'h0;
      lru_mem_63 <= 1'h0;
      ret_buf <= 512'h0;
      state <= 2'h0;
    end
    else begin
      if (~cache_miss_RM) begin
        addr_reg_IF_RM <= io_addr_IF;
        rvalid_reg_IF_RM <= io_rvalid_IF;
      end
      if (addr_reg_IF_RM[11:6] == 6'h0)
        lru_mem_0 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h1)
        lru_mem_1 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h2)
        lru_mem_2 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h3)
        lru_mem_3 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h4)
        lru_mem_4 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h5)
        lru_mem_5 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h6)
        lru_mem_6 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h7)
        lru_mem_7 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h8)
        lru_mem_8 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h9)
        lru_mem_9 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'hA)
        lru_mem_10 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'hB)
        lru_mem_11 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'hC)
        lru_mem_12 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'hD)
        lru_mem_13 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'hE)
        lru_mem_14 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'hF)
        lru_mem_15 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h10)
        lru_mem_16 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h11)
        lru_mem_17 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h12)
        lru_mem_18 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h13)
        lru_mem_19 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h14)
        lru_mem_20 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h15)
        lru_mem_21 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h16)
        lru_mem_22 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h17)
        lru_mem_23 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h18)
        lru_mem_24 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h19)
        lru_mem_25 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h1A)
        lru_mem_26 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h1B)
        lru_mem_27 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h1C)
        lru_mem_28 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h1D)
        lru_mem_29 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h1E)
        lru_mem_30 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h1F)
        lru_mem_31 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h20)
        lru_mem_32 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h21)
        lru_mem_33 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h22)
        lru_mem_34 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h23)
        lru_mem_35 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h24)
        lru_mem_36 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h25)
        lru_mem_37 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h26)
        lru_mem_38 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h27)
        lru_mem_39 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h28)
        lru_mem_40 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h29)
        lru_mem_41 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h2A)
        lru_mem_42 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h2B)
        lru_mem_43 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h2C)
        lru_mem_44 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h2D)
        lru_mem_45 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h2E)
        lru_mem_46 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h2F)
        lru_mem_47 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h30)
        lru_mem_48 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h31)
        lru_mem_49 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h32)
        lru_mem_50 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h33)
        lru_mem_51 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h34)
        lru_mem_52 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h35)
        lru_mem_53 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h36)
        lru_mem_54 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h37)
        lru_mem_55 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h38)
        lru_mem_56 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h39)
        lru_mem_57 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h3A)
        lru_mem_58 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h3B)
        lru_mem_59 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h3C)
        lru_mem_60 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h3D)
        lru_mem_61 <= _lru_mem_T_4;
      if (addr_reg_IF_RM[11:6] == 6'h3E)
        lru_mem_62 <= _lru_mem_T_4;
      if (&(addr_reg_IF_RM[11:6]))
        lru_mem_63 <= _lru_mem_T_4;
      if (io_i_rready)
        ret_buf <= {io_i_rdata, ret_buf[511:32]};
      state <= casez_tmp_0;
    end
  end // always @(posedge)
  xilinx_single_port_ram_write_first #(
    .RAM_DEPTH(64),
    .RAM_WIDTH(21)
  ) xilinx_single_port_ram_write_first (
    .addra (lru_miss_upd ? addr_reg_IF_RM[11:6] : io_addr_IF[11:6]),
    .dina  (tagv_1_dina),
    .clka  (clock),
    .wea   (cmem_we_RM_0),
    .douta (_xilinx_single_port_ram_write_first_douta)
  );
  xilinx_single_port_ram_write_first #(
    .RAM_DEPTH(64),
    .RAM_WIDTH(21)
  ) xilinx_single_port_ram_write_first_1 (
    .addra (lru_miss_upd ? addr_reg_IF_RM[11:6] : io_addr_IF[11:6]),
    .dina  (tagv_1_dina),
    .clka  (clock),
    .wea   (cmem_we_RM_1),
    .douta (_xilinx_single_port_ram_write_first_1_douta)
  );
  xilinx_single_port_ram_write_first #(
    .RAM_DEPTH(64),
    .RAM_WIDTH(512)
  ) xilinx_single_port_ram_write_first_2 (
    .addra (lru_miss_upd ? addr_reg_IF_RM[11:6] : io_addr_IF[11:6]),
    .dina  (ret_buf),
    .clka  (clock),
    .wea   (cmem_we_RM_0),
    .douta (_xilinx_single_port_ram_write_first_2_douta)
  );
  xilinx_single_port_ram_write_first #(
    .RAM_DEPTH(64),
    .RAM_WIDTH(512)
  ) xilinx_single_port_ram_write_first_3 (
    .addra (lru_miss_upd ? addr_reg_IF_RM[11:6] : io_addr_IF[11:6]),
    .dina  (ret_buf),
    .clka  (clock),
    .wea   (cmem_we_RM_1),
    .douta (_xilinx_single_port_ram_write_first_3_douta)
  );
  assign io_cache_miss_RM = cache_miss_RM;
  assign io_rdata_RM =
    _GEN & rvalid_reg_IF_RM ? _cmem_rdata_RM_T[127:0] : _rbuf_rdata_RM_T[127:0];
  assign io_i_araddr = {addr_reg_IF_RM[31:6], 6'h0};
  assign io_i_rvalid = ~_GEN & _GEN_1;
endmodule

