// Generated by CIRCT firtool-1.56.1
module Predict(
  input         clock,
                reset,
  input  [31:0] io_npc,
                io_pc,
                io_pc_cmt,
  input         io_real_jump,
  input  [31:0] io_branch_target,
  input         io_update_en,
  input  [1:0]  io_br_type,
  input         io_ras_update_en,
  input  [3:0]  io_top_arch,
  input         io_predict_fail,
                io_pd_pred_fix,
                io_pd_pred_fix_is_bl,
  input  [31:0] io_pd_pc_plus_4,
  output        io_predict_jump_0,
                io_predict_jump_1,
                io_predict_jump_2,
                io_predict_jump_3,
  output [31:0] io_pred_npc,
  output        io_pred_valid_0,
                io_pred_valid_1,
                io_pred_valid_2,
                io_pred_valid_3
);

  wire [19:0] btb_rdata_3_tag;
  wire        btb_rdata_3_valid;
  wire [19:0] btb_rdata_2_tag;
  wire        btb_rdata_2_valid;
  wire [19:0] btb_rdata_1_tag;
  wire        btb_rdata_1_valid;
  wire [19:0] btb_rdata_0_tag;
  wire        btb_rdata_0_valid;
  wire [31:0] _xilinx_simple_dual_port_1_clock_ram_7_doutb;
  wire [31:0] _xilinx_simple_dual_port_1_clock_ram_6_doutb;
  wire [31:0] _xilinx_simple_dual_port_1_clock_ram_5_doutb;
  wire [31:0] _xilinx_simple_dual_port_1_clock_ram_4_doutb;
  wire [20:0] _xilinx_simple_dual_port_1_clock_ram_3_doutb;
  wire [20:0] _xilinx_simple_dual_port_1_clock_ram_2_doutb;
  wire [20:0] _xilinx_simple_dual_port_1_clock_ram_1_doutb;
  wire [20:0] _xilinx_simple_dual_port_1_clock_ram_doutb;
  reg  [3:0]  casez_tmp;
  reg  [3:0]  casez_tmp_0;
  reg  [3:0]  casez_tmp_1;
  reg  [3:0]  casez_tmp_2;
  reg  [1:0]  casez_tmp_3;
  reg  [1:0]  casez_tmp_4;
  reg  [1:0]  casez_tmp_5;
  reg  [1:0]  casez_tmp_6;
  reg  [29:0] casez_tmp_7;
  reg  [1:0]  casez_tmp_8;
  reg  [31:0] casez_tmp_9;
  reg  [3:0]  casez_tmp_10;
  reg  [3:0]  casez_tmp_11;
  reg  [3:0]  casez_tmp_12;
  reg  [3:0]  casez_tmp_13;
  reg  [3:0]  casez_tmp_14;
  reg  [3:0]  casez_tmp_15;
  reg  [3:0]  casez_tmp_16;
  reg  [3:0]  casez_tmp_17;
  reg  [3:0]  casez_tmp_18;
  reg  [3:0]  casez_tmp_19;
  reg  [3:0]  casez_tmp_20;
  reg  [3:0]  casez_tmp_21;
  reg  [3:0]  casez_tmp_22;
  reg  [3:0]  casez_tmp_23;
  reg  [3:0]  casez_tmp_24;
  reg  [3:0]  casez_tmp_25;
  reg  [3:0]  casez_tmp_26;
  reg  [1:0]  casez_tmp_27;
  reg  [1:0]  casez_tmp_28;
  reg  [1:0]  casez_tmp_29;
  reg  [1:0]  casez_tmp_30;
  reg  [1:0]  casez_tmp_31;
  reg  [1:0]  casez_tmp_32;
  reg  [1:0]  casez_tmp_33;
  reg  [1:0]  casez_tmp_34;
  reg  [1:0]  casez_tmp_35;
  reg  [1:0]  casez_tmp_36;
  reg  [1:0]  casez_tmp_37;
  reg  [1:0]  casez_tmp_38;
  reg  [1:0]  casez_tmp_39;
  reg  [1:0]  casez_tmp_40;
  reg  [1:0]  casez_tmp_41;
  reg  [1:0]  casez_tmp_42;
  reg  [1:0]  casez_tmp_43;
  reg  [1:0]  casez_tmp_44;
  reg  [1:0]  casez_tmp_45;
  reg  [1:0]  casez_tmp_46;
  reg  [1:0]  casez_tmp_47;
  reg  [1:0]  casez_tmp_48;
  reg  [1:0]  casez_tmp_49;
  reg  [1:0]  casez_tmp_50;
  reg  [1:0]  casez_tmp_51;
  reg  [1:0]  casez_tmp_52;
  reg  [1:0]  casez_tmp_53;
  reg  [1:0]  casez_tmp_54;
  reg  [1:0]  casez_tmp_55;
  reg  [1:0]  casez_tmp_56;
  reg  [1:0]  casez_tmp_57;
  reg  [1:0]  casez_tmp_58;
  reg  [1:0]  casez_tmp_59;
  reg  [1:0]  casez_tmp_60;
  reg  [1:0]  casez_tmp_61;
  reg  [1:0]  casez_tmp_62;
  reg  [1:0]  casez_tmp_63;
  reg  [1:0]  casez_tmp_64;
  reg  [1:0]  casez_tmp_65;
  reg  [1:0]  casez_tmp_66;
  reg  [1:0]  casez_tmp_67;
  reg  [1:0]  casez_tmp_68;
  reg  [1:0]  casez_tmp_69;
  reg  [1:0]  casez_tmp_70;
  reg  [1:0]  casez_tmp_71;
  reg  [1:0]  casez_tmp_72;
  reg  [1:0]  casez_tmp_73;
  reg  [1:0]  casez_tmp_74;
  reg  [1:0]  casez_tmp_75;
  reg  [1:0]  casez_tmp_76;
  reg  [1:0]  casez_tmp_77;
  reg  [1:0]  casez_tmp_78;
  reg  [1:0]  casez_tmp_79;
  reg  [1:0]  casez_tmp_80;
  reg  [1:0]  casez_tmp_81;
  reg  [1:0]  casez_tmp_82;
  reg  [1:0]  casez_tmp_83;
  reg  [1:0]  casez_tmp_84;
  reg  [1:0]  casez_tmp_85;
  reg  [1:0]  casez_tmp_86;
  reg  [1:0]  casez_tmp_87;
  reg  [1:0]  casez_tmp_88;
  reg  [1:0]  casez_tmp_89;
  reg  [1:0]  casez_tmp_90;
  reg  [1:0]  casez_tmp_91;
  reg  [3:0]  bht_0_0;
  reg  [3:0]  bht_0_1;
  reg  [3:0]  bht_0_2;
  reg  [3:0]  bht_0_3;
  reg  [3:0]  bht_0_4;
  reg  [3:0]  bht_0_5;
  reg  [3:0]  bht_0_6;
  reg  [3:0]  bht_0_7;
  reg  [3:0]  bht_0_8;
  reg  [3:0]  bht_0_9;
  reg  [3:0]  bht_0_10;
  reg  [3:0]  bht_0_11;
  reg  [3:0]  bht_0_12;
  reg  [3:0]  bht_0_13;
  reg  [3:0]  bht_0_14;
  reg  [3:0]  bht_0_15;
  reg  [3:0]  bht_1_0;
  reg  [3:0]  bht_1_1;
  reg  [3:0]  bht_1_2;
  reg  [3:0]  bht_1_3;
  reg  [3:0]  bht_1_4;
  reg  [3:0]  bht_1_5;
  reg  [3:0]  bht_1_6;
  reg  [3:0]  bht_1_7;
  reg  [3:0]  bht_1_8;
  reg  [3:0]  bht_1_9;
  reg  [3:0]  bht_1_10;
  reg  [3:0]  bht_1_11;
  reg  [3:0]  bht_1_12;
  reg  [3:0]  bht_1_13;
  reg  [3:0]  bht_1_14;
  reg  [3:0]  bht_1_15;
  reg  [3:0]  bht_2_0;
  reg  [3:0]  bht_2_1;
  reg  [3:0]  bht_2_2;
  reg  [3:0]  bht_2_3;
  reg  [3:0]  bht_2_4;
  reg  [3:0]  bht_2_5;
  reg  [3:0]  bht_2_6;
  reg  [3:0]  bht_2_7;
  reg  [3:0]  bht_2_8;
  reg  [3:0]  bht_2_9;
  reg  [3:0]  bht_2_10;
  reg  [3:0]  bht_2_11;
  reg  [3:0]  bht_2_12;
  reg  [3:0]  bht_2_13;
  reg  [3:0]  bht_2_14;
  reg  [3:0]  bht_2_15;
  reg  [3:0]  bht_3_0;
  reg  [3:0]  bht_3_1;
  reg  [3:0]  bht_3_2;
  reg  [3:0]  bht_3_3;
  reg  [3:0]  bht_3_4;
  reg  [3:0]  bht_3_5;
  reg  [3:0]  bht_3_6;
  reg  [3:0]  bht_3_7;
  reg  [3:0]  bht_3_8;
  reg  [3:0]  bht_3_9;
  reg  [3:0]  bht_3_10;
  reg  [3:0]  bht_3_11;
  reg  [3:0]  bht_3_12;
  reg  [3:0]  bht_3_13;
  reg  [3:0]  bht_3_14;
  reg  [3:0]  bht_3_15;
  reg  [1:0]  pht_0_0;
  reg  [1:0]  pht_0_1;
  reg  [1:0]  pht_0_2;
  reg  [1:0]  pht_0_3;
  reg  [1:0]  pht_0_4;
  reg  [1:0]  pht_0_5;
  reg  [1:0]  pht_0_6;
  reg  [1:0]  pht_0_7;
  reg  [1:0]  pht_0_8;
  reg  [1:0]  pht_0_9;
  reg  [1:0]  pht_0_10;
  reg  [1:0]  pht_0_11;
  reg  [1:0]  pht_0_12;
  reg  [1:0]  pht_0_13;
  reg  [1:0]  pht_0_14;
  reg  [1:0]  pht_0_15;
  reg  [1:0]  pht_0_16;
  reg  [1:0]  pht_0_17;
  reg  [1:0]  pht_0_18;
  reg  [1:0]  pht_0_19;
  reg  [1:0]  pht_0_20;
  reg  [1:0]  pht_0_21;
  reg  [1:0]  pht_0_22;
  reg  [1:0]  pht_0_23;
  reg  [1:0]  pht_0_24;
  reg  [1:0]  pht_0_25;
  reg  [1:0]  pht_0_26;
  reg  [1:0]  pht_0_27;
  reg  [1:0]  pht_0_28;
  reg  [1:0]  pht_0_29;
  reg  [1:0]  pht_0_30;
  reg  [1:0]  pht_0_31;
  reg  [1:0]  pht_0_32;
  reg  [1:0]  pht_0_33;
  reg  [1:0]  pht_0_34;
  reg  [1:0]  pht_0_35;
  reg  [1:0]  pht_0_36;
  reg  [1:0]  pht_0_37;
  reg  [1:0]  pht_0_38;
  reg  [1:0]  pht_0_39;
  reg  [1:0]  pht_0_40;
  reg  [1:0]  pht_0_41;
  reg  [1:0]  pht_0_42;
  reg  [1:0]  pht_0_43;
  reg  [1:0]  pht_0_44;
  reg  [1:0]  pht_0_45;
  reg  [1:0]  pht_0_46;
  reg  [1:0]  pht_0_47;
  reg  [1:0]  pht_0_48;
  reg  [1:0]  pht_0_49;
  reg  [1:0]  pht_0_50;
  reg  [1:0]  pht_0_51;
  reg  [1:0]  pht_0_52;
  reg  [1:0]  pht_0_53;
  reg  [1:0]  pht_0_54;
  reg  [1:0]  pht_0_55;
  reg  [1:0]  pht_0_56;
  reg  [1:0]  pht_0_57;
  reg  [1:0]  pht_0_58;
  reg  [1:0]  pht_0_59;
  reg  [1:0]  pht_0_60;
  reg  [1:0]  pht_0_61;
  reg  [1:0]  pht_0_62;
  reg  [1:0]  pht_0_63;
  reg  [1:0]  pht_1_0;
  reg  [1:0]  pht_1_1;
  reg  [1:0]  pht_1_2;
  reg  [1:0]  pht_1_3;
  reg  [1:0]  pht_1_4;
  reg  [1:0]  pht_1_5;
  reg  [1:0]  pht_1_6;
  reg  [1:0]  pht_1_7;
  reg  [1:0]  pht_1_8;
  reg  [1:0]  pht_1_9;
  reg  [1:0]  pht_1_10;
  reg  [1:0]  pht_1_11;
  reg  [1:0]  pht_1_12;
  reg  [1:0]  pht_1_13;
  reg  [1:0]  pht_1_14;
  reg  [1:0]  pht_1_15;
  reg  [1:0]  pht_1_16;
  reg  [1:0]  pht_1_17;
  reg  [1:0]  pht_1_18;
  reg  [1:0]  pht_1_19;
  reg  [1:0]  pht_1_20;
  reg  [1:0]  pht_1_21;
  reg  [1:0]  pht_1_22;
  reg  [1:0]  pht_1_23;
  reg  [1:0]  pht_1_24;
  reg  [1:0]  pht_1_25;
  reg  [1:0]  pht_1_26;
  reg  [1:0]  pht_1_27;
  reg  [1:0]  pht_1_28;
  reg  [1:0]  pht_1_29;
  reg  [1:0]  pht_1_30;
  reg  [1:0]  pht_1_31;
  reg  [1:0]  pht_1_32;
  reg  [1:0]  pht_1_33;
  reg  [1:0]  pht_1_34;
  reg  [1:0]  pht_1_35;
  reg  [1:0]  pht_1_36;
  reg  [1:0]  pht_1_37;
  reg  [1:0]  pht_1_38;
  reg  [1:0]  pht_1_39;
  reg  [1:0]  pht_1_40;
  reg  [1:0]  pht_1_41;
  reg  [1:0]  pht_1_42;
  reg  [1:0]  pht_1_43;
  reg  [1:0]  pht_1_44;
  reg  [1:0]  pht_1_45;
  reg  [1:0]  pht_1_46;
  reg  [1:0]  pht_1_47;
  reg  [1:0]  pht_1_48;
  reg  [1:0]  pht_1_49;
  reg  [1:0]  pht_1_50;
  reg  [1:0]  pht_1_51;
  reg  [1:0]  pht_1_52;
  reg  [1:0]  pht_1_53;
  reg  [1:0]  pht_1_54;
  reg  [1:0]  pht_1_55;
  reg  [1:0]  pht_1_56;
  reg  [1:0]  pht_1_57;
  reg  [1:0]  pht_1_58;
  reg  [1:0]  pht_1_59;
  reg  [1:0]  pht_1_60;
  reg  [1:0]  pht_1_61;
  reg  [1:0]  pht_1_62;
  reg  [1:0]  pht_1_63;
  reg  [1:0]  pht_2_0;
  reg  [1:0]  pht_2_1;
  reg  [1:0]  pht_2_2;
  reg  [1:0]  pht_2_3;
  reg  [1:0]  pht_2_4;
  reg  [1:0]  pht_2_5;
  reg  [1:0]  pht_2_6;
  reg  [1:0]  pht_2_7;
  reg  [1:0]  pht_2_8;
  reg  [1:0]  pht_2_9;
  reg  [1:0]  pht_2_10;
  reg  [1:0]  pht_2_11;
  reg  [1:0]  pht_2_12;
  reg  [1:0]  pht_2_13;
  reg  [1:0]  pht_2_14;
  reg  [1:0]  pht_2_15;
  reg  [1:0]  pht_2_16;
  reg  [1:0]  pht_2_17;
  reg  [1:0]  pht_2_18;
  reg  [1:0]  pht_2_19;
  reg  [1:0]  pht_2_20;
  reg  [1:0]  pht_2_21;
  reg  [1:0]  pht_2_22;
  reg  [1:0]  pht_2_23;
  reg  [1:0]  pht_2_24;
  reg  [1:0]  pht_2_25;
  reg  [1:0]  pht_2_26;
  reg  [1:0]  pht_2_27;
  reg  [1:0]  pht_2_28;
  reg  [1:0]  pht_2_29;
  reg  [1:0]  pht_2_30;
  reg  [1:0]  pht_2_31;
  reg  [1:0]  pht_2_32;
  reg  [1:0]  pht_2_33;
  reg  [1:0]  pht_2_34;
  reg  [1:0]  pht_2_35;
  reg  [1:0]  pht_2_36;
  reg  [1:0]  pht_2_37;
  reg  [1:0]  pht_2_38;
  reg  [1:0]  pht_2_39;
  reg  [1:0]  pht_2_40;
  reg  [1:0]  pht_2_41;
  reg  [1:0]  pht_2_42;
  reg  [1:0]  pht_2_43;
  reg  [1:0]  pht_2_44;
  reg  [1:0]  pht_2_45;
  reg  [1:0]  pht_2_46;
  reg  [1:0]  pht_2_47;
  reg  [1:0]  pht_2_48;
  reg  [1:0]  pht_2_49;
  reg  [1:0]  pht_2_50;
  reg  [1:0]  pht_2_51;
  reg  [1:0]  pht_2_52;
  reg  [1:0]  pht_2_53;
  reg  [1:0]  pht_2_54;
  reg  [1:0]  pht_2_55;
  reg  [1:0]  pht_2_56;
  reg  [1:0]  pht_2_57;
  reg  [1:0]  pht_2_58;
  reg  [1:0]  pht_2_59;
  reg  [1:0]  pht_2_60;
  reg  [1:0]  pht_2_61;
  reg  [1:0]  pht_2_62;
  reg  [1:0]  pht_2_63;
  reg  [1:0]  pht_3_0;
  reg  [1:0]  pht_3_1;
  reg  [1:0]  pht_3_2;
  reg  [1:0]  pht_3_3;
  reg  [1:0]  pht_3_4;
  reg  [1:0]  pht_3_5;
  reg  [1:0]  pht_3_6;
  reg  [1:0]  pht_3_7;
  reg  [1:0]  pht_3_8;
  reg  [1:0]  pht_3_9;
  reg  [1:0]  pht_3_10;
  reg  [1:0]  pht_3_11;
  reg  [1:0]  pht_3_12;
  reg  [1:0]  pht_3_13;
  reg  [1:0]  pht_3_14;
  reg  [1:0]  pht_3_15;
  reg  [1:0]  pht_3_16;
  reg  [1:0]  pht_3_17;
  reg  [1:0]  pht_3_18;
  reg  [1:0]  pht_3_19;
  reg  [1:0]  pht_3_20;
  reg  [1:0]  pht_3_21;
  reg  [1:0]  pht_3_22;
  reg  [1:0]  pht_3_23;
  reg  [1:0]  pht_3_24;
  reg  [1:0]  pht_3_25;
  reg  [1:0]  pht_3_26;
  reg  [1:0]  pht_3_27;
  reg  [1:0]  pht_3_28;
  reg  [1:0]  pht_3_29;
  reg  [1:0]  pht_3_30;
  reg  [1:0]  pht_3_31;
  reg  [1:0]  pht_3_32;
  reg  [1:0]  pht_3_33;
  reg  [1:0]  pht_3_34;
  reg  [1:0]  pht_3_35;
  reg  [1:0]  pht_3_36;
  reg  [1:0]  pht_3_37;
  reg  [1:0]  pht_3_38;
  reg  [1:0]  pht_3_39;
  reg  [1:0]  pht_3_40;
  reg  [1:0]  pht_3_41;
  reg  [1:0]  pht_3_42;
  reg  [1:0]  pht_3_43;
  reg  [1:0]  pht_3_44;
  reg  [1:0]  pht_3_45;
  reg  [1:0]  pht_3_46;
  reg  [1:0]  pht_3_47;
  reg  [1:0]  pht_3_48;
  reg  [1:0]  pht_3_49;
  reg  [1:0]  pht_3_50;
  reg  [1:0]  pht_3_51;
  reg  [1:0]  pht_3_52;
  reg  [1:0]  pht_3_53;
  reg  [1:0]  pht_3_54;
  reg  [1:0]  pht_3_55;
  reg  [1:0]  pht_3_56;
  reg  [1:0]  pht_3_57;
  reg  [1:0]  pht_3_58;
  reg  [1:0]  pht_3_59;
  reg  [1:0]  pht_3_60;
  reg  [1:0]  pht_3_61;
  reg  [1:0]  pht_3_62;
  reg  [1:0]  pht_3_63;
  reg  [31:0] ras_0;
  reg  [31:0] ras_1;
  reg  [31:0] ras_2;
  reg  [31:0] ras_3;
  reg  [31:0] ras_4;
  reg  [31:0] ras_5;
  reg  [31:0] ras_6;
  reg  [31:0] ras_7;
  reg  [31:0] ras_8;
  reg  [31:0] ras_9;
  reg  [31:0] ras_10;
  reg  [31:0] ras_11;
  reg  [31:0] ras_12;
  reg  [31:0] ras_13;
  reg  [31:0] ras_14;
  reg  [31:0] ras_15;
  reg  [3:0]  top;
  reg  [1:0]  jirl_sel;
  always_comb begin
    casez (io_pc[7:4])
      4'b0000:
        casez_tmp = bht_0_0;
      4'b0001:
        casez_tmp = bht_0_1;
      4'b0010:
        casez_tmp = bht_0_2;
      4'b0011:
        casez_tmp = bht_0_3;
      4'b0100:
        casez_tmp = bht_0_4;
      4'b0101:
        casez_tmp = bht_0_5;
      4'b0110:
        casez_tmp = bht_0_6;
      4'b0111:
        casez_tmp = bht_0_7;
      4'b1000:
        casez_tmp = bht_0_8;
      4'b1001:
        casez_tmp = bht_0_9;
      4'b1010:
        casez_tmp = bht_0_10;
      4'b1011:
        casez_tmp = bht_0_11;
      4'b1100:
        casez_tmp = bht_0_12;
      4'b1101:
        casez_tmp = bht_0_13;
      4'b1110:
        casez_tmp = bht_0_14;
      default:
        casez_tmp = bht_0_15;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc[7:4])
      4'b0000:
        casez_tmp_0 = bht_1_0;
      4'b0001:
        casez_tmp_0 = bht_1_1;
      4'b0010:
        casez_tmp_0 = bht_1_2;
      4'b0011:
        casez_tmp_0 = bht_1_3;
      4'b0100:
        casez_tmp_0 = bht_1_4;
      4'b0101:
        casez_tmp_0 = bht_1_5;
      4'b0110:
        casez_tmp_0 = bht_1_6;
      4'b0111:
        casez_tmp_0 = bht_1_7;
      4'b1000:
        casez_tmp_0 = bht_1_8;
      4'b1001:
        casez_tmp_0 = bht_1_9;
      4'b1010:
        casez_tmp_0 = bht_1_10;
      4'b1011:
        casez_tmp_0 = bht_1_11;
      4'b1100:
        casez_tmp_0 = bht_1_12;
      4'b1101:
        casez_tmp_0 = bht_1_13;
      4'b1110:
        casez_tmp_0 = bht_1_14;
      default:
        casez_tmp_0 = bht_1_15;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc[7:4])
      4'b0000:
        casez_tmp_1 = bht_2_0;
      4'b0001:
        casez_tmp_1 = bht_2_1;
      4'b0010:
        casez_tmp_1 = bht_2_2;
      4'b0011:
        casez_tmp_1 = bht_2_3;
      4'b0100:
        casez_tmp_1 = bht_2_4;
      4'b0101:
        casez_tmp_1 = bht_2_5;
      4'b0110:
        casez_tmp_1 = bht_2_6;
      4'b0111:
        casez_tmp_1 = bht_2_7;
      4'b1000:
        casez_tmp_1 = bht_2_8;
      4'b1001:
        casez_tmp_1 = bht_2_9;
      4'b1010:
        casez_tmp_1 = bht_2_10;
      4'b1011:
        casez_tmp_1 = bht_2_11;
      4'b1100:
        casez_tmp_1 = bht_2_12;
      4'b1101:
        casez_tmp_1 = bht_2_13;
      4'b1110:
        casez_tmp_1 = bht_2_14;
      default:
        casez_tmp_1 = bht_2_15;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc[7:4])
      4'b0000:
        casez_tmp_2 = bht_3_0;
      4'b0001:
        casez_tmp_2 = bht_3_1;
      4'b0010:
        casez_tmp_2 = bht_3_2;
      4'b0011:
        casez_tmp_2 = bht_3_3;
      4'b0100:
        casez_tmp_2 = bht_3_4;
      4'b0101:
        casez_tmp_2 = bht_3_5;
      4'b0110:
        casez_tmp_2 = bht_3_6;
      4'b0111:
        casez_tmp_2 = bht_3_7;
      4'b1000:
        casez_tmp_2 = bht_3_8;
      4'b1001:
        casez_tmp_2 = bht_3_9;
      4'b1010:
        casez_tmp_2 = bht_3_10;
      4'b1011:
        casez_tmp_2 = bht_3_11;
      4'b1100:
        casez_tmp_2 = bht_3_12;
      4'b1101:
        casez_tmp_2 = bht_3_13;
      4'b1110:
        casez_tmp_2 = bht_3_14;
      default:
        casez_tmp_2 = bht_3_15;
    endcase
  end // always_comb
  always_comb begin
    casez ({casez_tmp ^ io_pc[9:6], io_pc[5:4]})
      6'b000000:
        casez_tmp_3 = pht_0_0;
      6'b000001:
        casez_tmp_3 = pht_0_1;
      6'b000010:
        casez_tmp_3 = pht_0_2;
      6'b000011:
        casez_tmp_3 = pht_0_3;
      6'b000100:
        casez_tmp_3 = pht_0_4;
      6'b000101:
        casez_tmp_3 = pht_0_5;
      6'b000110:
        casez_tmp_3 = pht_0_6;
      6'b000111:
        casez_tmp_3 = pht_0_7;
      6'b001000:
        casez_tmp_3 = pht_0_8;
      6'b001001:
        casez_tmp_3 = pht_0_9;
      6'b001010:
        casez_tmp_3 = pht_0_10;
      6'b001011:
        casez_tmp_3 = pht_0_11;
      6'b001100:
        casez_tmp_3 = pht_0_12;
      6'b001101:
        casez_tmp_3 = pht_0_13;
      6'b001110:
        casez_tmp_3 = pht_0_14;
      6'b001111:
        casez_tmp_3 = pht_0_15;
      6'b010000:
        casez_tmp_3 = pht_0_16;
      6'b010001:
        casez_tmp_3 = pht_0_17;
      6'b010010:
        casez_tmp_3 = pht_0_18;
      6'b010011:
        casez_tmp_3 = pht_0_19;
      6'b010100:
        casez_tmp_3 = pht_0_20;
      6'b010101:
        casez_tmp_3 = pht_0_21;
      6'b010110:
        casez_tmp_3 = pht_0_22;
      6'b010111:
        casez_tmp_3 = pht_0_23;
      6'b011000:
        casez_tmp_3 = pht_0_24;
      6'b011001:
        casez_tmp_3 = pht_0_25;
      6'b011010:
        casez_tmp_3 = pht_0_26;
      6'b011011:
        casez_tmp_3 = pht_0_27;
      6'b011100:
        casez_tmp_3 = pht_0_28;
      6'b011101:
        casez_tmp_3 = pht_0_29;
      6'b011110:
        casez_tmp_3 = pht_0_30;
      6'b011111:
        casez_tmp_3 = pht_0_31;
      6'b100000:
        casez_tmp_3 = pht_0_32;
      6'b100001:
        casez_tmp_3 = pht_0_33;
      6'b100010:
        casez_tmp_3 = pht_0_34;
      6'b100011:
        casez_tmp_3 = pht_0_35;
      6'b100100:
        casez_tmp_3 = pht_0_36;
      6'b100101:
        casez_tmp_3 = pht_0_37;
      6'b100110:
        casez_tmp_3 = pht_0_38;
      6'b100111:
        casez_tmp_3 = pht_0_39;
      6'b101000:
        casez_tmp_3 = pht_0_40;
      6'b101001:
        casez_tmp_3 = pht_0_41;
      6'b101010:
        casez_tmp_3 = pht_0_42;
      6'b101011:
        casez_tmp_3 = pht_0_43;
      6'b101100:
        casez_tmp_3 = pht_0_44;
      6'b101101:
        casez_tmp_3 = pht_0_45;
      6'b101110:
        casez_tmp_3 = pht_0_46;
      6'b101111:
        casez_tmp_3 = pht_0_47;
      6'b110000:
        casez_tmp_3 = pht_0_48;
      6'b110001:
        casez_tmp_3 = pht_0_49;
      6'b110010:
        casez_tmp_3 = pht_0_50;
      6'b110011:
        casez_tmp_3 = pht_0_51;
      6'b110100:
        casez_tmp_3 = pht_0_52;
      6'b110101:
        casez_tmp_3 = pht_0_53;
      6'b110110:
        casez_tmp_3 = pht_0_54;
      6'b110111:
        casez_tmp_3 = pht_0_55;
      6'b111000:
        casez_tmp_3 = pht_0_56;
      6'b111001:
        casez_tmp_3 = pht_0_57;
      6'b111010:
        casez_tmp_3 = pht_0_58;
      6'b111011:
        casez_tmp_3 = pht_0_59;
      6'b111100:
        casez_tmp_3 = pht_0_60;
      6'b111101:
        casez_tmp_3 = pht_0_61;
      6'b111110:
        casez_tmp_3 = pht_0_62;
      default:
        casez_tmp_3 = pht_0_63;
    endcase
  end // always_comb
  always_comb begin
    casez ({casez_tmp_0 ^ io_pc[9:6], io_pc[5:4]})
      6'b000000:
        casez_tmp_4 = pht_1_0;
      6'b000001:
        casez_tmp_4 = pht_1_1;
      6'b000010:
        casez_tmp_4 = pht_1_2;
      6'b000011:
        casez_tmp_4 = pht_1_3;
      6'b000100:
        casez_tmp_4 = pht_1_4;
      6'b000101:
        casez_tmp_4 = pht_1_5;
      6'b000110:
        casez_tmp_4 = pht_1_6;
      6'b000111:
        casez_tmp_4 = pht_1_7;
      6'b001000:
        casez_tmp_4 = pht_1_8;
      6'b001001:
        casez_tmp_4 = pht_1_9;
      6'b001010:
        casez_tmp_4 = pht_1_10;
      6'b001011:
        casez_tmp_4 = pht_1_11;
      6'b001100:
        casez_tmp_4 = pht_1_12;
      6'b001101:
        casez_tmp_4 = pht_1_13;
      6'b001110:
        casez_tmp_4 = pht_1_14;
      6'b001111:
        casez_tmp_4 = pht_1_15;
      6'b010000:
        casez_tmp_4 = pht_1_16;
      6'b010001:
        casez_tmp_4 = pht_1_17;
      6'b010010:
        casez_tmp_4 = pht_1_18;
      6'b010011:
        casez_tmp_4 = pht_1_19;
      6'b010100:
        casez_tmp_4 = pht_1_20;
      6'b010101:
        casez_tmp_4 = pht_1_21;
      6'b010110:
        casez_tmp_4 = pht_1_22;
      6'b010111:
        casez_tmp_4 = pht_1_23;
      6'b011000:
        casez_tmp_4 = pht_1_24;
      6'b011001:
        casez_tmp_4 = pht_1_25;
      6'b011010:
        casez_tmp_4 = pht_1_26;
      6'b011011:
        casez_tmp_4 = pht_1_27;
      6'b011100:
        casez_tmp_4 = pht_1_28;
      6'b011101:
        casez_tmp_4 = pht_1_29;
      6'b011110:
        casez_tmp_4 = pht_1_30;
      6'b011111:
        casez_tmp_4 = pht_1_31;
      6'b100000:
        casez_tmp_4 = pht_1_32;
      6'b100001:
        casez_tmp_4 = pht_1_33;
      6'b100010:
        casez_tmp_4 = pht_1_34;
      6'b100011:
        casez_tmp_4 = pht_1_35;
      6'b100100:
        casez_tmp_4 = pht_1_36;
      6'b100101:
        casez_tmp_4 = pht_1_37;
      6'b100110:
        casez_tmp_4 = pht_1_38;
      6'b100111:
        casez_tmp_4 = pht_1_39;
      6'b101000:
        casez_tmp_4 = pht_1_40;
      6'b101001:
        casez_tmp_4 = pht_1_41;
      6'b101010:
        casez_tmp_4 = pht_1_42;
      6'b101011:
        casez_tmp_4 = pht_1_43;
      6'b101100:
        casez_tmp_4 = pht_1_44;
      6'b101101:
        casez_tmp_4 = pht_1_45;
      6'b101110:
        casez_tmp_4 = pht_1_46;
      6'b101111:
        casez_tmp_4 = pht_1_47;
      6'b110000:
        casez_tmp_4 = pht_1_48;
      6'b110001:
        casez_tmp_4 = pht_1_49;
      6'b110010:
        casez_tmp_4 = pht_1_50;
      6'b110011:
        casez_tmp_4 = pht_1_51;
      6'b110100:
        casez_tmp_4 = pht_1_52;
      6'b110101:
        casez_tmp_4 = pht_1_53;
      6'b110110:
        casez_tmp_4 = pht_1_54;
      6'b110111:
        casez_tmp_4 = pht_1_55;
      6'b111000:
        casez_tmp_4 = pht_1_56;
      6'b111001:
        casez_tmp_4 = pht_1_57;
      6'b111010:
        casez_tmp_4 = pht_1_58;
      6'b111011:
        casez_tmp_4 = pht_1_59;
      6'b111100:
        casez_tmp_4 = pht_1_60;
      6'b111101:
        casez_tmp_4 = pht_1_61;
      6'b111110:
        casez_tmp_4 = pht_1_62;
      default:
        casez_tmp_4 = pht_1_63;
    endcase
  end // always_comb
  always_comb begin
    casez ({casez_tmp_1 ^ io_pc[9:6], io_pc[5:4]})
      6'b000000:
        casez_tmp_5 = pht_2_0;
      6'b000001:
        casez_tmp_5 = pht_2_1;
      6'b000010:
        casez_tmp_5 = pht_2_2;
      6'b000011:
        casez_tmp_5 = pht_2_3;
      6'b000100:
        casez_tmp_5 = pht_2_4;
      6'b000101:
        casez_tmp_5 = pht_2_5;
      6'b000110:
        casez_tmp_5 = pht_2_6;
      6'b000111:
        casez_tmp_5 = pht_2_7;
      6'b001000:
        casez_tmp_5 = pht_2_8;
      6'b001001:
        casez_tmp_5 = pht_2_9;
      6'b001010:
        casez_tmp_5 = pht_2_10;
      6'b001011:
        casez_tmp_5 = pht_2_11;
      6'b001100:
        casez_tmp_5 = pht_2_12;
      6'b001101:
        casez_tmp_5 = pht_2_13;
      6'b001110:
        casez_tmp_5 = pht_2_14;
      6'b001111:
        casez_tmp_5 = pht_2_15;
      6'b010000:
        casez_tmp_5 = pht_2_16;
      6'b010001:
        casez_tmp_5 = pht_2_17;
      6'b010010:
        casez_tmp_5 = pht_2_18;
      6'b010011:
        casez_tmp_5 = pht_2_19;
      6'b010100:
        casez_tmp_5 = pht_2_20;
      6'b010101:
        casez_tmp_5 = pht_2_21;
      6'b010110:
        casez_tmp_5 = pht_2_22;
      6'b010111:
        casez_tmp_5 = pht_2_23;
      6'b011000:
        casez_tmp_5 = pht_2_24;
      6'b011001:
        casez_tmp_5 = pht_2_25;
      6'b011010:
        casez_tmp_5 = pht_2_26;
      6'b011011:
        casez_tmp_5 = pht_2_27;
      6'b011100:
        casez_tmp_5 = pht_2_28;
      6'b011101:
        casez_tmp_5 = pht_2_29;
      6'b011110:
        casez_tmp_5 = pht_2_30;
      6'b011111:
        casez_tmp_5 = pht_2_31;
      6'b100000:
        casez_tmp_5 = pht_2_32;
      6'b100001:
        casez_tmp_5 = pht_2_33;
      6'b100010:
        casez_tmp_5 = pht_2_34;
      6'b100011:
        casez_tmp_5 = pht_2_35;
      6'b100100:
        casez_tmp_5 = pht_2_36;
      6'b100101:
        casez_tmp_5 = pht_2_37;
      6'b100110:
        casez_tmp_5 = pht_2_38;
      6'b100111:
        casez_tmp_5 = pht_2_39;
      6'b101000:
        casez_tmp_5 = pht_2_40;
      6'b101001:
        casez_tmp_5 = pht_2_41;
      6'b101010:
        casez_tmp_5 = pht_2_42;
      6'b101011:
        casez_tmp_5 = pht_2_43;
      6'b101100:
        casez_tmp_5 = pht_2_44;
      6'b101101:
        casez_tmp_5 = pht_2_45;
      6'b101110:
        casez_tmp_5 = pht_2_46;
      6'b101111:
        casez_tmp_5 = pht_2_47;
      6'b110000:
        casez_tmp_5 = pht_2_48;
      6'b110001:
        casez_tmp_5 = pht_2_49;
      6'b110010:
        casez_tmp_5 = pht_2_50;
      6'b110011:
        casez_tmp_5 = pht_2_51;
      6'b110100:
        casez_tmp_5 = pht_2_52;
      6'b110101:
        casez_tmp_5 = pht_2_53;
      6'b110110:
        casez_tmp_5 = pht_2_54;
      6'b110111:
        casez_tmp_5 = pht_2_55;
      6'b111000:
        casez_tmp_5 = pht_2_56;
      6'b111001:
        casez_tmp_5 = pht_2_57;
      6'b111010:
        casez_tmp_5 = pht_2_58;
      6'b111011:
        casez_tmp_5 = pht_2_59;
      6'b111100:
        casez_tmp_5 = pht_2_60;
      6'b111101:
        casez_tmp_5 = pht_2_61;
      6'b111110:
        casez_tmp_5 = pht_2_62;
      default:
        casez_tmp_5 = pht_2_63;
    endcase
  end // always_comb
  always_comb begin
    casez ({casez_tmp_2 ^ io_pc[9:6], io_pc[5:4]})
      6'b000000:
        casez_tmp_6 = pht_3_0;
      6'b000001:
        casez_tmp_6 = pht_3_1;
      6'b000010:
        casez_tmp_6 = pht_3_2;
      6'b000011:
        casez_tmp_6 = pht_3_3;
      6'b000100:
        casez_tmp_6 = pht_3_4;
      6'b000101:
        casez_tmp_6 = pht_3_5;
      6'b000110:
        casez_tmp_6 = pht_3_6;
      6'b000111:
        casez_tmp_6 = pht_3_7;
      6'b001000:
        casez_tmp_6 = pht_3_8;
      6'b001001:
        casez_tmp_6 = pht_3_9;
      6'b001010:
        casez_tmp_6 = pht_3_10;
      6'b001011:
        casez_tmp_6 = pht_3_11;
      6'b001100:
        casez_tmp_6 = pht_3_12;
      6'b001101:
        casez_tmp_6 = pht_3_13;
      6'b001110:
        casez_tmp_6 = pht_3_14;
      6'b001111:
        casez_tmp_6 = pht_3_15;
      6'b010000:
        casez_tmp_6 = pht_3_16;
      6'b010001:
        casez_tmp_6 = pht_3_17;
      6'b010010:
        casez_tmp_6 = pht_3_18;
      6'b010011:
        casez_tmp_6 = pht_3_19;
      6'b010100:
        casez_tmp_6 = pht_3_20;
      6'b010101:
        casez_tmp_6 = pht_3_21;
      6'b010110:
        casez_tmp_6 = pht_3_22;
      6'b010111:
        casez_tmp_6 = pht_3_23;
      6'b011000:
        casez_tmp_6 = pht_3_24;
      6'b011001:
        casez_tmp_6 = pht_3_25;
      6'b011010:
        casez_tmp_6 = pht_3_26;
      6'b011011:
        casez_tmp_6 = pht_3_27;
      6'b011100:
        casez_tmp_6 = pht_3_28;
      6'b011101:
        casez_tmp_6 = pht_3_29;
      6'b011110:
        casez_tmp_6 = pht_3_30;
      6'b011111:
        casez_tmp_6 = pht_3_31;
      6'b100000:
        casez_tmp_6 = pht_3_32;
      6'b100001:
        casez_tmp_6 = pht_3_33;
      6'b100010:
        casez_tmp_6 = pht_3_34;
      6'b100011:
        casez_tmp_6 = pht_3_35;
      6'b100100:
        casez_tmp_6 = pht_3_36;
      6'b100101:
        casez_tmp_6 = pht_3_37;
      6'b100110:
        casez_tmp_6 = pht_3_38;
      6'b100111:
        casez_tmp_6 = pht_3_39;
      6'b101000:
        casez_tmp_6 = pht_3_40;
      6'b101001:
        casez_tmp_6 = pht_3_41;
      6'b101010:
        casez_tmp_6 = pht_3_42;
      6'b101011:
        casez_tmp_6 = pht_3_43;
      6'b101100:
        casez_tmp_6 = pht_3_44;
      6'b101101:
        casez_tmp_6 = pht_3_45;
      6'b101110:
        casez_tmp_6 = pht_3_46;
      6'b101111:
        casez_tmp_6 = pht_3_47;
      6'b110000:
        casez_tmp_6 = pht_3_48;
      6'b110001:
        casez_tmp_6 = pht_3_49;
      6'b110010:
        casez_tmp_6 = pht_3_50;
      6'b110011:
        casez_tmp_6 = pht_3_51;
      6'b110100:
        casez_tmp_6 = pht_3_52;
      6'b110101:
        casez_tmp_6 = pht_3_53;
      6'b110110:
        casez_tmp_6 = pht_3_54;
      6'b110111:
        casez_tmp_6 = pht_3_55;
      6'b111000:
        casez_tmp_6 = pht_3_56;
      6'b111001:
        casez_tmp_6 = pht_3_57;
      6'b111010:
        casez_tmp_6 = pht_3_58;
      6'b111011:
        casez_tmp_6 = pht_3_59;
      6'b111100:
        casez_tmp_6 = pht_3_60;
      6'b111101:
        casez_tmp_6 = pht_3_61;
      6'b111110:
        casez_tmp_6 = pht_3_62;
      default:
        casez_tmp_6 = pht_3_63;
    endcase
  end // always_comb
  wire        predict_jump_0 =
    casez_tmp_3[1] & btb_rdata_0_valid & btb_rdata_0_tag == io_pc[31:12];
  wire        predict_jump_1 =
    casez_tmp_4[1] & btb_rdata_1_valid & btb_rdata_1_tag == io_pc[31:12];
  wire        predict_jump_2 =
    casez_tmp_5[1] & btb_rdata_2_valid & btb_rdata_2_tag == io_pc[31:12];
  wire        predict_jump_3 =
    casez_tmp_6[1] & btb_rdata_3_valid & btb_rdata_3_tag == io_pc[31:12];
  wire [6:0]  _pred_valid_T_1 = 7'h1 << io_pc[3:2];
  wire [3:0]  pred_valid = ~(_pred_valid_T_1[3:0] - 4'h1);
  wire        _pred_hit_index_T = pred_valid[0] & predict_jump_0;
  wire        _pred_hit_index_T_1 = pred_valid[1] & predict_jump_1;
  wire        _pred_hit_index_T_2 = pred_valid[2] & predict_jump_2;
  wire [1:0]  pred_hit_index =
    _pred_hit_index_T ? 2'h0 : _pred_hit_index_T_1 ? 2'h1 : {1'h1, ~_pred_hit_index_T_2};
  wire [3:0]  _GEN = {2'h0, io_pc[3:2]};
  wire [3:0]  _GEN_0 =
    ((|(pred_valid & {predict_jump_3, predict_jump_2, predict_jump_1, predict_jump_0}))
       ? (_pred_hit_index_T
            ? 4'h1
            : _pred_hit_index_T_1
                ? 4'h2
                : _pred_hit_index_T_2 ? 4'h4 : {pred_valid[3] & predict_jump_3, 3'h0})
       : 4'h0) >> _GEN;
  wire [3:0]  _GEN_1 =
    (pred_valid
     & {btb_rdata_3_valid & btb_rdata_3_tag == io_pc[31:12],
        btb_rdata_2_valid & btb_rdata_2_tag == io_pc[31:12],
        btb_rdata_1_valid & btb_rdata_1_tag == io_pc[31:12],
        btb_rdata_0_valid & btb_rdata_0_tag == io_pc[31:12]}) >> _GEN;
  always_comb begin
    casez (pred_hit_index)
      2'b00:
        casez_tmp_7 = _xilinx_simple_dual_port_1_clock_ram_4_doutb[31:2];
      2'b01:
        casez_tmp_7 = _xilinx_simple_dual_port_1_clock_ram_5_doutb[31:2];
      2'b10:
        casez_tmp_7 = _xilinx_simple_dual_port_1_clock_ram_6_doutb[31:2];
      default:
        casez_tmp_7 = _xilinx_simple_dual_port_1_clock_ram_7_doutb[31:2];
    endcase
  end // always_comb
  always_comb begin
    casez (pred_hit_index)
      2'b00:
        casez_tmp_8 = _xilinx_simple_dual_port_1_clock_ram_4_doutb[1:0];
      2'b01:
        casez_tmp_8 = _xilinx_simple_dual_port_1_clock_ram_5_doutb[1:0];
      2'b10:
        casez_tmp_8 = _xilinx_simple_dual_port_1_clock_ram_6_doutb[1:0];
      default:
        casez_tmp_8 = _xilinx_simple_dual_port_1_clock_ram_7_doutb[1:0];
    endcase
  end // always_comb
  wire        _io_pred_npc_T = casez_tmp_8 == 2'h1;
  wire [3:0]  _top_T_4 = top - 4'h1;
  always_comb begin
    casez (_top_T_4)
      4'b0000:
        casez_tmp_9 = ras_0;
      4'b0001:
        casez_tmp_9 = ras_1;
      4'b0010:
        casez_tmp_9 = ras_2;
      4'b0011:
        casez_tmp_9 = ras_3;
      4'b0100:
        casez_tmp_9 = ras_4;
      4'b0101:
        casez_tmp_9 = ras_5;
      4'b0110:
        casez_tmp_9 = ras_6;
      4'b0111:
        casez_tmp_9 = ras_7;
      4'b1000:
        casez_tmp_9 = ras_8;
      4'b1001:
        casez_tmp_9 = ras_9;
      4'b1010:
        casez_tmp_9 = ras_10;
      4'b1011:
        casez_tmp_9 = ras_11;
      4'b1100:
        casez_tmp_9 = ras_12;
      4'b1101:
        casez_tmp_9 = ras_13;
      4'b1110:
        casez_tmp_9 = ras_14;
      default:
        casez_tmp_9 = ras_15;
    endcase
  end // always_comb
  wire        _btb_targ_0_wea_T = io_pc_cmt[3:2] == 2'h0;
  assign btb_rdata_0_valid = _xilinx_simple_dual_port_1_clock_ram_doutb[20];
  assign btb_rdata_0_tag = _xilinx_simple_dual_port_1_clock_ram_doutb[19:0];
  wire        _btb_targ_1_wea_T = io_pc_cmt[3:2] == 2'h1;
  assign btb_rdata_1_valid = _xilinx_simple_dual_port_1_clock_ram_1_doutb[20];
  assign btb_rdata_1_tag = _xilinx_simple_dual_port_1_clock_ram_1_doutb[19:0];
  wire        _btb_targ_2_wea_T = io_pc_cmt[3:2] == 2'h2;
  assign btb_rdata_2_valid = _xilinx_simple_dual_port_1_clock_ram_2_doutb[20];
  assign btb_rdata_2_tag = _xilinx_simple_dual_port_1_clock_ram_2_doutb[19:0];
  assign btb_rdata_3_valid = _xilinx_simple_dual_port_1_clock_ram_3_doutb[20];
  assign btb_rdata_3_tag = _xilinx_simple_dual_port_1_clock_ram_3_doutb[19:0];
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_10 = bht_0_0;
      2'b01:
        casez_tmp_10 = bht_1_0;
      2'b10:
        casez_tmp_10 = bht_2_0;
      default:
        casez_tmp_10 = bht_3_0;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_11 = bht_0_1;
      2'b01:
        casez_tmp_11 = bht_1_1;
      2'b10:
        casez_tmp_11 = bht_2_1;
      default:
        casez_tmp_11 = bht_3_1;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_12 = bht_0_2;
      2'b01:
        casez_tmp_12 = bht_1_2;
      2'b10:
        casez_tmp_12 = bht_2_2;
      default:
        casez_tmp_12 = bht_3_2;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_13 = bht_0_3;
      2'b01:
        casez_tmp_13 = bht_1_3;
      2'b10:
        casez_tmp_13 = bht_2_3;
      default:
        casez_tmp_13 = bht_3_3;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_14 = bht_0_4;
      2'b01:
        casez_tmp_14 = bht_1_4;
      2'b10:
        casez_tmp_14 = bht_2_4;
      default:
        casez_tmp_14 = bht_3_4;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_15 = bht_0_5;
      2'b01:
        casez_tmp_15 = bht_1_5;
      2'b10:
        casez_tmp_15 = bht_2_5;
      default:
        casez_tmp_15 = bht_3_5;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_16 = bht_0_6;
      2'b01:
        casez_tmp_16 = bht_1_6;
      2'b10:
        casez_tmp_16 = bht_2_6;
      default:
        casez_tmp_16 = bht_3_6;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_17 = bht_0_7;
      2'b01:
        casez_tmp_17 = bht_1_7;
      2'b10:
        casez_tmp_17 = bht_2_7;
      default:
        casez_tmp_17 = bht_3_7;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_18 = bht_0_8;
      2'b01:
        casez_tmp_18 = bht_1_8;
      2'b10:
        casez_tmp_18 = bht_2_8;
      default:
        casez_tmp_18 = bht_3_8;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_19 = bht_0_9;
      2'b01:
        casez_tmp_19 = bht_1_9;
      2'b10:
        casez_tmp_19 = bht_2_9;
      default:
        casez_tmp_19 = bht_3_9;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_20 = bht_0_10;
      2'b01:
        casez_tmp_20 = bht_1_10;
      2'b10:
        casez_tmp_20 = bht_2_10;
      default:
        casez_tmp_20 = bht_3_10;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_21 = bht_0_11;
      2'b01:
        casez_tmp_21 = bht_1_11;
      2'b10:
        casez_tmp_21 = bht_2_11;
      default:
        casez_tmp_21 = bht_3_11;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_22 = bht_0_12;
      2'b01:
        casez_tmp_22 = bht_1_12;
      2'b10:
        casez_tmp_22 = bht_2_12;
      default:
        casez_tmp_22 = bht_3_12;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_23 = bht_0_13;
      2'b01:
        casez_tmp_23 = bht_1_13;
      2'b10:
        casez_tmp_23 = bht_2_13;
      default:
        casez_tmp_23 = bht_3_13;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_24 = bht_0_14;
      2'b01:
        casez_tmp_24 = bht_1_14;
      2'b10:
        casez_tmp_24 = bht_2_14;
      default:
        casez_tmp_24 = bht_3_14;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_25 = bht_0_15;
      2'b01:
        casez_tmp_25 = bht_1_15;
      2'b10:
        casez_tmp_25 = bht_2_15;
      default:
        casez_tmp_25 = bht_3_15;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[7:4])
      4'b0000:
        casez_tmp_26 = casez_tmp_10;
      4'b0001:
        casez_tmp_26 = casez_tmp_11;
      4'b0010:
        casez_tmp_26 = casez_tmp_12;
      4'b0011:
        casez_tmp_26 = casez_tmp_13;
      4'b0100:
        casez_tmp_26 = casez_tmp_14;
      4'b0101:
        casez_tmp_26 = casez_tmp_15;
      4'b0110:
        casez_tmp_26 = casez_tmp_16;
      4'b0111:
        casez_tmp_26 = casez_tmp_17;
      4'b1000:
        casez_tmp_26 = casez_tmp_18;
      4'b1001:
        casez_tmp_26 = casez_tmp_19;
      4'b1010:
        casez_tmp_26 = casez_tmp_20;
      4'b1011:
        casez_tmp_26 = casez_tmp_21;
      4'b1100:
        casez_tmp_26 = casez_tmp_22;
      4'b1101:
        casez_tmp_26 = casez_tmp_23;
      4'b1110:
        casez_tmp_26 = casez_tmp_24;
      default:
        casez_tmp_26 = casez_tmp_25;
    endcase
  end // always_comb
  wire [5:0]  pht_windex = {casez_tmp_26 ^ io_pc_cmt[9:6], io_pc_cmt[5:4]};
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_27 = pht_0_0;
      2'b01:
        casez_tmp_27 = pht_1_0;
      2'b10:
        casez_tmp_27 = pht_2_0;
      default:
        casez_tmp_27 = pht_3_0;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_28 = pht_0_1;
      2'b01:
        casez_tmp_28 = pht_1_1;
      2'b10:
        casez_tmp_28 = pht_2_1;
      default:
        casez_tmp_28 = pht_3_1;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_29 = pht_0_2;
      2'b01:
        casez_tmp_29 = pht_1_2;
      2'b10:
        casez_tmp_29 = pht_2_2;
      default:
        casez_tmp_29 = pht_3_2;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_30 = pht_0_3;
      2'b01:
        casez_tmp_30 = pht_1_3;
      2'b10:
        casez_tmp_30 = pht_2_3;
      default:
        casez_tmp_30 = pht_3_3;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_31 = pht_0_4;
      2'b01:
        casez_tmp_31 = pht_1_4;
      2'b10:
        casez_tmp_31 = pht_2_4;
      default:
        casez_tmp_31 = pht_3_4;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_32 = pht_0_5;
      2'b01:
        casez_tmp_32 = pht_1_5;
      2'b10:
        casez_tmp_32 = pht_2_5;
      default:
        casez_tmp_32 = pht_3_5;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_33 = pht_0_6;
      2'b01:
        casez_tmp_33 = pht_1_6;
      2'b10:
        casez_tmp_33 = pht_2_6;
      default:
        casez_tmp_33 = pht_3_6;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_34 = pht_0_7;
      2'b01:
        casez_tmp_34 = pht_1_7;
      2'b10:
        casez_tmp_34 = pht_2_7;
      default:
        casez_tmp_34 = pht_3_7;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_35 = pht_0_8;
      2'b01:
        casez_tmp_35 = pht_1_8;
      2'b10:
        casez_tmp_35 = pht_2_8;
      default:
        casez_tmp_35 = pht_3_8;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_36 = pht_0_9;
      2'b01:
        casez_tmp_36 = pht_1_9;
      2'b10:
        casez_tmp_36 = pht_2_9;
      default:
        casez_tmp_36 = pht_3_9;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_37 = pht_0_10;
      2'b01:
        casez_tmp_37 = pht_1_10;
      2'b10:
        casez_tmp_37 = pht_2_10;
      default:
        casez_tmp_37 = pht_3_10;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_38 = pht_0_11;
      2'b01:
        casez_tmp_38 = pht_1_11;
      2'b10:
        casez_tmp_38 = pht_2_11;
      default:
        casez_tmp_38 = pht_3_11;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_39 = pht_0_12;
      2'b01:
        casez_tmp_39 = pht_1_12;
      2'b10:
        casez_tmp_39 = pht_2_12;
      default:
        casez_tmp_39 = pht_3_12;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_40 = pht_0_13;
      2'b01:
        casez_tmp_40 = pht_1_13;
      2'b10:
        casez_tmp_40 = pht_2_13;
      default:
        casez_tmp_40 = pht_3_13;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_41 = pht_0_14;
      2'b01:
        casez_tmp_41 = pht_1_14;
      2'b10:
        casez_tmp_41 = pht_2_14;
      default:
        casez_tmp_41 = pht_3_14;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_42 = pht_0_15;
      2'b01:
        casez_tmp_42 = pht_1_15;
      2'b10:
        casez_tmp_42 = pht_2_15;
      default:
        casez_tmp_42 = pht_3_15;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_43 = pht_0_16;
      2'b01:
        casez_tmp_43 = pht_1_16;
      2'b10:
        casez_tmp_43 = pht_2_16;
      default:
        casez_tmp_43 = pht_3_16;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_44 = pht_0_17;
      2'b01:
        casez_tmp_44 = pht_1_17;
      2'b10:
        casez_tmp_44 = pht_2_17;
      default:
        casez_tmp_44 = pht_3_17;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_45 = pht_0_18;
      2'b01:
        casez_tmp_45 = pht_1_18;
      2'b10:
        casez_tmp_45 = pht_2_18;
      default:
        casez_tmp_45 = pht_3_18;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_46 = pht_0_19;
      2'b01:
        casez_tmp_46 = pht_1_19;
      2'b10:
        casez_tmp_46 = pht_2_19;
      default:
        casez_tmp_46 = pht_3_19;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_47 = pht_0_20;
      2'b01:
        casez_tmp_47 = pht_1_20;
      2'b10:
        casez_tmp_47 = pht_2_20;
      default:
        casez_tmp_47 = pht_3_20;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_48 = pht_0_21;
      2'b01:
        casez_tmp_48 = pht_1_21;
      2'b10:
        casez_tmp_48 = pht_2_21;
      default:
        casez_tmp_48 = pht_3_21;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_49 = pht_0_22;
      2'b01:
        casez_tmp_49 = pht_1_22;
      2'b10:
        casez_tmp_49 = pht_2_22;
      default:
        casez_tmp_49 = pht_3_22;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_50 = pht_0_23;
      2'b01:
        casez_tmp_50 = pht_1_23;
      2'b10:
        casez_tmp_50 = pht_2_23;
      default:
        casez_tmp_50 = pht_3_23;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_51 = pht_0_24;
      2'b01:
        casez_tmp_51 = pht_1_24;
      2'b10:
        casez_tmp_51 = pht_2_24;
      default:
        casez_tmp_51 = pht_3_24;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_52 = pht_0_25;
      2'b01:
        casez_tmp_52 = pht_1_25;
      2'b10:
        casez_tmp_52 = pht_2_25;
      default:
        casez_tmp_52 = pht_3_25;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_53 = pht_0_26;
      2'b01:
        casez_tmp_53 = pht_1_26;
      2'b10:
        casez_tmp_53 = pht_2_26;
      default:
        casez_tmp_53 = pht_3_26;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_54 = pht_0_27;
      2'b01:
        casez_tmp_54 = pht_1_27;
      2'b10:
        casez_tmp_54 = pht_2_27;
      default:
        casez_tmp_54 = pht_3_27;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_55 = pht_0_28;
      2'b01:
        casez_tmp_55 = pht_1_28;
      2'b10:
        casez_tmp_55 = pht_2_28;
      default:
        casez_tmp_55 = pht_3_28;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_56 = pht_0_29;
      2'b01:
        casez_tmp_56 = pht_1_29;
      2'b10:
        casez_tmp_56 = pht_2_29;
      default:
        casez_tmp_56 = pht_3_29;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_57 = pht_0_30;
      2'b01:
        casez_tmp_57 = pht_1_30;
      2'b10:
        casez_tmp_57 = pht_2_30;
      default:
        casez_tmp_57 = pht_3_30;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_58 = pht_0_31;
      2'b01:
        casez_tmp_58 = pht_1_31;
      2'b10:
        casez_tmp_58 = pht_2_31;
      default:
        casez_tmp_58 = pht_3_31;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_59 = pht_0_32;
      2'b01:
        casez_tmp_59 = pht_1_32;
      2'b10:
        casez_tmp_59 = pht_2_32;
      default:
        casez_tmp_59 = pht_3_32;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_60 = pht_0_33;
      2'b01:
        casez_tmp_60 = pht_1_33;
      2'b10:
        casez_tmp_60 = pht_2_33;
      default:
        casez_tmp_60 = pht_3_33;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_61 = pht_0_34;
      2'b01:
        casez_tmp_61 = pht_1_34;
      2'b10:
        casez_tmp_61 = pht_2_34;
      default:
        casez_tmp_61 = pht_3_34;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_62 = pht_0_35;
      2'b01:
        casez_tmp_62 = pht_1_35;
      2'b10:
        casez_tmp_62 = pht_2_35;
      default:
        casez_tmp_62 = pht_3_35;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_63 = pht_0_36;
      2'b01:
        casez_tmp_63 = pht_1_36;
      2'b10:
        casez_tmp_63 = pht_2_36;
      default:
        casez_tmp_63 = pht_3_36;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_64 = pht_0_37;
      2'b01:
        casez_tmp_64 = pht_1_37;
      2'b10:
        casez_tmp_64 = pht_2_37;
      default:
        casez_tmp_64 = pht_3_37;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_65 = pht_0_38;
      2'b01:
        casez_tmp_65 = pht_1_38;
      2'b10:
        casez_tmp_65 = pht_2_38;
      default:
        casez_tmp_65 = pht_3_38;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_66 = pht_0_39;
      2'b01:
        casez_tmp_66 = pht_1_39;
      2'b10:
        casez_tmp_66 = pht_2_39;
      default:
        casez_tmp_66 = pht_3_39;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_67 = pht_0_40;
      2'b01:
        casez_tmp_67 = pht_1_40;
      2'b10:
        casez_tmp_67 = pht_2_40;
      default:
        casez_tmp_67 = pht_3_40;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_68 = pht_0_41;
      2'b01:
        casez_tmp_68 = pht_1_41;
      2'b10:
        casez_tmp_68 = pht_2_41;
      default:
        casez_tmp_68 = pht_3_41;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_69 = pht_0_42;
      2'b01:
        casez_tmp_69 = pht_1_42;
      2'b10:
        casez_tmp_69 = pht_2_42;
      default:
        casez_tmp_69 = pht_3_42;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_70 = pht_0_43;
      2'b01:
        casez_tmp_70 = pht_1_43;
      2'b10:
        casez_tmp_70 = pht_2_43;
      default:
        casez_tmp_70 = pht_3_43;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_71 = pht_0_44;
      2'b01:
        casez_tmp_71 = pht_1_44;
      2'b10:
        casez_tmp_71 = pht_2_44;
      default:
        casez_tmp_71 = pht_3_44;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_72 = pht_0_45;
      2'b01:
        casez_tmp_72 = pht_1_45;
      2'b10:
        casez_tmp_72 = pht_2_45;
      default:
        casez_tmp_72 = pht_3_45;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_73 = pht_0_46;
      2'b01:
        casez_tmp_73 = pht_1_46;
      2'b10:
        casez_tmp_73 = pht_2_46;
      default:
        casez_tmp_73 = pht_3_46;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_74 = pht_0_47;
      2'b01:
        casez_tmp_74 = pht_1_47;
      2'b10:
        casez_tmp_74 = pht_2_47;
      default:
        casez_tmp_74 = pht_3_47;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_75 = pht_0_48;
      2'b01:
        casez_tmp_75 = pht_1_48;
      2'b10:
        casez_tmp_75 = pht_2_48;
      default:
        casez_tmp_75 = pht_3_48;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_76 = pht_0_49;
      2'b01:
        casez_tmp_76 = pht_1_49;
      2'b10:
        casez_tmp_76 = pht_2_49;
      default:
        casez_tmp_76 = pht_3_49;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_77 = pht_0_50;
      2'b01:
        casez_tmp_77 = pht_1_50;
      2'b10:
        casez_tmp_77 = pht_2_50;
      default:
        casez_tmp_77 = pht_3_50;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_78 = pht_0_51;
      2'b01:
        casez_tmp_78 = pht_1_51;
      2'b10:
        casez_tmp_78 = pht_2_51;
      default:
        casez_tmp_78 = pht_3_51;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_79 = pht_0_52;
      2'b01:
        casez_tmp_79 = pht_1_52;
      2'b10:
        casez_tmp_79 = pht_2_52;
      default:
        casez_tmp_79 = pht_3_52;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_80 = pht_0_53;
      2'b01:
        casez_tmp_80 = pht_1_53;
      2'b10:
        casez_tmp_80 = pht_2_53;
      default:
        casez_tmp_80 = pht_3_53;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_81 = pht_0_54;
      2'b01:
        casez_tmp_81 = pht_1_54;
      2'b10:
        casez_tmp_81 = pht_2_54;
      default:
        casez_tmp_81 = pht_3_54;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_82 = pht_0_55;
      2'b01:
        casez_tmp_82 = pht_1_55;
      2'b10:
        casez_tmp_82 = pht_2_55;
      default:
        casez_tmp_82 = pht_3_55;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_83 = pht_0_56;
      2'b01:
        casez_tmp_83 = pht_1_56;
      2'b10:
        casez_tmp_83 = pht_2_56;
      default:
        casez_tmp_83 = pht_3_56;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_84 = pht_0_57;
      2'b01:
        casez_tmp_84 = pht_1_57;
      2'b10:
        casez_tmp_84 = pht_2_57;
      default:
        casez_tmp_84 = pht_3_57;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_85 = pht_0_58;
      2'b01:
        casez_tmp_85 = pht_1_58;
      2'b10:
        casez_tmp_85 = pht_2_58;
      default:
        casez_tmp_85 = pht_3_58;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_86 = pht_0_59;
      2'b01:
        casez_tmp_86 = pht_1_59;
      2'b10:
        casez_tmp_86 = pht_2_59;
      default:
        casez_tmp_86 = pht_3_59;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_87 = pht_0_60;
      2'b01:
        casez_tmp_87 = pht_1_60;
      2'b10:
        casez_tmp_87 = pht_2_60;
      default:
        casez_tmp_87 = pht_3_60;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_88 = pht_0_61;
      2'b01:
        casez_tmp_88 = pht_1_61;
      2'b10:
        casez_tmp_88 = pht_2_61;
      default:
        casez_tmp_88 = pht_3_61;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_89 = pht_0_62;
      2'b01:
        casez_tmp_89 = pht_1_62;
      2'b10:
        casez_tmp_89 = pht_2_62;
      default:
        casez_tmp_89 = pht_3_62;
    endcase
  end // always_comb
  always_comb begin
    casez (io_pc_cmt[3:2])
      2'b00:
        casez_tmp_90 = pht_0_63;
      2'b01:
        casez_tmp_90 = pht_1_63;
      2'b10:
        casez_tmp_90 = pht_2_63;
      default:
        casez_tmp_90 = pht_3_63;
    endcase
  end // always_comb
  always_comb begin
    casez (pht_windex)
      6'b000000:
        casez_tmp_91 = casez_tmp_27;
      6'b000001:
        casez_tmp_91 = casez_tmp_28;
      6'b000010:
        casez_tmp_91 = casez_tmp_29;
      6'b000011:
        casez_tmp_91 = casez_tmp_30;
      6'b000100:
        casez_tmp_91 = casez_tmp_31;
      6'b000101:
        casez_tmp_91 = casez_tmp_32;
      6'b000110:
        casez_tmp_91 = casez_tmp_33;
      6'b000111:
        casez_tmp_91 = casez_tmp_34;
      6'b001000:
        casez_tmp_91 = casez_tmp_35;
      6'b001001:
        casez_tmp_91 = casez_tmp_36;
      6'b001010:
        casez_tmp_91 = casez_tmp_37;
      6'b001011:
        casez_tmp_91 = casez_tmp_38;
      6'b001100:
        casez_tmp_91 = casez_tmp_39;
      6'b001101:
        casez_tmp_91 = casez_tmp_40;
      6'b001110:
        casez_tmp_91 = casez_tmp_41;
      6'b001111:
        casez_tmp_91 = casez_tmp_42;
      6'b010000:
        casez_tmp_91 = casez_tmp_43;
      6'b010001:
        casez_tmp_91 = casez_tmp_44;
      6'b010010:
        casez_tmp_91 = casez_tmp_45;
      6'b010011:
        casez_tmp_91 = casez_tmp_46;
      6'b010100:
        casez_tmp_91 = casez_tmp_47;
      6'b010101:
        casez_tmp_91 = casez_tmp_48;
      6'b010110:
        casez_tmp_91 = casez_tmp_49;
      6'b010111:
        casez_tmp_91 = casez_tmp_50;
      6'b011000:
        casez_tmp_91 = casez_tmp_51;
      6'b011001:
        casez_tmp_91 = casez_tmp_52;
      6'b011010:
        casez_tmp_91 = casez_tmp_53;
      6'b011011:
        casez_tmp_91 = casez_tmp_54;
      6'b011100:
        casez_tmp_91 = casez_tmp_55;
      6'b011101:
        casez_tmp_91 = casez_tmp_56;
      6'b011110:
        casez_tmp_91 = casez_tmp_57;
      6'b011111:
        casez_tmp_91 = casez_tmp_58;
      6'b100000:
        casez_tmp_91 = casez_tmp_59;
      6'b100001:
        casez_tmp_91 = casez_tmp_60;
      6'b100010:
        casez_tmp_91 = casez_tmp_61;
      6'b100011:
        casez_tmp_91 = casez_tmp_62;
      6'b100100:
        casez_tmp_91 = casez_tmp_63;
      6'b100101:
        casez_tmp_91 = casez_tmp_64;
      6'b100110:
        casez_tmp_91 = casez_tmp_65;
      6'b100111:
        casez_tmp_91 = casez_tmp_66;
      6'b101000:
        casez_tmp_91 = casez_tmp_67;
      6'b101001:
        casez_tmp_91 = casez_tmp_68;
      6'b101010:
        casez_tmp_91 = casez_tmp_69;
      6'b101011:
        casez_tmp_91 = casez_tmp_70;
      6'b101100:
        casez_tmp_91 = casez_tmp_71;
      6'b101101:
        casez_tmp_91 = casez_tmp_72;
      6'b101110:
        casez_tmp_91 = casez_tmp_73;
      6'b101111:
        casez_tmp_91 = casez_tmp_74;
      6'b110000:
        casez_tmp_91 = casez_tmp_75;
      6'b110001:
        casez_tmp_91 = casez_tmp_76;
      6'b110010:
        casez_tmp_91 = casez_tmp_77;
      6'b110011:
        casez_tmp_91 = casez_tmp_78;
      6'b110100:
        casez_tmp_91 = casez_tmp_79;
      6'b110101:
        casez_tmp_91 = casez_tmp_80;
      6'b110110:
        casez_tmp_91 = casez_tmp_81;
      6'b110111:
        casez_tmp_91 = casez_tmp_82;
      6'b111000:
        casez_tmp_91 = casez_tmp_83;
      6'b111001:
        casez_tmp_91 = casez_tmp_84;
      6'b111010:
        casez_tmp_91 = casez_tmp_85;
      6'b111011:
        casez_tmp_91 = casez_tmp_86;
      6'b111100:
        casez_tmp_91 = casez_tmp_87;
      6'b111101:
        casez_tmp_91 = casez_tmp_88;
      6'b111110:
        casez_tmp_91 = casez_tmp_89;
      default:
        casez_tmp_91 = casez_tmp_90;
    endcase
  end // always_comb
  wire        _GEN_2 = casez_tmp_8 == 2'h2;
  wire [31:0] _ras_T_5 = {28'h0, pred_hit_index, 2'h0} + {io_pc[31:4], 4'h0} + 32'h4;
  wire        _GEN_3 = top == 4'h0;
  wire        _GEN_4 = top == 4'h1;
  wire        _GEN_5 = top == 4'h2;
  wire        _GEN_6 = top == 4'h3;
  wire        _GEN_7 = top == 4'h4;
  wire        _GEN_8 = top == 4'h5;
  wire        _GEN_9 = top == 4'h6;
  wire        _GEN_10 = top == 4'h7;
  wire        _GEN_11 = top == 4'h8;
  wire        _GEN_12 = top == 4'h9;
  wire        _GEN_13 = top == 4'hA;
  wire        _GEN_14 = top == 4'hB;
  wire        _GEN_15 = top == 4'hC;
  wire        _GEN_16 = top == 4'hD;
  wire        _GEN_17 = top == 4'hE;
  wire [3:0]  _bht_T_2 = {io_real_jump, casez_tmp_26[3:1]};
  wire        _GEN_18 = io_pc_cmt[3:2] == 2'h0;
  wire        _GEN_19 = io_pc_cmt[7:4] == 4'h0;
  wire        _GEN_20 = io_pc_cmt[7:4] == 4'h1;
  wire        _GEN_21 = io_pc_cmt[7:4] == 4'h2;
  wire        _GEN_22 = io_pc_cmt[7:4] == 4'h3;
  wire        _GEN_23 = io_pc_cmt[7:4] == 4'h4;
  wire        _GEN_24 = io_pc_cmt[7:4] == 4'h5;
  wire        _GEN_25 = io_pc_cmt[7:4] == 4'h6;
  wire        _GEN_26 = io_pc_cmt[7:4] == 4'h7;
  wire        _GEN_27 = io_pc_cmt[7:4] == 4'h8;
  wire        _GEN_28 = io_pc_cmt[7:4] == 4'h9;
  wire        _GEN_29 = io_pc_cmt[7:4] == 4'hA;
  wire        _GEN_30 = io_pc_cmt[7:4] == 4'hB;
  wire        _GEN_31 = io_pc_cmt[7:4] == 4'hC;
  wire        _GEN_32 = io_pc_cmt[7:4] == 4'hD;
  wire        _GEN_33 = io_pc_cmt[7:4] == 4'hE;
  wire        _GEN_34 = io_pc_cmt[3:2] == 2'h1;
  wire        _GEN_35 = io_pc_cmt[3:2] == 2'h2;
  wire [1:0]  _pht_T_3 = casez_tmp_91 + {1'h0, casez_tmp_91 != 2'h3};
  wire [1:0]  _pht_T_8 = casez_tmp_91 - {1'h0, |casez_tmp_91};
  wire        _GEN_36 = pht_windex == 6'h0;
  wire        _GEN_37 = pht_windex == 6'h1;
  wire        _GEN_38 = pht_windex == 6'h2;
  wire        _GEN_39 = pht_windex == 6'h3;
  wire        _GEN_40 = pht_windex == 6'h4;
  wire        _GEN_41 = pht_windex == 6'h5;
  wire        _GEN_42 = pht_windex == 6'h6;
  wire        _GEN_43 = pht_windex == 6'h7;
  wire        _GEN_44 = pht_windex == 6'h8;
  wire        _GEN_45 = pht_windex == 6'h9;
  wire        _GEN_46 = pht_windex == 6'hA;
  wire        _GEN_47 = pht_windex == 6'hB;
  wire        _GEN_48 = pht_windex == 6'hC;
  wire        _GEN_49 = pht_windex == 6'hD;
  wire        _GEN_50 = pht_windex == 6'hE;
  wire        _GEN_51 = pht_windex == 6'hF;
  wire        _GEN_52 = pht_windex == 6'h10;
  wire        _GEN_53 = pht_windex == 6'h11;
  wire        _GEN_54 = pht_windex == 6'h12;
  wire        _GEN_55 = pht_windex == 6'h13;
  wire        _GEN_56 = pht_windex == 6'h14;
  wire        _GEN_57 = pht_windex == 6'h15;
  wire        _GEN_58 = pht_windex == 6'h16;
  wire        _GEN_59 = pht_windex == 6'h17;
  wire        _GEN_60 = pht_windex == 6'h18;
  wire        _GEN_61 = pht_windex == 6'h19;
  wire        _GEN_62 = pht_windex == 6'h1A;
  wire        _GEN_63 = pht_windex == 6'h1B;
  wire        _GEN_64 = pht_windex == 6'h1C;
  wire        _GEN_65 = pht_windex == 6'h1D;
  wire        _GEN_66 = pht_windex == 6'h1E;
  wire        _GEN_67 = pht_windex == 6'h1F;
  wire        _GEN_68 = pht_windex == 6'h20;
  wire        _GEN_69 = pht_windex == 6'h21;
  wire        _GEN_70 = pht_windex == 6'h22;
  wire        _GEN_71 = pht_windex == 6'h23;
  wire        _GEN_72 = pht_windex == 6'h24;
  wire        _GEN_73 = pht_windex == 6'h25;
  wire        _GEN_74 = pht_windex == 6'h26;
  wire        _GEN_75 = pht_windex == 6'h27;
  wire        _GEN_76 = pht_windex == 6'h28;
  wire        _GEN_77 = pht_windex == 6'h29;
  wire        _GEN_78 = pht_windex == 6'h2A;
  wire        _GEN_79 = pht_windex == 6'h2B;
  wire        _GEN_80 = pht_windex == 6'h2C;
  wire        _GEN_81 = pht_windex == 6'h2D;
  wire        _GEN_82 = pht_windex == 6'h2E;
  wire        _GEN_83 = pht_windex == 6'h2F;
  wire        _GEN_84 = pht_windex == 6'h30;
  wire        _GEN_85 = pht_windex == 6'h31;
  wire        _GEN_86 = pht_windex == 6'h32;
  wire        _GEN_87 = pht_windex == 6'h33;
  wire        _GEN_88 = pht_windex == 6'h34;
  wire        _GEN_89 = pht_windex == 6'h35;
  wire        _GEN_90 = pht_windex == 6'h36;
  wire        _GEN_91 = pht_windex == 6'h37;
  wire        _GEN_92 = pht_windex == 6'h38;
  wire        _GEN_93 = pht_windex == 6'h39;
  wire        _GEN_94 = pht_windex == 6'h3A;
  wire        _GEN_95 = pht_windex == 6'h3B;
  wire        _GEN_96 = pht_windex == 6'h3C;
  wire        _GEN_97 = pht_windex == 6'h3D;
  wire        _GEN_98 = pht_windex == 6'h3E;
  wire        _GEN_99 = io_br_type == 2'h1;
  always @(posedge clock) begin
    if (reset) begin
      bht_0_0 <= 4'h0;
      bht_0_1 <= 4'h0;
      bht_0_2 <= 4'h0;
      bht_0_3 <= 4'h0;
      bht_0_4 <= 4'h0;
      bht_0_5 <= 4'h0;
      bht_0_6 <= 4'h0;
      bht_0_7 <= 4'h0;
      bht_0_8 <= 4'h0;
      bht_0_9 <= 4'h0;
      bht_0_10 <= 4'h0;
      bht_0_11 <= 4'h0;
      bht_0_12 <= 4'h0;
      bht_0_13 <= 4'h0;
      bht_0_14 <= 4'h0;
      bht_0_15 <= 4'h0;
      bht_1_0 <= 4'h0;
      bht_1_1 <= 4'h0;
      bht_1_2 <= 4'h0;
      bht_1_3 <= 4'h0;
      bht_1_4 <= 4'h0;
      bht_1_5 <= 4'h0;
      bht_1_6 <= 4'h0;
      bht_1_7 <= 4'h0;
      bht_1_8 <= 4'h0;
      bht_1_9 <= 4'h0;
      bht_1_10 <= 4'h0;
      bht_1_11 <= 4'h0;
      bht_1_12 <= 4'h0;
      bht_1_13 <= 4'h0;
      bht_1_14 <= 4'h0;
      bht_1_15 <= 4'h0;
      bht_2_0 <= 4'h0;
      bht_2_1 <= 4'h0;
      bht_2_2 <= 4'h0;
      bht_2_3 <= 4'h0;
      bht_2_4 <= 4'h0;
      bht_2_5 <= 4'h0;
      bht_2_6 <= 4'h0;
      bht_2_7 <= 4'h0;
      bht_2_8 <= 4'h0;
      bht_2_9 <= 4'h0;
      bht_2_10 <= 4'h0;
      bht_2_11 <= 4'h0;
      bht_2_12 <= 4'h0;
      bht_2_13 <= 4'h0;
      bht_2_14 <= 4'h0;
      bht_2_15 <= 4'h0;
      bht_3_0 <= 4'h0;
      bht_3_1 <= 4'h0;
      bht_3_2 <= 4'h0;
      bht_3_3 <= 4'h0;
      bht_3_4 <= 4'h0;
      bht_3_5 <= 4'h0;
      bht_3_6 <= 4'h0;
      bht_3_7 <= 4'h0;
      bht_3_8 <= 4'h0;
      bht_3_9 <= 4'h0;
      bht_3_10 <= 4'h0;
      bht_3_11 <= 4'h0;
      bht_3_12 <= 4'h0;
      bht_3_13 <= 4'h0;
      bht_3_14 <= 4'h0;
      bht_3_15 <= 4'h0;
      pht_0_0 <= 2'h2;
      pht_0_1 <= 2'h2;
      pht_0_2 <= 2'h2;
      pht_0_3 <= 2'h2;
      pht_0_4 <= 2'h2;
      pht_0_5 <= 2'h2;
      pht_0_6 <= 2'h2;
      pht_0_7 <= 2'h2;
      pht_0_8 <= 2'h2;
      pht_0_9 <= 2'h2;
      pht_0_10 <= 2'h2;
      pht_0_11 <= 2'h2;
      pht_0_12 <= 2'h2;
      pht_0_13 <= 2'h2;
      pht_0_14 <= 2'h2;
      pht_0_15 <= 2'h2;
      pht_0_16 <= 2'h2;
      pht_0_17 <= 2'h2;
      pht_0_18 <= 2'h2;
      pht_0_19 <= 2'h2;
      pht_0_20 <= 2'h2;
      pht_0_21 <= 2'h2;
      pht_0_22 <= 2'h2;
      pht_0_23 <= 2'h2;
      pht_0_24 <= 2'h2;
      pht_0_25 <= 2'h2;
      pht_0_26 <= 2'h2;
      pht_0_27 <= 2'h2;
      pht_0_28 <= 2'h2;
      pht_0_29 <= 2'h2;
      pht_0_30 <= 2'h2;
      pht_0_31 <= 2'h2;
      pht_0_32 <= 2'h2;
      pht_0_33 <= 2'h2;
      pht_0_34 <= 2'h2;
      pht_0_35 <= 2'h2;
      pht_0_36 <= 2'h2;
      pht_0_37 <= 2'h2;
      pht_0_38 <= 2'h2;
      pht_0_39 <= 2'h2;
      pht_0_40 <= 2'h2;
      pht_0_41 <= 2'h2;
      pht_0_42 <= 2'h2;
      pht_0_43 <= 2'h2;
      pht_0_44 <= 2'h2;
      pht_0_45 <= 2'h2;
      pht_0_46 <= 2'h2;
      pht_0_47 <= 2'h2;
      pht_0_48 <= 2'h2;
      pht_0_49 <= 2'h2;
      pht_0_50 <= 2'h2;
      pht_0_51 <= 2'h2;
      pht_0_52 <= 2'h2;
      pht_0_53 <= 2'h2;
      pht_0_54 <= 2'h2;
      pht_0_55 <= 2'h2;
      pht_0_56 <= 2'h2;
      pht_0_57 <= 2'h2;
      pht_0_58 <= 2'h2;
      pht_0_59 <= 2'h2;
      pht_0_60 <= 2'h2;
      pht_0_61 <= 2'h2;
      pht_0_62 <= 2'h2;
      pht_0_63 <= 2'h2;
      pht_1_0 <= 2'h2;
      pht_1_1 <= 2'h2;
      pht_1_2 <= 2'h2;
      pht_1_3 <= 2'h2;
      pht_1_4 <= 2'h2;
      pht_1_5 <= 2'h2;
      pht_1_6 <= 2'h2;
      pht_1_7 <= 2'h2;
      pht_1_8 <= 2'h2;
      pht_1_9 <= 2'h2;
      pht_1_10 <= 2'h2;
      pht_1_11 <= 2'h2;
      pht_1_12 <= 2'h2;
      pht_1_13 <= 2'h2;
      pht_1_14 <= 2'h2;
      pht_1_15 <= 2'h2;
      pht_1_16 <= 2'h2;
      pht_1_17 <= 2'h2;
      pht_1_18 <= 2'h2;
      pht_1_19 <= 2'h2;
      pht_1_20 <= 2'h2;
      pht_1_21 <= 2'h2;
      pht_1_22 <= 2'h2;
      pht_1_23 <= 2'h2;
      pht_1_24 <= 2'h2;
      pht_1_25 <= 2'h2;
      pht_1_26 <= 2'h2;
      pht_1_27 <= 2'h2;
      pht_1_28 <= 2'h2;
      pht_1_29 <= 2'h2;
      pht_1_30 <= 2'h2;
      pht_1_31 <= 2'h2;
      pht_1_32 <= 2'h2;
      pht_1_33 <= 2'h2;
      pht_1_34 <= 2'h2;
      pht_1_35 <= 2'h2;
      pht_1_36 <= 2'h2;
      pht_1_37 <= 2'h2;
      pht_1_38 <= 2'h2;
      pht_1_39 <= 2'h2;
      pht_1_40 <= 2'h2;
      pht_1_41 <= 2'h2;
      pht_1_42 <= 2'h2;
      pht_1_43 <= 2'h2;
      pht_1_44 <= 2'h2;
      pht_1_45 <= 2'h2;
      pht_1_46 <= 2'h2;
      pht_1_47 <= 2'h2;
      pht_1_48 <= 2'h2;
      pht_1_49 <= 2'h2;
      pht_1_50 <= 2'h2;
      pht_1_51 <= 2'h2;
      pht_1_52 <= 2'h2;
      pht_1_53 <= 2'h2;
      pht_1_54 <= 2'h2;
      pht_1_55 <= 2'h2;
      pht_1_56 <= 2'h2;
      pht_1_57 <= 2'h2;
      pht_1_58 <= 2'h2;
      pht_1_59 <= 2'h2;
      pht_1_60 <= 2'h2;
      pht_1_61 <= 2'h2;
      pht_1_62 <= 2'h2;
      pht_1_63 <= 2'h2;
      pht_2_0 <= 2'h2;
      pht_2_1 <= 2'h2;
      pht_2_2 <= 2'h2;
      pht_2_3 <= 2'h2;
      pht_2_4 <= 2'h2;
      pht_2_5 <= 2'h2;
      pht_2_6 <= 2'h2;
      pht_2_7 <= 2'h2;
      pht_2_8 <= 2'h2;
      pht_2_9 <= 2'h2;
      pht_2_10 <= 2'h2;
      pht_2_11 <= 2'h2;
      pht_2_12 <= 2'h2;
      pht_2_13 <= 2'h2;
      pht_2_14 <= 2'h2;
      pht_2_15 <= 2'h2;
      pht_2_16 <= 2'h2;
      pht_2_17 <= 2'h2;
      pht_2_18 <= 2'h2;
      pht_2_19 <= 2'h2;
      pht_2_20 <= 2'h2;
      pht_2_21 <= 2'h2;
      pht_2_22 <= 2'h2;
      pht_2_23 <= 2'h2;
      pht_2_24 <= 2'h2;
      pht_2_25 <= 2'h2;
      pht_2_26 <= 2'h2;
      pht_2_27 <= 2'h2;
      pht_2_28 <= 2'h2;
      pht_2_29 <= 2'h2;
      pht_2_30 <= 2'h2;
      pht_2_31 <= 2'h2;
      pht_2_32 <= 2'h2;
      pht_2_33 <= 2'h2;
      pht_2_34 <= 2'h2;
      pht_2_35 <= 2'h2;
      pht_2_36 <= 2'h2;
      pht_2_37 <= 2'h2;
      pht_2_38 <= 2'h2;
      pht_2_39 <= 2'h2;
      pht_2_40 <= 2'h2;
      pht_2_41 <= 2'h2;
      pht_2_42 <= 2'h2;
      pht_2_43 <= 2'h2;
      pht_2_44 <= 2'h2;
      pht_2_45 <= 2'h2;
      pht_2_46 <= 2'h2;
      pht_2_47 <= 2'h2;
      pht_2_48 <= 2'h2;
      pht_2_49 <= 2'h2;
      pht_2_50 <= 2'h2;
      pht_2_51 <= 2'h2;
      pht_2_52 <= 2'h2;
      pht_2_53 <= 2'h2;
      pht_2_54 <= 2'h2;
      pht_2_55 <= 2'h2;
      pht_2_56 <= 2'h2;
      pht_2_57 <= 2'h2;
      pht_2_58 <= 2'h2;
      pht_2_59 <= 2'h2;
      pht_2_60 <= 2'h2;
      pht_2_61 <= 2'h2;
      pht_2_62 <= 2'h2;
      pht_2_63 <= 2'h2;
      pht_3_0 <= 2'h2;
      pht_3_1 <= 2'h2;
      pht_3_2 <= 2'h2;
      pht_3_3 <= 2'h2;
      pht_3_4 <= 2'h2;
      pht_3_5 <= 2'h2;
      pht_3_6 <= 2'h2;
      pht_3_7 <= 2'h2;
      pht_3_8 <= 2'h2;
      pht_3_9 <= 2'h2;
      pht_3_10 <= 2'h2;
      pht_3_11 <= 2'h2;
      pht_3_12 <= 2'h2;
      pht_3_13 <= 2'h2;
      pht_3_14 <= 2'h2;
      pht_3_15 <= 2'h2;
      pht_3_16 <= 2'h2;
      pht_3_17 <= 2'h2;
      pht_3_18 <= 2'h2;
      pht_3_19 <= 2'h2;
      pht_3_20 <= 2'h2;
      pht_3_21 <= 2'h2;
      pht_3_22 <= 2'h2;
      pht_3_23 <= 2'h2;
      pht_3_24 <= 2'h2;
      pht_3_25 <= 2'h2;
      pht_3_26 <= 2'h2;
      pht_3_27 <= 2'h2;
      pht_3_28 <= 2'h2;
      pht_3_29 <= 2'h2;
      pht_3_30 <= 2'h2;
      pht_3_31 <= 2'h2;
      pht_3_32 <= 2'h2;
      pht_3_33 <= 2'h2;
      pht_3_34 <= 2'h2;
      pht_3_35 <= 2'h2;
      pht_3_36 <= 2'h2;
      pht_3_37 <= 2'h2;
      pht_3_38 <= 2'h2;
      pht_3_39 <= 2'h2;
      pht_3_40 <= 2'h2;
      pht_3_41 <= 2'h2;
      pht_3_42 <= 2'h2;
      pht_3_43 <= 2'h2;
      pht_3_44 <= 2'h2;
      pht_3_45 <= 2'h2;
      pht_3_46 <= 2'h2;
      pht_3_47 <= 2'h2;
      pht_3_48 <= 2'h2;
      pht_3_49 <= 2'h2;
      pht_3_50 <= 2'h2;
      pht_3_51 <= 2'h2;
      pht_3_52 <= 2'h2;
      pht_3_53 <= 2'h2;
      pht_3_54 <= 2'h2;
      pht_3_55 <= 2'h2;
      pht_3_56 <= 2'h2;
      pht_3_57 <= 2'h2;
      pht_3_58 <= 2'h2;
      pht_3_59 <= 2'h2;
      pht_3_60 <= 2'h2;
      pht_3_61 <= 2'h2;
      pht_3_62 <= 2'h2;
      pht_3_63 <= 2'h2;
      ras_0 <= 32'h1C000000;
      ras_1 <= 32'h1C000000;
      ras_2 <= 32'h1C000000;
      ras_3 <= 32'h1C000000;
      ras_4 <= 32'h1C000000;
      ras_5 <= 32'h1C000000;
      ras_6 <= 32'h1C000000;
      ras_7 <= 32'h1C000000;
      ras_8 <= 32'h1C000000;
      ras_9 <= 32'h1C000000;
      ras_10 <= 32'h1C000000;
      ras_11 <= 32'h1C000000;
      ras_12 <= 32'h1C000000;
      ras_13 <= 32'h1C000000;
      ras_14 <= 32'h1C000000;
      ras_15 <= 32'h1C000000;
      top <= 4'h0;
      jirl_sel <= 2'h0;
    end
    else begin
      if (io_update_en & _GEN_18 & _GEN_19)
        bht_0_0 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_20)
        bht_0_1 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_21)
        bht_0_2 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_22)
        bht_0_3 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_23)
        bht_0_4 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_24)
        bht_0_5 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_25)
        bht_0_6 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_26)
        bht_0_7 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_27)
        bht_0_8 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_28)
        bht_0_9 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_29)
        bht_0_10 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_30)
        bht_0_11 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_31)
        bht_0_12 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_32)
        bht_0_13 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_33)
        bht_0_14 <= _bht_T_2;
      if (io_update_en & _GEN_18 & (&(io_pc_cmt[7:4])))
        bht_0_15 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_19)
        bht_1_0 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_20)
        bht_1_1 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_21)
        bht_1_2 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_22)
        bht_1_3 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_23)
        bht_1_4 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_24)
        bht_1_5 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_25)
        bht_1_6 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_26)
        bht_1_7 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_27)
        bht_1_8 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_28)
        bht_1_9 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_29)
        bht_1_10 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_30)
        bht_1_11 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_31)
        bht_1_12 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_32)
        bht_1_13 <= _bht_T_2;
      if (io_update_en & _GEN_34 & _GEN_33)
        bht_1_14 <= _bht_T_2;
      if (io_update_en & _GEN_34 & (&(io_pc_cmt[7:4])))
        bht_1_15 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_19)
        bht_2_0 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_20)
        bht_2_1 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_21)
        bht_2_2 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_22)
        bht_2_3 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_23)
        bht_2_4 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_24)
        bht_2_5 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_25)
        bht_2_6 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_26)
        bht_2_7 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_27)
        bht_2_8 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_28)
        bht_2_9 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_29)
        bht_2_10 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_30)
        bht_2_11 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_31)
        bht_2_12 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_32)
        bht_2_13 <= _bht_T_2;
      if (io_update_en & _GEN_35 & _GEN_33)
        bht_2_14 <= _bht_T_2;
      if (io_update_en & _GEN_35 & (&(io_pc_cmt[7:4])))
        bht_2_15 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_19)
        bht_3_0 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_20)
        bht_3_1 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_21)
        bht_3_2 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_22)
        bht_3_3 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_23)
        bht_3_4 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_24)
        bht_3_5 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_25)
        bht_3_6 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_26)
        bht_3_7 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_27)
        bht_3_8 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_28)
        bht_3_9 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_29)
        bht_3_10 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_30)
        bht_3_11 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_31)
        bht_3_12 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_32)
        bht_3_13 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_33)
        bht_3_14 <= _bht_T_2;
      if (io_update_en & (&(io_pc_cmt[3:2])) & (&(io_pc_cmt[7:4])))
        bht_3_15 <= _bht_T_2;
      if (io_update_en & _GEN_18 & _GEN_36) begin
        if (io_real_jump)
          pht_0_0 <= _pht_T_3;
        else
          pht_0_0 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_37) begin
        if (io_real_jump)
          pht_0_1 <= _pht_T_3;
        else
          pht_0_1 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_38) begin
        if (io_real_jump)
          pht_0_2 <= _pht_T_3;
        else
          pht_0_2 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_39) begin
        if (io_real_jump)
          pht_0_3 <= _pht_T_3;
        else
          pht_0_3 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_40) begin
        if (io_real_jump)
          pht_0_4 <= _pht_T_3;
        else
          pht_0_4 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_41) begin
        if (io_real_jump)
          pht_0_5 <= _pht_T_3;
        else
          pht_0_5 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_42) begin
        if (io_real_jump)
          pht_0_6 <= _pht_T_3;
        else
          pht_0_6 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_43) begin
        if (io_real_jump)
          pht_0_7 <= _pht_T_3;
        else
          pht_0_7 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_44) begin
        if (io_real_jump)
          pht_0_8 <= _pht_T_3;
        else
          pht_0_8 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_45) begin
        if (io_real_jump)
          pht_0_9 <= _pht_T_3;
        else
          pht_0_9 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_46) begin
        if (io_real_jump)
          pht_0_10 <= _pht_T_3;
        else
          pht_0_10 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_47) begin
        if (io_real_jump)
          pht_0_11 <= _pht_T_3;
        else
          pht_0_11 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_48) begin
        if (io_real_jump)
          pht_0_12 <= _pht_T_3;
        else
          pht_0_12 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_49) begin
        if (io_real_jump)
          pht_0_13 <= _pht_T_3;
        else
          pht_0_13 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_50) begin
        if (io_real_jump)
          pht_0_14 <= _pht_T_3;
        else
          pht_0_14 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_51) begin
        if (io_real_jump)
          pht_0_15 <= _pht_T_3;
        else
          pht_0_15 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_52) begin
        if (io_real_jump)
          pht_0_16 <= _pht_T_3;
        else
          pht_0_16 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_53) begin
        if (io_real_jump)
          pht_0_17 <= _pht_T_3;
        else
          pht_0_17 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_54) begin
        if (io_real_jump)
          pht_0_18 <= _pht_T_3;
        else
          pht_0_18 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_55) begin
        if (io_real_jump)
          pht_0_19 <= _pht_T_3;
        else
          pht_0_19 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_56) begin
        if (io_real_jump)
          pht_0_20 <= _pht_T_3;
        else
          pht_0_20 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_57) begin
        if (io_real_jump)
          pht_0_21 <= _pht_T_3;
        else
          pht_0_21 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_58) begin
        if (io_real_jump)
          pht_0_22 <= _pht_T_3;
        else
          pht_0_22 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_59) begin
        if (io_real_jump)
          pht_0_23 <= _pht_T_3;
        else
          pht_0_23 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_60) begin
        if (io_real_jump)
          pht_0_24 <= _pht_T_3;
        else
          pht_0_24 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_61) begin
        if (io_real_jump)
          pht_0_25 <= _pht_T_3;
        else
          pht_0_25 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_62) begin
        if (io_real_jump)
          pht_0_26 <= _pht_T_3;
        else
          pht_0_26 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_63) begin
        if (io_real_jump)
          pht_0_27 <= _pht_T_3;
        else
          pht_0_27 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_64) begin
        if (io_real_jump)
          pht_0_28 <= _pht_T_3;
        else
          pht_0_28 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_65) begin
        if (io_real_jump)
          pht_0_29 <= _pht_T_3;
        else
          pht_0_29 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_66) begin
        if (io_real_jump)
          pht_0_30 <= _pht_T_3;
        else
          pht_0_30 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_67) begin
        if (io_real_jump)
          pht_0_31 <= _pht_T_3;
        else
          pht_0_31 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_68) begin
        if (io_real_jump)
          pht_0_32 <= _pht_T_3;
        else
          pht_0_32 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_69) begin
        if (io_real_jump)
          pht_0_33 <= _pht_T_3;
        else
          pht_0_33 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_70) begin
        if (io_real_jump)
          pht_0_34 <= _pht_T_3;
        else
          pht_0_34 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_71) begin
        if (io_real_jump)
          pht_0_35 <= _pht_T_3;
        else
          pht_0_35 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_72) begin
        if (io_real_jump)
          pht_0_36 <= _pht_T_3;
        else
          pht_0_36 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_73) begin
        if (io_real_jump)
          pht_0_37 <= _pht_T_3;
        else
          pht_0_37 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_74) begin
        if (io_real_jump)
          pht_0_38 <= _pht_T_3;
        else
          pht_0_38 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_75) begin
        if (io_real_jump)
          pht_0_39 <= _pht_T_3;
        else
          pht_0_39 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_76) begin
        if (io_real_jump)
          pht_0_40 <= _pht_T_3;
        else
          pht_0_40 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_77) begin
        if (io_real_jump)
          pht_0_41 <= _pht_T_3;
        else
          pht_0_41 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_78) begin
        if (io_real_jump)
          pht_0_42 <= _pht_T_3;
        else
          pht_0_42 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_79) begin
        if (io_real_jump)
          pht_0_43 <= _pht_T_3;
        else
          pht_0_43 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_80) begin
        if (io_real_jump)
          pht_0_44 <= _pht_T_3;
        else
          pht_0_44 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_81) begin
        if (io_real_jump)
          pht_0_45 <= _pht_T_3;
        else
          pht_0_45 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_82) begin
        if (io_real_jump)
          pht_0_46 <= _pht_T_3;
        else
          pht_0_46 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_83) begin
        if (io_real_jump)
          pht_0_47 <= _pht_T_3;
        else
          pht_0_47 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_84) begin
        if (io_real_jump)
          pht_0_48 <= _pht_T_3;
        else
          pht_0_48 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_85) begin
        if (io_real_jump)
          pht_0_49 <= _pht_T_3;
        else
          pht_0_49 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_86) begin
        if (io_real_jump)
          pht_0_50 <= _pht_T_3;
        else
          pht_0_50 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_87) begin
        if (io_real_jump)
          pht_0_51 <= _pht_T_3;
        else
          pht_0_51 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_88) begin
        if (io_real_jump)
          pht_0_52 <= _pht_T_3;
        else
          pht_0_52 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_89) begin
        if (io_real_jump)
          pht_0_53 <= _pht_T_3;
        else
          pht_0_53 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_90) begin
        if (io_real_jump)
          pht_0_54 <= _pht_T_3;
        else
          pht_0_54 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_91) begin
        if (io_real_jump)
          pht_0_55 <= _pht_T_3;
        else
          pht_0_55 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_92) begin
        if (io_real_jump)
          pht_0_56 <= _pht_T_3;
        else
          pht_0_56 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_93) begin
        if (io_real_jump)
          pht_0_57 <= _pht_T_3;
        else
          pht_0_57 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_94) begin
        if (io_real_jump)
          pht_0_58 <= _pht_T_3;
        else
          pht_0_58 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_95) begin
        if (io_real_jump)
          pht_0_59 <= _pht_T_3;
        else
          pht_0_59 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_96) begin
        if (io_real_jump)
          pht_0_60 <= _pht_T_3;
        else
          pht_0_60 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_97) begin
        if (io_real_jump)
          pht_0_61 <= _pht_T_3;
        else
          pht_0_61 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & _GEN_98) begin
        if (io_real_jump)
          pht_0_62 <= _pht_T_3;
        else
          pht_0_62 <= _pht_T_8;
      end
      if (io_update_en & _GEN_18 & (&pht_windex)) begin
        if (io_real_jump)
          pht_0_63 <= _pht_T_3;
        else
          pht_0_63 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_36) begin
        if (io_real_jump)
          pht_1_0 <= _pht_T_3;
        else
          pht_1_0 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_37) begin
        if (io_real_jump)
          pht_1_1 <= _pht_T_3;
        else
          pht_1_1 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_38) begin
        if (io_real_jump)
          pht_1_2 <= _pht_T_3;
        else
          pht_1_2 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_39) begin
        if (io_real_jump)
          pht_1_3 <= _pht_T_3;
        else
          pht_1_3 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_40) begin
        if (io_real_jump)
          pht_1_4 <= _pht_T_3;
        else
          pht_1_4 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_41) begin
        if (io_real_jump)
          pht_1_5 <= _pht_T_3;
        else
          pht_1_5 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_42) begin
        if (io_real_jump)
          pht_1_6 <= _pht_T_3;
        else
          pht_1_6 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_43) begin
        if (io_real_jump)
          pht_1_7 <= _pht_T_3;
        else
          pht_1_7 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_44) begin
        if (io_real_jump)
          pht_1_8 <= _pht_T_3;
        else
          pht_1_8 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_45) begin
        if (io_real_jump)
          pht_1_9 <= _pht_T_3;
        else
          pht_1_9 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_46) begin
        if (io_real_jump)
          pht_1_10 <= _pht_T_3;
        else
          pht_1_10 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_47) begin
        if (io_real_jump)
          pht_1_11 <= _pht_T_3;
        else
          pht_1_11 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_48) begin
        if (io_real_jump)
          pht_1_12 <= _pht_T_3;
        else
          pht_1_12 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_49) begin
        if (io_real_jump)
          pht_1_13 <= _pht_T_3;
        else
          pht_1_13 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_50) begin
        if (io_real_jump)
          pht_1_14 <= _pht_T_3;
        else
          pht_1_14 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_51) begin
        if (io_real_jump)
          pht_1_15 <= _pht_T_3;
        else
          pht_1_15 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_52) begin
        if (io_real_jump)
          pht_1_16 <= _pht_T_3;
        else
          pht_1_16 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_53) begin
        if (io_real_jump)
          pht_1_17 <= _pht_T_3;
        else
          pht_1_17 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_54) begin
        if (io_real_jump)
          pht_1_18 <= _pht_T_3;
        else
          pht_1_18 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_55) begin
        if (io_real_jump)
          pht_1_19 <= _pht_T_3;
        else
          pht_1_19 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_56) begin
        if (io_real_jump)
          pht_1_20 <= _pht_T_3;
        else
          pht_1_20 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_57) begin
        if (io_real_jump)
          pht_1_21 <= _pht_T_3;
        else
          pht_1_21 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_58) begin
        if (io_real_jump)
          pht_1_22 <= _pht_T_3;
        else
          pht_1_22 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_59) begin
        if (io_real_jump)
          pht_1_23 <= _pht_T_3;
        else
          pht_1_23 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_60) begin
        if (io_real_jump)
          pht_1_24 <= _pht_T_3;
        else
          pht_1_24 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_61) begin
        if (io_real_jump)
          pht_1_25 <= _pht_T_3;
        else
          pht_1_25 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_62) begin
        if (io_real_jump)
          pht_1_26 <= _pht_T_3;
        else
          pht_1_26 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_63) begin
        if (io_real_jump)
          pht_1_27 <= _pht_T_3;
        else
          pht_1_27 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_64) begin
        if (io_real_jump)
          pht_1_28 <= _pht_T_3;
        else
          pht_1_28 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_65) begin
        if (io_real_jump)
          pht_1_29 <= _pht_T_3;
        else
          pht_1_29 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_66) begin
        if (io_real_jump)
          pht_1_30 <= _pht_T_3;
        else
          pht_1_30 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_67) begin
        if (io_real_jump)
          pht_1_31 <= _pht_T_3;
        else
          pht_1_31 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_68) begin
        if (io_real_jump)
          pht_1_32 <= _pht_T_3;
        else
          pht_1_32 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_69) begin
        if (io_real_jump)
          pht_1_33 <= _pht_T_3;
        else
          pht_1_33 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_70) begin
        if (io_real_jump)
          pht_1_34 <= _pht_T_3;
        else
          pht_1_34 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_71) begin
        if (io_real_jump)
          pht_1_35 <= _pht_T_3;
        else
          pht_1_35 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_72) begin
        if (io_real_jump)
          pht_1_36 <= _pht_T_3;
        else
          pht_1_36 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_73) begin
        if (io_real_jump)
          pht_1_37 <= _pht_T_3;
        else
          pht_1_37 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_74) begin
        if (io_real_jump)
          pht_1_38 <= _pht_T_3;
        else
          pht_1_38 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_75) begin
        if (io_real_jump)
          pht_1_39 <= _pht_T_3;
        else
          pht_1_39 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_76) begin
        if (io_real_jump)
          pht_1_40 <= _pht_T_3;
        else
          pht_1_40 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_77) begin
        if (io_real_jump)
          pht_1_41 <= _pht_T_3;
        else
          pht_1_41 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_78) begin
        if (io_real_jump)
          pht_1_42 <= _pht_T_3;
        else
          pht_1_42 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_79) begin
        if (io_real_jump)
          pht_1_43 <= _pht_T_3;
        else
          pht_1_43 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_80) begin
        if (io_real_jump)
          pht_1_44 <= _pht_T_3;
        else
          pht_1_44 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_81) begin
        if (io_real_jump)
          pht_1_45 <= _pht_T_3;
        else
          pht_1_45 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_82) begin
        if (io_real_jump)
          pht_1_46 <= _pht_T_3;
        else
          pht_1_46 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_83) begin
        if (io_real_jump)
          pht_1_47 <= _pht_T_3;
        else
          pht_1_47 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_84) begin
        if (io_real_jump)
          pht_1_48 <= _pht_T_3;
        else
          pht_1_48 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_85) begin
        if (io_real_jump)
          pht_1_49 <= _pht_T_3;
        else
          pht_1_49 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_86) begin
        if (io_real_jump)
          pht_1_50 <= _pht_T_3;
        else
          pht_1_50 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_87) begin
        if (io_real_jump)
          pht_1_51 <= _pht_T_3;
        else
          pht_1_51 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_88) begin
        if (io_real_jump)
          pht_1_52 <= _pht_T_3;
        else
          pht_1_52 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_89) begin
        if (io_real_jump)
          pht_1_53 <= _pht_T_3;
        else
          pht_1_53 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_90) begin
        if (io_real_jump)
          pht_1_54 <= _pht_T_3;
        else
          pht_1_54 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_91) begin
        if (io_real_jump)
          pht_1_55 <= _pht_T_3;
        else
          pht_1_55 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_92) begin
        if (io_real_jump)
          pht_1_56 <= _pht_T_3;
        else
          pht_1_56 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_93) begin
        if (io_real_jump)
          pht_1_57 <= _pht_T_3;
        else
          pht_1_57 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_94) begin
        if (io_real_jump)
          pht_1_58 <= _pht_T_3;
        else
          pht_1_58 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_95) begin
        if (io_real_jump)
          pht_1_59 <= _pht_T_3;
        else
          pht_1_59 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_96) begin
        if (io_real_jump)
          pht_1_60 <= _pht_T_3;
        else
          pht_1_60 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_97) begin
        if (io_real_jump)
          pht_1_61 <= _pht_T_3;
        else
          pht_1_61 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & _GEN_98) begin
        if (io_real_jump)
          pht_1_62 <= _pht_T_3;
        else
          pht_1_62 <= _pht_T_8;
      end
      if (io_update_en & _GEN_34 & (&pht_windex)) begin
        if (io_real_jump)
          pht_1_63 <= _pht_T_3;
        else
          pht_1_63 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_36) begin
        if (io_real_jump)
          pht_2_0 <= _pht_T_3;
        else
          pht_2_0 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_37) begin
        if (io_real_jump)
          pht_2_1 <= _pht_T_3;
        else
          pht_2_1 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_38) begin
        if (io_real_jump)
          pht_2_2 <= _pht_T_3;
        else
          pht_2_2 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_39) begin
        if (io_real_jump)
          pht_2_3 <= _pht_T_3;
        else
          pht_2_3 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_40) begin
        if (io_real_jump)
          pht_2_4 <= _pht_T_3;
        else
          pht_2_4 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_41) begin
        if (io_real_jump)
          pht_2_5 <= _pht_T_3;
        else
          pht_2_5 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_42) begin
        if (io_real_jump)
          pht_2_6 <= _pht_T_3;
        else
          pht_2_6 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_43) begin
        if (io_real_jump)
          pht_2_7 <= _pht_T_3;
        else
          pht_2_7 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_44) begin
        if (io_real_jump)
          pht_2_8 <= _pht_T_3;
        else
          pht_2_8 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_45) begin
        if (io_real_jump)
          pht_2_9 <= _pht_T_3;
        else
          pht_2_9 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_46) begin
        if (io_real_jump)
          pht_2_10 <= _pht_T_3;
        else
          pht_2_10 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_47) begin
        if (io_real_jump)
          pht_2_11 <= _pht_T_3;
        else
          pht_2_11 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_48) begin
        if (io_real_jump)
          pht_2_12 <= _pht_T_3;
        else
          pht_2_12 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_49) begin
        if (io_real_jump)
          pht_2_13 <= _pht_T_3;
        else
          pht_2_13 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_50) begin
        if (io_real_jump)
          pht_2_14 <= _pht_T_3;
        else
          pht_2_14 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_51) begin
        if (io_real_jump)
          pht_2_15 <= _pht_T_3;
        else
          pht_2_15 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_52) begin
        if (io_real_jump)
          pht_2_16 <= _pht_T_3;
        else
          pht_2_16 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_53) begin
        if (io_real_jump)
          pht_2_17 <= _pht_T_3;
        else
          pht_2_17 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_54) begin
        if (io_real_jump)
          pht_2_18 <= _pht_T_3;
        else
          pht_2_18 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_55) begin
        if (io_real_jump)
          pht_2_19 <= _pht_T_3;
        else
          pht_2_19 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_56) begin
        if (io_real_jump)
          pht_2_20 <= _pht_T_3;
        else
          pht_2_20 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_57) begin
        if (io_real_jump)
          pht_2_21 <= _pht_T_3;
        else
          pht_2_21 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_58) begin
        if (io_real_jump)
          pht_2_22 <= _pht_T_3;
        else
          pht_2_22 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_59) begin
        if (io_real_jump)
          pht_2_23 <= _pht_T_3;
        else
          pht_2_23 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_60) begin
        if (io_real_jump)
          pht_2_24 <= _pht_T_3;
        else
          pht_2_24 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_61) begin
        if (io_real_jump)
          pht_2_25 <= _pht_T_3;
        else
          pht_2_25 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_62) begin
        if (io_real_jump)
          pht_2_26 <= _pht_T_3;
        else
          pht_2_26 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_63) begin
        if (io_real_jump)
          pht_2_27 <= _pht_T_3;
        else
          pht_2_27 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_64) begin
        if (io_real_jump)
          pht_2_28 <= _pht_T_3;
        else
          pht_2_28 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_65) begin
        if (io_real_jump)
          pht_2_29 <= _pht_T_3;
        else
          pht_2_29 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_66) begin
        if (io_real_jump)
          pht_2_30 <= _pht_T_3;
        else
          pht_2_30 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_67) begin
        if (io_real_jump)
          pht_2_31 <= _pht_T_3;
        else
          pht_2_31 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_68) begin
        if (io_real_jump)
          pht_2_32 <= _pht_T_3;
        else
          pht_2_32 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_69) begin
        if (io_real_jump)
          pht_2_33 <= _pht_T_3;
        else
          pht_2_33 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_70) begin
        if (io_real_jump)
          pht_2_34 <= _pht_T_3;
        else
          pht_2_34 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_71) begin
        if (io_real_jump)
          pht_2_35 <= _pht_T_3;
        else
          pht_2_35 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_72) begin
        if (io_real_jump)
          pht_2_36 <= _pht_T_3;
        else
          pht_2_36 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_73) begin
        if (io_real_jump)
          pht_2_37 <= _pht_T_3;
        else
          pht_2_37 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_74) begin
        if (io_real_jump)
          pht_2_38 <= _pht_T_3;
        else
          pht_2_38 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_75) begin
        if (io_real_jump)
          pht_2_39 <= _pht_T_3;
        else
          pht_2_39 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_76) begin
        if (io_real_jump)
          pht_2_40 <= _pht_T_3;
        else
          pht_2_40 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_77) begin
        if (io_real_jump)
          pht_2_41 <= _pht_T_3;
        else
          pht_2_41 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_78) begin
        if (io_real_jump)
          pht_2_42 <= _pht_T_3;
        else
          pht_2_42 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_79) begin
        if (io_real_jump)
          pht_2_43 <= _pht_T_3;
        else
          pht_2_43 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_80) begin
        if (io_real_jump)
          pht_2_44 <= _pht_T_3;
        else
          pht_2_44 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_81) begin
        if (io_real_jump)
          pht_2_45 <= _pht_T_3;
        else
          pht_2_45 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_82) begin
        if (io_real_jump)
          pht_2_46 <= _pht_T_3;
        else
          pht_2_46 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_83) begin
        if (io_real_jump)
          pht_2_47 <= _pht_T_3;
        else
          pht_2_47 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_84) begin
        if (io_real_jump)
          pht_2_48 <= _pht_T_3;
        else
          pht_2_48 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_85) begin
        if (io_real_jump)
          pht_2_49 <= _pht_T_3;
        else
          pht_2_49 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_86) begin
        if (io_real_jump)
          pht_2_50 <= _pht_T_3;
        else
          pht_2_50 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_87) begin
        if (io_real_jump)
          pht_2_51 <= _pht_T_3;
        else
          pht_2_51 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_88) begin
        if (io_real_jump)
          pht_2_52 <= _pht_T_3;
        else
          pht_2_52 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_89) begin
        if (io_real_jump)
          pht_2_53 <= _pht_T_3;
        else
          pht_2_53 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_90) begin
        if (io_real_jump)
          pht_2_54 <= _pht_T_3;
        else
          pht_2_54 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_91) begin
        if (io_real_jump)
          pht_2_55 <= _pht_T_3;
        else
          pht_2_55 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_92) begin
        if (io_real_jump)
          pht_2_56 <= _pht_T_3;
        else
          pht_2_56 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_93) begin
        if (io_real_jump)
          pht_2_57 <= _pht_T_3;
        else
          pht_2_57 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_94) begin
        if (io_real_jump)
          pht_2_58 <= _pht_T_3;
        else
          pht_2_58 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_95) begin
        if (io_real_jump)
          pht_2_59 <= _pht_T_3;
        else
          pht_2_59 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_96) begin
        if (io_real_jump)
          pht_2_60 <= _pht_T_3;
        else
          pht_2_60 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_97) begin
        if (io_real_jump)
          pht_2_61 <= _pht_T_3;
        else
          pht_2_61 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & _GEN_98) begin
        if (io_real_jump)
          pht_2_62 <= _pht_T_3;
        else
          pht_2_62 <= _pht_T_8;
      end
      if (io_update_en & _GEN_35 & (&pht_windex)) begin
        if (io_real_jump)
          pht_2_63 <= _pht_T_3;
        else
          pht_2_63 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_36) begin
        if (io_real_jump)
          pht_3_0 <= _pht_T_3;
        else
          pht_3_0 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_37) begin
        if (io_real_jump)
          pht_3_1 <= _pht_T_3;
        else
          pht_3_1 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_38) begin
        if (io_real_jump)
          pht_3_2 <= _pht_T_3;
        else
          pht_3_2 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_39) begin
        if (io_real_jump)
          pht_3_3 <= _pht_T_3;
        else
          pht_3_3 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_40) begin
        if (io_real_jump)
          pht_3_4 <= _pht_T_3;
        else
          pht_3_4 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_41) begin
        if (io_real_jump)
          pht_3_5 <= _pht_T_3;
        else
          pht_3_5 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_42) begin
        if (io_real_jump)
          pht_3_6 <= _pht_T_3;
        else
          pht_3_6 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_43) begin
        if (io_real_jump)
          pht_3_7 <= _pht_T_3;
        else
          pht_3_7 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_44) begin
        if (io_real_jump)
          pht_3_8 <= _pht_T_3;
        else
          pht_3_8 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_45) begin
        if (io_real_jump)
          pht_3_9 <= _pht_T_3;
        else
          pht_3_9 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_46) begin
        if (io_real_jump)
          pht_3_10 <= _pht_T_3;
        else
          pht_3_10 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_47) begin
        if (io_real_jump)
          pht_3_11 <= _pht_T_3;
        else
          pht_3_11 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_48) begin
        if (io_real_jump)
          pht_3_12 <= _pht_T_3;
        else
          pht_3_12 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_49) begin
        if (io_real_jump)
          pht_3_13 <= _pht_T_3;
        else
          pht_3_13 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_50) begin
        if (io_real_jump)
          pht_3_14 <= _pht_T_3;
        else
          pht_3_14 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_51) begin
        if (io_real_jump)
          pht_3_15 <= _pht_T_3;
        else
          pht_3_15 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_52) begin
        if (io_real_jump)
          pht_3_16 <= _pht_T_3;
        else
          pht_3_16 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_53) begin
        if (io_real_jump)
          pht_3_17 <= _pht_T_3;
        else
          pht_3_17 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_54) begin
        if (io_real_jump)
          pht_3_18 <= _pht_T_3;
        else
          pht_3_18 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_55) begin
        if (io_real_jump)
          pht_3_19 <= _pht_T_3;
        else
          pht_3_19 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_56) begin
        if (io_real_jump)
          pht_3_20 <= _pht_T_3;
        else
          pht_3_20 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_57) begin
        if (io_real_jump)
          pht_3_21 <= _pht_T_3;
        else
          pht_3_21 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_58) begin
        if (io_real_jump)
          pht_3_22 <= _pht_T_3;
        else
          pht_3_22 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_59) begin
        if (io_real_jump)
          pht_3_23 <= _pht_T_3;
        else
          pht_3_23 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_60) begin
        if (io_real_jump)
          pht_3_24 <= _pht_T_3;
        else
          pht_3_24 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_61) begin
        if (io_real_jump)
          pht_3_25 <= _pht_T_3;
        else
          pht_3_25 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_62) begin
        if (io_real_jump)
          pht_3_26 <= _pht_T_3;
        else
          pht_3_26 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_63) begin
        if (io_real_jump)
          pht_3_27 <= _pht_T_3;
        else
          pht_3_27 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_64) begin
        if (io_real_jump)
          pht_3_28 <= _pht_T_3;
        else
          pht_3_28 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_65) begin
        if (io_real_jump)
          pht_3_29 <= _pht_T_3;
        else
          pht_3_29 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_66) begin
        if (io_real_jump)
          pht_3_30 <= _pht_T_3;
        else
          pht_3_30 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_67) begin
        if (io_real_jump)
          pht_3_31 <= _pht_T_3;
        else
          pht_3_31 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_68) begin
        if (io_real_jump)
          pht_3_32 <= _pht_T_3;
        else
          pht_3_32 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_69) begin
        if (io_real_jump)
          pht_3_33 <= _pht_T_3;
        else
          pht_3_33 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_70) begin
        if (io_real_jump)
          pht_3_34 <= _pht_T_3;
        else
          pht_3_34 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_71) begin
        if (io_real_jump)
          pht_3_35 <= _pht_T_3;
        else
          pht_3_35 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_72) begin
        if (io_real_jump)
          pht_3_36 <= _pht_T_3;
        else
          pht_3_36 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_73) begin
        if (io_real_jump)
          pht_3_37 <= _pht_T_3;
        else
          pht_3_37 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_74) begin
        if (io_real_jump)
          pht_3_38 <= _pht_T_3;
        else
          pht_3_38 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_75) begin
        if (io_real_jump)
          pht_3_39 <= _pht_T_3;
        else
          pht_3_39 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_76) begin
        if (io_real_jump)
          pht_3_40 <= _pht_T_3;
        else
          pht_3_40 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_77) begin
        if (io_real_jump)
          pht_3_41 <= _pht_T_3;
        else
          pht_3_41 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_78) begin
        if (io_real_jump)
          pht_3_42 <= _pht_T_3;
        else
          pht_3_42 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_79) begin
        if (io_real_jump)
          pht_3_43 <= _pht_T_3;
        else
          pht_3_43 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_80) begin
        if (io_real_jump)
          pht_3_44 <= _pht_T_3;
        else
          pht_3_44 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_81) begin
        if (io_real_jump)
          pht_3_45 <= _pht_T_3;
        else
          pht_3_45 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_82) begin
        if (io_real_jump)
          pht_3_46 <= _pht_T_3;
        else
          pht_3_46 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_83) begin
        if (io_real_jump)
          pht_3_47 <= _pht_T_3;
        else
          pht_3_47 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_84) begin
        if (io_real_jump)
          pht_3_48 <= _pht_T_3;
        else
          pht_3_48 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_85) begin
        if (io_real_jump)
          pht_3_49 <= _pht_T_3;
        else
          pht_3_49 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_86) begin
        if (io_real_jump)
          pht_3_50 <= _pht_T_3;
        else
          pht_3_50 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_87) begin
        if (io_real_jump)
          pht_3_51 <= _pht_T_3;
        else
          pht_3_51 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_88) begin
        if (io_real_jump)
          pht_3_52 <= _pht_T_3;
        else
          pht_3_52 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_89) begin
        if (io_real_jump)
          pht_3_53 <= _pht_T_3;
        else
          pht_3_53 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_90) begin
        if (io_real_jump)
          pht_3_54 <= _pht_T_3;
        else
          pht_3_54 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_91) begin
        if (io_real_jump)
          pht_3_55 <= _pht_T_3;
        else
          pht_3_55 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_92) begin
        if (io_real_jump)
          pht_3_56 <= _pht_T_3;
        else
          pht_3_56 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_93) begin
        if (io_real_jump)
          pht_3_57 <= _pht_T_3;
        else
          pht_3_57 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_94) begin
        if (io_real_jump)
          pht_3_58 <= _pht_T_3;
        else
          pht_3_58 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_95) begin
        if (io_real_jump)
          pht_3_59 <= _pht_T_3;
        else
          pht_3_59 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_96) begin
        if (io_real_jump)
          pht_3_60 <= _pht_T_3;
        else
          pht_3_60 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_97) begin
        if (io_real_jump)
          pht_3_61 <= _pht_T_3;
        else
          pht_3_61 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & _GEN_98) begin
        if (io_real_jump)
          pht_3_62 <= _pht_T_3;
        else
          pht_3_62 <= _pht_T_8;
      end
      if (io_update_en & (&(io_pc_cmt[3:2])) & (&pht_windex)) begin
        if (io_real_jump)
          pht_3_63 <= _pht_T_3;
        else
          pht_3_63 <= _pht_T_8;
      end
      if (io_predict_fail) begin
        if (_GEN_99)
          top <= io_top_arch;
      end
      else if (io_pd_pred_fix) begin
        if (io_pd_pred_fix_is_bl & _GEN_3)
          ras_0 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_4)
          ras_1 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_5)
          ras_2 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_6)
          ras_3 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_7)
          ras_4 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_8)
          ras_5 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_9)
          ras_6 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_10)
          ras_7 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_11)
          ras_8 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_12)
          ras_9 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_13)
          ras_10 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_14)
          ras_11 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_15)
          ras_12 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_16)
          ras_13 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & _GEN_17)
          ras_14 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl & (&top))
          ras_15 <= io_pd_pc_plus_4;
        if (io_pd_pred_fix_is_bl)
          top <= top + 4'h1;
      end
      else begin
        if (_GEN_2 & _GEN_3)
          ras_0 <= _ras_T_5;
        if (_GEN_2 & _GEN_4)
          ras_1 <= _ras_T_5;
        if (_GEN_2 & _GEN_5)
          ras_2 <= _ras_T_5;
        if (_GEN_2 & _GEN_6)
          ras_3 <= _ras_T_5;
        if (_GEN_2 & _GEN_7)
          ras_4 <= _ras_T_5;
        if (_GEN_2 & _GEN_8)
          ras_5 <= _ras_T_5;
        if (_GEN_2 & _GEN_9)
          ras_6 <= _ras_T_5;
        if (_GEN_2 & _GEN_10)
          ras_7 <= _ras_T_5;
        if (_GEN_2 & _GEN_11)
          ras_8 <= _ras_T_5;
        if (_GEN_2 & _GEN_12)
          ras_9 <= _ras_T_5;
        if (_GEN_2 & _GEN_13)
          ras_10 <= _ras_T_5;
        if (_GEN_2 & _GEN_14)
          ras_11 <= _ras_T_5;
        if (_GEN_2 & _GEN_15)
          ras_12 <= _ras_T_5;
        if (_GEN_2 & _GEN_16)
          ras_13 <= _ras_T_5;
        if (_GEN_2 & _GEN_17)
          ras_14 <= _ras_T_5;
        if (_GEN_2 & (&top))
          ras_15 <= _ras_T_5;
        if (_GEN_2)
          top <= top + 4'h1;
        else if (_io_pred_npc_T)
          top <= _top_T_4;
      end
      if (io_ras_update_en & _GEN_99) begin
        if (io_predict_fail) begin
          if (jirl_sel[0])
            jirl_sel <= 2'h2;
          else
            jirl_sel <= 2'h1;
        end
        else
          jirl_sel <= {2{jirl_sel[1]}};
      end
    end
  end // always @(posedge)
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(21)
  ) xilinx_simple_dual_port_1_clock_ram (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({1'h1, io_pc_cmt[31:12]}),
    .clka  (clock),
    .wea   (io_update_en & _btb_targ_0_wea_T),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_doutb)
  );
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(21)
  ) xilinx_simple_dual_port_1_clock_ram_1 (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({1'h1, io_pc_cmt[31:12]}),
    .clka  (clock),
    .wea   (io_update_en & _btb_targ_1_wea_T),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_1_doutb)
  );
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(21)
  ) xilinx_simple_dual_port_1_clock_ram_2 (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({1'h1, io_pc_cmt[31:12]}),
    .clka  (clock),
    .wea   (io_update_en & _btb_targ_2_wea_T),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_2_doutb)
  );
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(21)
  ) xilinx_simple_dual_port_1_clock_ram_3 (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({1'h1, io_pc_cmt[31:12]}),
    .clka  (clock),
    .wea   (io_update_en & (&(io_pc_cmt[3:2]))),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_3_doutb)
  );
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(32)
  ) xilinx_simple_dual_port_1_clock_ram_4 (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({io_branch_target[31:2], io_br_type}),
    .clka  (clock),
    .wea   (io_update_en & _btb_targ_0_wea_T),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_4_doutb)
  );
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(32)
  ) xilinx_simple_dual_port_1_clock_ram_5 (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({io_branch_target[31:2], io_br_type}),
    .clka  (clock),
    .wea   (io_update_en & _btb_targ_1_wea_T),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_5_doutb)
  );
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(32)
  ) xilinx_simple_dual_port_1_clock_ram_6 (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({io_branch_target[31:2], io_br_type}),
    .clka  (clock),
    .wea   (io_update_en & _btb_targ_2_wea_T),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_6_doutb)
  );
  xilinx_simple_dual_port_1_clock_ram #(
    .RAM_DEPTH(256),
    .RAM_WIDTH(32)
  ) xilinx_simple_dual_port_1_clock_ram_7 (
    .addra (io_pc_cmt[11:4]),
    .addrb (io_npc[11:4]),
    .dina  ({io_branch_target[31:2], io_br_type}),
    .clka  (clock),
    .wea   (io_update_en & (&(io_pc_cmt[3:2]))),
    .enb   (1'h1),
    .doutb (_xilinx_simple_dual_port_1_clock_ram_7_doutb)
  );
  assign io_predict_jump_0 = _GEN_0[0];
  assign io_predict_jump_1 = _GEN_0[1];
  assign io_predict_jump_2 = _GEN_0[2];
  assign io_predict_jump_3 = _GEN_0[3];
  assign io_pred_npc =
    _io_pred_npc_T & ~(jirl_sel[1]) ? casez_tmp_9 : {casez_tmp_7, 2'h0};
  assign io_pred_valid_0 = _GEN_1[0];
  assign io_pred_valid_1 = _GEN_1[1];
  assign io_pred_valid_2 = _GEN_1[2];
  assign io_pred_valid_3 = _GEN_1[3];
endmodule

